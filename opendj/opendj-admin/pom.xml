<?xml version="1.0" encoding="UTF-8"?>
<!-- ! CDDL HEADER START ! ! The contents of this file are subject to the 
  terms of the ! Common Development and Distribution License, Version 1.0 only 
  ! (the "License"). You may not use this file except in compliance ! with 
  the License. ! ! You can obtain a copy of the license at legal-notices/CDDLv1_0.txt 
  ! or http://forgerock.org/license/CDDLv1.0.html. ! See the License for the 
  specific language governing permissions ! and limitations under the License. 
  ! ! When distributing Covered Code, include this CDDL HEADER in each ! file 
  and include the License file at legal-notices/CDDLv1_0.txt. ! If applicable, 
  add the following below this CDDL HEADER, with the ! fields enclosed by brackets 
  "[]" replaced with your own identifying ! information: ! Portions Copyright 
  [yyyy] [name of copyright owner] ! ! CDDL HEADER END ! ! Copyright 2013 ForgeRock 
  AS ! -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>opendj-project</artifactId>
    <groupId>org.forgerock.opendj</groupId>
    <version>3.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>opendj-admin</artifactId>
  <name>OpenDJ Administration API</name>
  <description>
    This module includes Administration APIs for implementing LDAP Directory
    client and server applications.
  </description>
  <!-- Change to bundle when/if we have a need -->
  <packaging>jar</packaging>
  <dependencies>
    <dependency>
      <groupId>org.forgerock.commons</groupId>
      <artifactId>i18n-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.forgerock.opendj</groupId>
      <artifactId>opendj-core</artifactId>
      <type>test-jar</type>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.forgerock.commons</groupId>
      <artifactId>i18n-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.forgerock</groupId>
      <artifactId>forgerock-build-tools</artifactId>
      <version>${forgerockBuildToolsVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.forgerock.opendj</groupId>
      <artifactId>opendj-core</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>
  <properties>
    <opendj.osgi.import>
      com.sun.security.auth*;resolution:=optional,
      *
    </opendj.osgi.import>
    <xmlDefinitionsBaseDir>${basedir}/src/main/resources/definitions</xmlDefinitionsBaseDir>
    <xmlDefinitionsDir>${xmlDefinitionsBaseDir}/org/forgerock/opendj/admin</xmlDefinitionsDir>
    <adminPackage>org/forgerock/opendj/admin</adminPackage>
    <generatedSourcesDir>${project.build.directory}/generated-sources/admin/${adminPackage}</generatedSourcesDir>
    <xslDir>${basedir}/src/main/resources/stylesheets</xslDir>

    <!-- properties used to generate DynamicConstant class -->
    <serverProductName>OpenDJ</serverProductName>
    <serverShortProductName>OpenDJ</serverShortProductName>
    <issuesFixIds></issuesFixIds>
    <isDebugBuild>false</isDebugBuild>
    <docReferenceHome>http://opendj.forgerock.org/</docReferenceHome>
    <docReferenceWiki>http://opendj.forgerock.org/docs.html</docReferenceWiki>
    <docQuickRefGuide>http://opendj.forgerock.org/doc/admin-guide/index.html</docQuickRefGuide>
    <adminGuideUrl>http://opendj.forgerock.org/doc/admin-guide/index.html</adminGuideUrl>
  </properties>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <!-- Parse the maven version to get version parts (major, minor, ...) -->
          <execution>
            <id>parse-version</id>
            <goals>
              <goal>parse-version</goal>
            </goals>
          </execution>
          <!-- Add generated source directories to build -->
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/java</source>
                <source>${project.build.directory}/generated-sources/admin</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Retrieve the SVN revision number and the build timestamp -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>1.2</version>
        <executions>
          <execution>
            <id>generate-buildnumber</id>
            <goals>
              <goal>create</goal>
            </goals>
            <configuration>
              <useLastCommittedRevision>true</useLastCommittedRevision>
              <buildNumberPropertyName>buildRevision</buildNumberPropertyName>
            </configuration>
          </execution>
          <execution>
            <id>generate-timestamp</id>
            <goals>
              <goal>create</goal>
            </goals>
            <configuration>
              <format>{0,date,yyyyMMddHHmmss}</format>
              <items>
                <item>timestamp</item>
              </items>
              <buildNumberPropertyName>buildDateTime</buildNumberPropertyName>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/generated-sources/java</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/java-templates</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.forgerock.commons</groupId>
        <artifactId>i18n-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate-messages</goal>
            </goals>
            <configuration>
              <messageFiles>
                <messageFile>com/forgerock/opendj/ldap/admin.properties</messageFile>
                <messageFile>com/forgerock/opendj/ldap/config.properties</messageFile>
                <messageFile>com/forgerock/opendj/ldap/extension.properties</messageFile>
                <messageFile>com/forgerock/opendj/ldap/protocol.properties</messageFile>
              </messageFiles>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Generate core administration components. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <version>1.0</version>
        <executions>
          <!-- Validate core components XML definition files -->
          <execution>
            <id>validate-core-components</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>validate</goal>
            </goals>
            <configuration>
              <validationSets>
                <validationSet>
                  <dir>${xmlDefinitionsDir}</dir>
                  <systemId>${xslDir}/admin.xsd</systemId>
                </validationSet>
              </validationSets>
              <catalogs>
                <catalog>${xslDir}/catalog.xml</catalog>
              </catalogs>
            </configuration>
          </execution>
          <execution>
            <id>generate-core-components</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>transform</goal>
            </goals>
            <configuration>
              <transformationSets>
                <!-- Generate introspection API for core administration components. -->
                <transformationSet>
                  <dir>${xmlDefinitionsDir}</dir>
                  <outputDir>${generatedSourcesDir}/meta</outputDir>
                  <stylesheet>${xslDir}/metaMO.xsl</stylesheet>
                  <excludes>
                    <exclude>Package.xml</exclude>
                  </excludes>
                  <fileMappers>
                    <fileMapper
                      implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                      <pattern>^([^/]+)Configuration\.xml$</pattern>
                      <replacement>$1CfgDefn.java</replacement>
                    </fileMapper>
                  </fileMappers>
                  <parameters>
                    <parameter>
                      <name>base-dir</name>
                      <value>${xmlDefinitionsBaseDir}</value>
                    </parameter>
                  </parameters>
                </transformationSet>
                <transformationSet>
                  <dir>${xmlDefinitionsDir}</dir>
                  <outputDir>${generatedSourcesDir}/meta</outputDir>
                  <stylesheet>${xslDir}/package-info.xsl</stylesheet>
                  <includes>
                    <include>Package.xml</include>
                  </includes>
                  <fileMappers>
                    <fileMapper
                      implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                      <pattern>^Package\.xml$</pattern>
                      <replacement>package-info.java</replacement>
                    </fileMapper>
                  </fileMappers>
                  <parameters>
                    <parameter>
                      <name>type</name>
                      <value>meta</value>
                    </parameter>
                  </parameters>
                </transformationSet>
                <!-- Generate server API for core administration components. -->
                <transformationSet>
                  <dir>${xmlDefinitionsDir}</dir>
                  <outputDir>${generatedSourcesDir}/server</outputDir>
                  <stylesheet>${xslDir}/serverMO.xsl</stylesheet>
                  <excludes>
                    <exclude>Package.xml</exclude>
                  </excludes>
                  <fileMappers>
                    <fileMapper
                      implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                      <pattern>^([^/]+)Configuration\.xml$</pattern>
                      <replacement>$1Cfg.java</replacement>
                    </fileMapper>
                  </fileMappers>
                  <parameters>
                    <parameter>
                      <name>base-dir</name>
                      <value>${xmlDefinitionsBaseDir}</value>
                    </parameter>
                  </parameters>
                </transformationSet>
                <transformationSet>
                  <dir>${xmlDefinitionsDir}</dir>
                  <outputDir>${generatedSourcesDir}/server</outputDir>
                  <stylesheet>${xslDir}/package-info.xsl</stylesheet>
                  <includes>
                    <include>Package.xml</include>
                  </includes>
                  <fileMappers>
                    <fileMapper
                      implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                      <pattern>^Package\.xml$</pattern>
                      <replacement>package-info.java</replacement>
                    </fileMapper>
                  </fileMappers>
                  <parameters>
                    <parameter>
                      <name>type</name>
                      <value>server</value>
                    </parameter>
                  </parameters>
                </transformationSet>
                <!-- Generate client API for core administration components. -->
                <transformationSet>
                  <dir>${xmlDefinitionsDir}</dir>
                  <outputDir>${generatedSourcesDir}/client</outputDir>
                  <stylesheet>${xslDir}/clientMO.xsl</stylesheet>
                  <excludes>
                    <exclude>Package.xml</exclude>
                  </excludes>
                  <fileMappers>
                    <fileMapper
                      implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                      <pattern>^([^/]+)Configuration\.xml$</pattern>
                      <replacement>$1CfgClient.java</replacement>
                    </fileMapper>
                  </fileMappers>
                  <parameters>
                    <parameter>
                      <name>base-dir</name>
                      <value>${xmlDefinitionsBaseDir}</value>
                    </parameter>
                  </parameters>
                </transformationSet>
                <transformationSet>
                  <dir>${xmlDefinitionsDir}</dir>
                  <outputDir>${generatedSourcesDir}/client</outputDir>
                  <stylesheet>${xslDir}/package-info.xsl</stylesheet>
                  <includes>
                    <include>Package.xml</include>
                  </includes>
                  <fileMappers>
                    <fileMapper
                      implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                      <pattern>^Package\.xml$</pattern>
                      <replacement>package-info.java</replacement>
                    </fileMapper>
                  </fileMappers>
                  <parameters>
                    <parameter>
                      <name>type</name>
                      <value>client</value>
                    </parameter>
                  </parameters>
                </transformationSet>
                <!-- Generate LDAP profile for core administration components. -->
                <transformationSet>
                  <dir>${xmlDefinitionsDir}</dir>
                  <outputDir>${project.build.outputDirectory}/admin/profiles/ldap/${adminPackage}/meta</outputDir>
                  <stylesheet>${xslDir}/ldapMOProfile.xsl</stylesheet>
                  <excludes>
                    <exclude>Package.xml</exclude>
                  </excludes>
                  <fileMappers>
                    <fileMapper
                      implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                      <pattern>^([^/]+)Configuration\.xml$</pattern>
                      <replacement>$1CfgDefn.properties</replacement>
                    </fileMapper>
                  </fileMappers>
                  <parameters>
                    <parameter>
                      <name>base-dir</name>
                      <value>${xmlDefinitionsBaseDir}</value>
                    </parameter>
                  </parameters>
                </transformationSet>
                <!-- Generate CLI profile for core administration components. -->
                <transformationSet>
                  <dir>${xmlDefinitionsDir}</dir>
                  <outputDir>${project.build.outputDirectory}/admin/profiles/cli/${adminPackage}/meta</outputDir>
                  <stylesheet>${xslDir}/cliMOProfile.xsl</stylesheet>
                  <excludes>
                    <exclude>Package.xml</exclude>
                  </excludes>
                  <fileMappers>
                    <fileMapper
                      implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                      <pattern>^([^/]+)Configuration\.xml$</pattern>
                      <replacement>$1CfgDefn.properties</replacement>
                    </fileMapper>
                  </fileMappers>
                  <parameters>
                    <parameter>
                      <name>base-dir</name>
                      <value>${xmlDefinitionsBaseDir}</value>
                    </parameter>
                  </parameters>
                </transformationSet>
                <!-- Generate I18N messages for core administration components. -->
                <transformationSet>
                  <dir>${xmlDefinitionsDir}</dir>
                  <outputDir>${project.build.outputDirectory}/admin/messages/${adminPackage}/meta</outputDir>
                  <stylesheet>${xslDir}/messagesMO.xsl</stylesheet>
                  <excludes>
                    <exclude>Package.xml</exclude>
                  </excludes>
                  <fileMappers>
                    <fileMapper
                      implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                      <pattern>^([^/]+)Configuration\.xml$</pattern>
                      <replacement>$1CfgDefn.properties</replacement>
                    </fileMapper>
                  </fileMappers>
                  <parameters>
                    <parameter>
                      <name>base-dir</name>
                      <value>${xmlDefinitionsBaseDir}</value>
                    </parameter>
                  </parameters>
                </transformationSet>
                <!-- Generate manifest file for core administration components. -->
                <transformationSet>
                  <dir>${xmlDefinitionsDir}</dir>
                  <outputDir>${project.build.directory}/tmp</outputDir>
                  <stylesheet>${xslDir}/manifestMO.xsl</stylesheet>
                  <excludes>
                    <exclude>Package.xml</exclude>
                  </excludes>
                  <fileMappers>
                    <fileMapper
                      implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                      <targetExtension>.manifest</targetExtension>
                    </fileMapper>
                  </fileMappers>
                </transformationSet>
              </transformationSets>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <!-- no lib => fail, xalan 2.7 => fail, saxon 6.5.3 => ok -->
            <groupId>saxon</groupId>
            <artifactId>saxon</artifactId>
            <version>6.5.3</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- Concatenate all single manifest files to a single manifest for 
        core administration components. -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <configuration>
              <target>
                <concat
                  destfile="${project.build.outputDirectory}/admin/core.manifest">
                  <fileset dir="${project.build.directory}/tmp"
                    includes="**/*.manifest" />
                </concat>
                <delete dir="${project.build.directory}/tmp" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>mailing-list</report>
              <report>issue-tracking</report>
              <report>license</report>
              <report>cim</report>
              <report>distribution-management</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <links>
            <link>http://commons.forgerock.org/i18n-framework/i18n-core/apidocs</link>
          </links>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
</project>
