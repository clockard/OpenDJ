user-friendly-name=Lokaler DB-Backend
user-friendly-plural-name=Lokale DB-Backends
synopsis=Der lokale DB-Backend verwendet die Berkeley DB Java Edition zum Speichern von Daten die der Benutzer angegeben hat, in einem lokalen Repository. 
description=Es ist der herk\u00f6mmliche "Directory-Server"-Backend, der den vom Sun Java System-DirectorySServer bereitgestellten Backends \u00e4hnlich ist. Der lokale DB-Backend speichert die Eintr\u00e4ge in einem codierten Format und stellt auch Indizes bereit, mit denen auf Basis unterschiedlicher Kriterientypen Zieleintr\u00e4ge schnell gesucht werden k\u00f6nnen.
property.backend-id.synopsis=Gibt einen Namen an um das assoziierte Backend zu identifizieren.
property.backend-id.description=Der Name muss innerhalb aller Backends im Server eindeutig sein. Die Backend-Id kann nach dem Anlegen im Server nicht mehr ver\u00e4ndert werden.
property.base-dn.synopsis=Gibt die Basis-DNs der Daten die ein Backend verwaltet an.
property.base-dn.description=Ein einzelnes Backend kann f\u00fcr eine oder mehrere Basis-DNs verantwortlich sein. Achtung: Die selbe Base-DN kann nicht innerhalb Zwei Backends definiert sein, aber ein Backend darf eine Basis-DN verwalten welche unter einer anderen Basis-DN liegt die durch ein anderes Backend verwaltet wird. (\u00e4hnlich wie bei der Benutzung von Sub-Suffixen im SUn Java System Directory Server) Falls irgendeine Basis-Dn eine untergeorgnete DN einer Basis-Dn die durch ein anderes Backend verwaltet wird ist, dann m\u00fcssen alle Basis-DNs f\u00fcr das Backend zur selben Basis-DN untergeordnet sein.
property.base-dn.requires-admin-action.synopsis=Es ist standardm\u00e4ssig keine Admint\u00e4tigkeit vonn\u00f6ten. Es kann aber sein dass Admint\u00e4tigkeit auf einer pro Backend Basis ben\u00f6tigt wird bevor eine neue Basis-DN benutzt werden kann.
property.compact-encoding.synopsis=Gibt an, ob der Backend beim Codieren von Cache-Eintr\u00e4gen eine kompakte Form verwenden sollen, in der die Attribute und Objektklassens\u00e4tze komprimiert werden.
property.compact-encoding.description=Beachten Sie, dass diese Eigenschaft nur f\u00fcr die Eintr\u00e4ge selbst gilt und sich nicht auf die Indexdaten auswirkt.
property.compact-encoding.requires-admin-action.synopsis=\u00c4nderungen an dieser Einstellung gelten nur f\u00fcr Schreibvorg\u00e4nge, die nach der \u00c4nderung ausgef\u00fchrt werden. Sie werden nicht r\u00fcckwirkend auf vorhandene Daten angewandt.
property.db-cache-percent.synopsis=Gibt den Prozentsatz des JVM-Speichers an, der dem Datenbank-Cache zugewiesen wird.
property.db-cache-percent.description=Gibt den Prozentsatz des Speichers an, der der JVM zur Verf\u00fcgung steht, die zum Zwischenspeichern von Datenbankinhalt verwendet werden soll. Beachten Sie, dass dies nur verwendet wird, wenn der Wert des Eigenschaft db-cache-size auf "0 MB" festgelegt ist. Andernfalls wird der Wert dieser Eigenschaft verwendet, statt die Konfiguration der Cache-Gr\u00f6\u00dfe zu steuern.
property.db-cache-size.synopsis=Die Gr\u00f6\u00dfe des JVM-Speichers, der dem Datenbank-Cache zugewiesen wird.
property.db-cache-size.description=Gibt die Gr\u00f6\u00dfe des Arbeitsspeichers an, der zum Zwischenspeichern von Datenbankinhalt verwendet wird. Der Wert "0 MB" gibt an, dass die Eigenschaft db-cache-percent verwendet werden soll, statt die Cachegr\u00f6\u00dfe anzugeben.
property.db-checkpointer-bytes-interval.synopsis=Gibt die maximale Anzahl der Byte an, die in die Datenbank geschrieben werden k\u00f6nnen, bevor sie gezwungen wird, einen Pr\u00fcfpunkt auszuf\u00fchren.
property.db-checkpointer-bytes-interval.description=Damit kann die Wiederherstellungszeit begrenzt werden, die erforderlich ist, wenn die Datenbankumgebung ge\u00f6ffnet ist, ohne zuvor einwandfrei geschlossen zu werden. Wenn diese Eigenschaft auf einen anderen Wert als null eingestellt ist, wird das Pr\u00fcfsummen-Weckintervall nicht verwendet. Zum Verwenden des zeitgest\u00fctzten Pr\u00fcfsummenverfahrens legen Sie diese Eigenschaft auf null fest.
property.db-checkpointer-wakeup-interval.synopsis=Gibt die maximale Zeitspanne an, die zwischen Pr\u00fcfpunkten liegen darf.
property.db-checkpointer-wakeup-interval.description=Beachten Sie, dass dies nur verwendet wird, wenn der Wert des Checkpointer-Byte-Intervalls bei null liegt.
property.db-cleaner-min-utilization.synopsis=Gibt den minimalen Prozentsatz der "Live"-Daten an, die die Datenbanks\u00e4uberung in Datenbankprotokolldateien beizubehalten versucht.
property.db-cleaner-min-utilization.description=Wenn die Gr\u00f6\u00dfe der Live-Daten in einer Datenbankprotokolldatei unter diesen Prozentsatz f\u00e4llt, verschiebt die S\u00e4uberung die verbleibenden Live-Daten in dieser Datei an das Ende der Datenbank und l\u00f6scht die urspr\u00fcngliche Datei, um die Datenbank relativ kompakt zu halten. 
property.db-directory.synopsis=Gibt den Pfad zum Dateisystemverzeichnis an, die dem sich die Berkeley DB Java Edition-Datenbankdateien mit den Daten f\u00fcr diesen Backend befinden.
property.db-directory.description=Der Pfad kann ein absoluter Pfad oder ein Pfad sein, der relativ zum Verzeichnis mit der Basis der OpenDS-Directory-Server-Installation ist. Der Pfad kann jeder g\u00fcltige Verzeichnispfad sein, in dem der Server ausreichende Berechtigungen zum Lesen und Schreiben von Dateien und ausreichende Kapazit\u00e4t f\u00fcr den Datenbankinhalt hat.
property.db-directory-permissions.synopsis=Gibt die Berechtigungen an, die auf das Verzeichnis mit den Serverdatenbankdateien angewandt werden m\u00fcssen.
property.db-directory-permissions.description=Sie m\u00fcssen als dreistellige Oktalwerte angegeben werden, der herk\u00f6mmlichen Darstellung von UNIX-Dateiberechtigungen. Diese drei Ziffern geben die Berechtigungen an, die dem Eigent\u00fcmer des Verzeichnisses, Gruppenmitgliedern und anderen Benutzern (in dieser Reihenfolge) zur Verf\u00fcgung stehen. Jede Ziffer ist die oktale Darstellung der Lese-, Schreib- und Ausf\u00fchrungs-Bits. Beachten Sie, dass dies nur Berechtigungen im Datenbankverzeichnis betrifft und nicht die Dateien, die in dieses Verzeichnis geschrieben werden. Auf UNIX-Systemen steuert die Umask des Benutzer die Berechtigungen f\u00fcr die Datenbankdateien.
property.db-directory-permissions.syntax.string.pattern.synopsis=Jeder Oktalwert zwischen 700 und 777 (der Eigent\u00fcmer muss immer Lese-, Schreib- und Ausf\u00fchrungsberechtigungen im Verzeichnis haben).
property.db-evictor-lru-only.synopsis=Gibt an, ob die Datenbank auf Basis einer LRU-Richtlinie bestehende Daten aus dem Cache entfernen soll (die Daten, die am l\u00e4ngsten nicht mehr verwendet wurden, werden als erste entfernt).
property.db-evictor-lru-only.description=Bei einer Einstellung auf "false" beh\u00e4lt der Entfernungsvorgang interne Knoten des zugrunde liegenden Btree im Cache gegen\u00fcber den Blattknoten beibehalten, auch wenn auf die Blattknoten vor k\u00fcrzerer Zeit zugegriffen wurde. Dies ist unter Umst\u00e4nden eine bessere Konfiguration f\u00fcr Datenbanken, in denen nur ein sehr kleiner Teil der Daten zwischengespeichert wird.
property.db-evictor-nodes-per-scan.synopsis=Gibt die Anzahl der Btree-Knoten an, die in einem einzelnen Durchlauf aus dem Cache entfernt werden sollen, wenn ermittelt wird, dass die erforderlich ist, um bestehende Daten freizusetzen, um Kapazit\u00e4t f\u00fcr neue Informationen zu schaffen.
property.db-evictor-nodes-per-scan.description=\u00c4nderungen an dieser Eigenschaft werden erst nach einem Neustart des Backend wirksam. Es wird empfohlen, dass Sie auch diese Eigenschaft \u00e4ndern, wenn Sie db-evictor-lru-only auf false einstellen. Diese Einstellung steuert die Anzahl der Btree-Knoten, die ber\u00fccksichtigt oder gepr\u00fcft werden, wenn ein Knoten entfernt wird. Eine Einstellung von 100 erbringt h\u00e4ufig gute Ergebnisse, aber die kann von Anwendung zu Anwendung variieren. Je gr\u00f6\u00dfer die Knoten pro Scan, desto genauer ist der Algorithmus. Eine zu hohe Einstellung wirkt sich jedoch nachteilig aus. Die Anforderung, gro\u00dfer Anzahlen von Knoten f\u00fcr jedes Entfernen zu ber\u00fccksichtigen, kann den Abschluss eines Datenbankvorgangs verz\u00f6gern. Damit wird die Reaktionszeit des Anwendungs-Threas beeintr\u00e4chtigt.
property.db-log-file-max.synopsis=Gibt die maximale Gr\u00f6\u00dfe einer Datenbankprotokolldatei an.
property.db-logging-file-handler-on.synopsis=Gibt an, ob die Datenbank eine je.info-Datei im selben Verzeichnis mit dem Datenbankprotokollverzeichnis beibehalten soll.
property.db-logging-file-handler-on.description=Diese Datei enth\u00e4lt Informationen zur internen Verarbeitung, die die zugrunde liegende Datenbank ausf\u00fchrt.
property.db-logging-level.synopsis=Gibt die Protokollebene an, die von der Datenbank verwendet wird, wenn sie Informationen in die je.info-Datei schreibt.
property.db-logging-level.description=Die Protokollebene f\u00fcr die Datenbankverfolgung (in aufsteigender Reihenfolge der Wortf\u00fclle), ausgew\u00e4hlt unter: AUS, SCHWERWIEGEND, WARNUNG, INFO, KONFIG, GENAU, GENAUER, SEHR GENAU, ALLE.
property.db-num-cleaner-threads.synopsis=Gibt die Anzahl der Threads an, die der Backend verwenden muss, um die Datenbankprotokolldateien auf oder in der N\u00e4he der gew\u00fcnschten Auslastung beizubehalten.
property.db-num-cleaner-threads.description=In Umgebungen mit hohem Datendurchsatz k\u00f6nnen mehrere S\u00e4uberungsthreads erforderlich sein, um die gew\u00fcnschte Auslastung zu erzielen.
property.db-num-lock-tables.synopsis=Gibt die Anzahl der Sperrtabellen an, die von der zugrunde liegenden Datenbank verwendet werden.
property.db-num-lock-tables.description=Dies kann besonders wichtig sein, um die Skalierbarkeit zu verbessern, da Gegens\u00e4tze auf Systemen mit zahlreichen CPUs vermieden werden. Der Wert dieser Konfigurationseigenschaft muss auf eine Primzahl eingestellt werden, die gleich oder kleiner als die Zahl der Arbeitsthreads, die zur Verwendung auf dem Server konfiguriert sind.
property.db-run-cleaner.synopsis=Gibt an, ob die Datenbanks\u00e4uberungs-Threads aktiviert sein m\u00fcssen.
property.db-run-cleaner.description=Mit den S\u00e4uberungsthreads wird die Datenbank von Zeit zu Zeit komprimiert, indem die Datenbankdateien mit einem niedrigen (kleiner als die Menge, die \u00fcber die Eigenschaft db-cleaner-min-utilization) Prozentsatz von Live-Daten identifiziert, die verbleibenden Daten an das Ende des Protokolls verschoben werden und diese Datei gel\u00f6scht wird.
property.db-txn-no-sync.synopsis=Gibt an, ob Datenbankschreibvorg\u00e4nge prim\u00e4r in einen internen Puffer und nicht sofort auf die Festplatte geschrieben werden sollen.
property.db-txn-no-sync.description=Wenn der Wert des Konfigurationsattributs auf "true" festgelegt wird, kann die Schreibleistung verbessert werden, aber k\u00f6nnen die letzten \u00c4nderungen verloren gehen, wenn der OpenDS-Directory-Server oder die zugrunde liegende JVM abnormal beendet werden oder wenn ein Betriebssystem- oder Hardwarefehler auftritt (ein Verhalten wie das Ausf\u00fchren mit deaktivierter Transaktionsdauerhaftigkeit auf dem Sun Java System-Directory-Server).
property.db-txn-write-no-sync.synopsis=Gibt an, ob die Datenbank Daten synchron leeren soll, wenn sie auf die Festplatte geschrieben werden.
property.db-txn-write-no-sync.description=Wenn dieser Wert auf "false" eingestellt ist, werden alle auf die Festplatte geschriebenen Daten synchron in den dauerhaften Speicher geleert. Damit wird vollst\u00e4ndige Dauerhaftigkeit erzielt. Wenn der Wert auf "true" eingestellt wird, k\u00f6nnen die Daten vom zugrunde liegenden Betriebssystem einige Zeit zwischengespeichert werden, bevor sie auf die Festplatte geschrieben werden. Damit kann die Leistung gespeichert werden, aber unter Umst\u00e4nden gehen die letzten \u00c4nderungen verloren, wenn ein Fehler im zugrunde liegenden Betriebssystem oder der Hardware auftritt (aber nicht in F\u00e4llen, in denen der OpenDS-Directory-Server oder die JVM abnormal beendet werden).
property.enabled.synopsis=Gibt an ob das Backend im Server aktiviert ist.
property.enabled.description=Wenn ein Backend nicht aktiviert ist so sind dessen Daten auch nicht verf\u00fcgbar, egal f\u00fcr welche Verarbeitung.
property.entries-compressed.synopsis=Gibt an, ob der Backend versuchen soll, Eintr\u00e4ge vor dem Speichern in der Datenbank zu komprimieren.
property.entries-compressed.description=Beachten Sie, dass diese Eigenschaft nur f\u00fcr die Eintr\u00e4ge selbst gilt und sich nicht auf die Indexdaten auswirkt. Au\u00dferdem beruht die Wirksamkeit der Komprimierung auf dem Typ der Daten im Eintrag.
property.entries-compressed.requires-admin-action.synopsis=\u00c4nderungen an dieser Einstellung gelten nur f\u00fcr Schreibvorg\u00e4nge, die nach der \u00c4nderung ausgef\u00fchrt werden. Sie werden nicht r\u00fcckwirkend auf vorhandene Daten angewandt.
property.import-queue-size.synopsis=Gibt die Gr\u00f6\u00dfe (in Anzahl von Eintr\u00e4gen) der Warteschlange an, in der sich die w\u00e4hrend eines LDIF-Imports gelesenen Eintr\u00e4ge befinden.
property.import-queue-size.requires-admin-action.synopsis=\u00c4nderungen werden nicht f\u00fcr Importe wirksam, die bereits aktiv sind.
property.import-thread-count.synopsis=Gibt die Anzahl der Threads an, die w\u00e4hrend eines LDIF-Imports zur gleichzeitigen Verarbeitung verwendet werden.
property.import-thread-count.description=Allgemein muss es sich um einen niedrigen Multiplikator (z. B. 2x) der Anzahl der CPUs im System bei einem herk\u00f6mmlichen System oder um den Wert wie die Anzahl der CPU-Str\u00e4nge bei einem CMT-System handeln.
property.import-thread-count.requires-admin-action.synopsis=\u00c4nderungen werden nicht f\u00fcr Importe wirksam, die bereits aktiv sind.
property.index-entry-limit.synopsis=Gibt die maximale Anzahl der Eintr\u00e4ge an, die mit einem angegebenen Indexschl\u00fcssel abgestimmt werden k\u00f6nnen, bevor dieser Indexschl\u00fcssel nicht mehr beibehalten wird.
property.index-entry-limit.description=Diese Eigenschaft ist analog zu ALLEN IDs-Schwellenwerten im Sun Java System-Directory-Server. Beachten Sie, dass dies das Standardlimit f\u00fcr den Backend ist, und er kann f\u00fcr jedes einzelne Attribut \u00fcberschrieben werden. Ein Wert von 0 bedeutet, dass kein Limit besteht.
property.index-entry-limit.requires-admin-action.synopsis=Wenn Indexschl\u00fcssel dieses Limit bereits erreicht haben, m\u00fcssen die Indizes neu erstellt werden, bevor sie das neue Limit verwenden k\u00f6nnen.
property.java-class.synopsis=Gibt den vollqualifizierten Java Klassennamen an welche das Backend implementiert.
property.je-property.synopsis=Gibt die Datenbank- und Umgebungseigenschaften f\u00fcr die Berkeley DB Java Edition-Datenbank an, die die Daten f\u00fcr diesen Backend bedient.
property.je-property.description=Mit dem folgenden Format kann jede Berkeley DB Java Edition-Eigenschaft angegeben werden: property-name=property-value. Die OpenDS-Dokumentation enth\u00e4lt weitere Infomationen zu verwandten Eigenschaften, ihrer Bedeutung und den Bereichswerten. Die definitive Identifizierung aller Eigenschaftsparameter, die in der Datei example.properties in der Berkeley DB Java Edition-Distribution verf\u00fcgbar sind.
property.preload-time-limit.synopsis=Gibt die Zeitspanne an, in der der Backend "Vorlade"-Daten verbrauchen kann, wenn er initialisiert wird.
property.preload-time-limit.description=Der Vorladeprozess wird zum Vorf\u00fcllen des Datenbankcaches verwendet, damit er schneller verf\u00fcgbar ist, wenn der Server Abfragen verarbeitet. Eine Zeitspanne von null bedeutet, dass kein Vorladen stattfindet.
property.writability-mode.synopsis=Gibt das Verhalten an welches das Backend annehmen soll wenn Schreiboperationen durchgef\u00fchrt werden.
property.writability-mode.syntax.enumeration.value.disabled.synopsis=Bewirkt dass alle Schreiboperationen fehlschlagen.
property.writability-mode.syntax.enumeration.value.enabled.synopsis=Erlaubt dass Schreiboperationen im Backend durchgef\u00fchrt werden k\u00f6nnen. Trifft dann zu wenn wenn die angeforderte Operation g\u00fcltig ist, der User berechtigt ist die Operation auszuf\u00fchren, das Backend den Typ von Schreiboperation unterst\u00fctzt und die Globale-Beschreibbarkeitsmodus Eigenschaft (global writability mode property)  aktiviert ist.
property.writability-mode.syntax.enumeration.value.internal-only.synopsis=Bewirkt dass externe Schreiboperatioenen fehlschlagen aber erlaubt das Schreiben welches durch Replikation oder interne Operationen verursacht wird.
relation.local-db-index.user-friendly-name=Lokaler DB-Index
relation.local-db-index.user-friendly-plural-name=Lokale DB-Indizes
relation.local-db-index.synopsis=Lokale DB-Indizes werden zum Speichern von Informationen verwendet, die es erm\u00f6glichen, Eintr\u00e4ge sehr schnell ausfindig zu machen, wenn Suchvorg\u00e4nge verarbeitet werden.
relation.local-db-index.description=Die Indizierung wird auf Ebene jedes einzelnen Attributs ausgef\u00fchrt, und an unterschiedlichen Attributstypen k\u00f6nnen unterschiedliche Indizierungstypen ausgef\u00fchrt werden, abh\u00e4ngig davon, wie w\u00e4hrend Suchvorg\u00e4ngen auf sie zugegriffen werden soll.
relation.local-db-vlv-index.user-friendly-name=Lokaler Datenbank-VLV-Index
relation.local-db-vlv-index.user-friendly-plural-name=Lokale Datenbank-VLV-Indizes
relation.local-db-vlv-index.synopsis=Lokale Datenbank-VLV-Indizes werden verwendet, um Informationen zu einer bestimmten Suchabfrage zu speichern. Damit wird es erm\u00f6glicht, \u00fcber die VLV-Steuerung effizient zu suchen.
relation.local-db-vlv-index.description=Ein VLV-Index benachrichtigt den Server, dass eine virtuelle Listenansicht mit spezifischen Abfrage- und Sortierparameter ausgef\u00fchrt wird. Dieser Index erm\u00f6glicht es dem Server auch, die Informationen zu erfassen und zu speichern, die zum Beschleunigen der virtuellen Listenansicht ben\u00f6tigt werden.
