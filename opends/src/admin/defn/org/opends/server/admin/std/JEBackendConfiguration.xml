<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !
 !      Portions Copyright 2007 Sun Microsystems, Inc.
 ! -->

<?xml version="1.0" encoding="UTF-8"?>
<adm:managed-object name="je-backend" plural-name="je-backends"
  package="org.opends.server.admin.std"
  extends="backend"
  xmlns:adm="http://www.opends.org/admin"
  xmlns:ldap="http://www.opends.org/admin-ldap">
  <adm:synopsis>
    The primary backend provided by the OpenDS Directory Server uses the
    Berkeley DB Java Edition to store user-provided data in a local repository.
    It is the traditional "directory server" backend and is similar to the
    backends provided by the Sun Java System Directory Server.
  </adm:synopsis>
  <adm:description>
    The <adm:user-friendly-name/> stores the entries in an encoded form and
    also provides indexes that can be used to quickly locate target entries
    based on different kinds of criteria.
    The org.opends.server.backends.jeb.BackendImpl class provides the
    implementation for this backend, and therefore should be used as the
    value of the ds-cfg-backend-class-name property.
  </adm:description>
  <adm:profile name="ldap">
    <ldap:object-class>
      <ldap:oid>1.3.6.1.4.1.26027.1.2.6</ldap:oid>
      <ldap:name>ds-cfg-je-backend</ldap:name>
      <ldap:superior>ds-cfg-backend</ldap:superior>
    </ldap:object-class>
  </adm:profile>
  <adm:property name="backend-deadlock-retry-limit"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Specifies the number of times that the server should retry an attempted
      operation in the backend if a deadlock results from two concurrent
      requests that interfere with each other in a conflicting manner.
    </adm:synopsis>
    <adm:description>
      A value of "0" indicates no limit.
    </adm:description>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>10</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:integer  lower-limit="0" />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.267</ldap:oid>
        <ldap:name>ds-cfg-backend-deadlock-retry-limit</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="backend-directory"
    mandatory="true"
    multi-valued="false">
    <adm:synopsis>
      Specifies the path to the filesystem directory that will be used to hold
      the Berkeley DB Java Edition database files containing the data for this
      backend.
    </adm:synopsis>
    <adm:description>
      The path may be either an absolute path or a path relative to the
      directory containing the base of the OpenDS Directory Server installation.
      The path may be any valid directory path in which the server has
      appropriate permissions to read and write files and has sufficient space
      to hold the database contents.
    </adm:description>
    <adm:requires-admin-action>
      <adm:component-restart/>
    </adm:requires-admin-action>
    <adm:syntax>
      <adm:string />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.12</ldap:oid>
        <ldap:name>ds-cfg-backend-directory</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="backend-entries-compressed"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Indicates whether the backend should attempt to compress entries before
      storing them in the database.
    </adm:synopsis>
    <adm:description>
      Note that this property applies only to the entries themselves
      and does not impact the index data.  Further, the effectiveness of the
      compression will be based on the type of data contained in the entry.
    </adm:description>
    <adm:requires-admin-action>
      <adm:other>
        <adm:synopsis>
          Changes to this setting will only take effect for writes that occur
          after the change is made.  It will not be retroactively applied to
          existing data.
        </adm:synopsis>
      </adm:other>
    </adm:requires-admin-action>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>false</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:boolean />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.266</ldap:oid>
        <ldap:name>ds-cfg-backend-entries-compressed</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="backend-import-buffer-size"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Specifies the amount of memory that should be used as an internal
      buffer for index information when processing an LDIF import.
    </adm:synopsis>
    <adm:requires-admin-action>
      <adm:other>
        <adm:synopsis>
          No admin action required, although changes will not take effect for
          any import that may already be in progress.
        </adm:synopsis>
      </adm:other>
    </adm:requires-admin-action>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>256mb</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:size lower-limit="10mb"/>
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.263</ldap:oid>
        <ldap:name>ds-cfg-backend-import-buffer-size</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="backend-import-pass-size"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Specifies the maximum number of entries that should be imported in each
      import pass.
    </adm:synopsis>
    <adm:description>
      An import pass consists of the processing required to import a set of
      entries as well as the index post-processing required to index those
      entries.  A value of zero for this property indicates that all entries
      should be processed in a single pass, which is the recommended
      configuration for most deployments, although a non-zero value may be
      required when importing a very large number of entries if the amount
      of memory required for index post-processing exceeds the total amount
      available to the server.
    </adm:description>
    <adm:requires-admin-action>
      <adm:other>
        <adm:synopsis>
          No admin action required, although changes will not take effect for
          any import that may already be in progress.
        </adm:synopsis>
      </adm:other>
    </adm:requires-admin-action>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>0</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:integer  lower-limit="0"  upper-limit="2147483647" />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.277</ldap:oid>
        <ldap:name>ds-cfg-backend-import-pass-size</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="backend-import-queue-size"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Specifies the size (in number of entries) of the queue that will be used
      to hold the entries read during an LDIF import.
    </adm:synopsis>
    <adm:requires-admin-action>
      <adm:other>
        <adm:synopsis>
          No admin action required, although changes will not take effect for
          any import that may already be in progress.
        </adm:synopsis>
      </adm:other>
    </adm:requires-admin-action>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>100</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:integer  lower-limit="1" />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.264</ldap:oid>
        <ldap:name>ds-cfg-backend-import-queue-size</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="backend-import-temp-directory"
    mandatory="true"
    multi-valued="false">
    <adm:synopsis>
      Specifies the location of the directory that will be used for the
      files used to hold temporary information that will be used during the
      index post-processing phase of an LDIF import.
    </adm:synopsis>
    <adm:description>
      The specified directory will only be used while an import is in progress
      and the files created in this directory will be deleted as they are
      processed. It may be an absolute path or one that is relative to the
      instance root directory.
    </adm:description>
    <adm:requires-admin-action>
      <adm:other>
        <adm:synopsis>
          No admin action required, although changes will not take effect for
          any import that may already be in progress.
        </adm:synopsis>
      </adm:other>
    </adm:requires-admin-action>
    <adm:default-behavior>
      <adm:undefined/>
    </adm:default-behavior>
    <adm:syntax>
      <adm:string />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.262</ldap:oid>
        <ldap:name>ds-cfg-backend-import-temp-directory</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="backend-import-thread-count"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Specifies the number of threads that will be used for concurrent
      processing during an LDIF import.
    </adm:synopsis>
    <adm:description>
      This should generally be a small multiple (e.g., 2x) of the number of CPUs
      in the system for a traditional system, or equal to the number of CPU
      strands for a CMT system.
    </adm:description>
    <adm:requires-admin-action>
      <adm:other>
        <adm:synopsis>
          No admin action required, although changes will not take effect for
          any import that may already be in progress.
        </adm:synopsis>
      </adm:other>
    </adm:requires-admin-action>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>8</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:integer  lower-limit="1" />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.265</ldap:oid>
        <ldap:name>ds-cfg-backend-import-thread-count</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="backend-index-entry-limit"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Specifies the maximum number of entries that will be allowed to
      match a given index key before that particular index key is no longer
      maintained (i.e., it is analogous to the ALL IDs threshold in the Sun
      Java System Directory Server). Note that this is the default limit for
      the backend, and it may be overridden on a per-attribute basis.
    </adm:synopsis>
    <adm:description>
      Note that this is the default limit for the backend, and it may be
      overridden on a per-attribute basis. A value of 0 means there is no limit.
    </adm:description>
    <adm:requires-admin-action>
      <adm:other>
        <adm:synopsis>
          No admin action is required, although if any index keys have already
          reached this limit, indexes will need to be rebuilt before they will
          be allowed to use the new limit.
        </adm:synopsis>
      </adm:other>
    </adm:requires-admin-action>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>4000</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:integer  lower-limit="0" />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.15</ldap:oid>
        <ldap:name>ds-cfg-backend-index-entry-limit</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="backend-mode"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Specifies the permissions that should be applied to the directory
      containing the server database files.  They should be expressed as
      three-digit octal values, which is the traditional representation for
      UNIX file permissions.
    </adm:synopsis>
    <adm:description>
      The three digits represent the permissions that will be available for the
      directory's owner, group members, and other users (in that order), and
      each digit is the octal representation of the read, write, and execute
      bits.
      Note that this only impacts permissions on the database directory and
      not on the files written into that directory. On UNIX systems, the
      user's umask will control permissions given to the database files.
    </adm:description>
    <adm:requires-admin-action>
      <adm:server-restart/>
    </adm:requires-admin-action>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>700</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:string>
        <adm:pattern>
          <adm:regex>7[0-7][0-7]</adm:regex>
          <adm:synopsis>
            Any octal value between 700 and 777 (the owner must always have
            read, write, and execute permissions on the directory).
          </adm:synopsis>
        </adm:pattern>
      </adm:string>
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.287</ldap:oid>
        <ldap:name>ds-cfg-backend-mode</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="backend-preload-time-limit"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Specifies the length of time that the backend will be allowed to
      spend "pre-loading" data when it is initialized.
    </adm:synopsis>
    <adm:description>
      The pre-load process may be used to pre-populate the database cache so
      that it can be more quickly available when the server is processing
      requests.  A duration of zero means there will be no pre-load.
    </adm:description>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>0s</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:duration base-unit="ms" lower-limit="0"/>
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.261</ldap:oid>
        <ldap:name>ds-cfg-backend-preload-time-limit</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="backend-subtree-delete-size-limit"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Specifies the maximum number of entries that may be deleted from the
      backend when using the subtree delete control.
    </adm:synopsis>
    <adm:description>
      If a subtree delete operation targets a subtree with more than this
      number of entries, then multiple passes may be required to remove all
      entries in that subtree.
    </adm:description>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>100000</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:integer  lower-limit="0" />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.16</ldap:oid>
        <ldap:name>ds-cfg-backend-subtree-delete-size-limit</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="database-cache-percent"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      The percentage of JVM memory to allocate to the database cache.
    </adm:synopsis>
    <adm:description>
      Specifies the percentage of memory available to the JVM that should
      be used for caching database contents. Note that this will only be used
      if the value of the database-cache-size property is set to "0 MB".
      Otherwise, the value of that property will be used instead to control
      the cache size configuration.
    </adm:description>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>10</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:integer  lower-limit="1"  upper-limit="90" />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.25</ldap:oid>
        <ldap:name>ds-cfg-database-cache-percent</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="database-cache-size"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      The amount of JVM memory to allocate to the database cache.
    </adm:synopsis>
    <adm:description>
      Specifies the amount of memory that should be used for caching database
      contents. A value of "0 MB" indicates that the database-cache-percent
      property should be used instead to specify the cache size.
    </adm:description>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>0 MB</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:size lower-limit="0 MB" />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.27</ldap:oid>
        <ldap:name>ds-cfg-database-cache-size</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="database-cleaner-min-utilization"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Specifies the minimum percentage of "live" data that the database cleaner
      will attempt to keep in database log files.
    </adm:synopsis>
    <adm:description>
      If the amount of live data in any database log file drops below this
      percentage, then the cleaner will move the remaining live data in that
      file to the end of the database and will delete the original file in
      order to keep the database relatively compact.
    </adm:description>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>75</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:integer  lower-limit="0"  upper-limit="90" />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.26</ldap:oid>
        <ldap:name>ds-cfg-database-cleaner-min-utilization</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="database-run-cleaner"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      This indicates whether the database cleaner threads should be enabled.
    </adm:synopsis>
    <adm:description>
      The cleaner threads will be used to periodically compact the database by
      identifying database files with a low (i.e., less than the amount
      specified by the database-cleaner-min-utilization property)
      percentage of live data, moving the remaining live data to the end of the
      log and deleting that file.
    </adm:description>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>true</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:boolean />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.28</ldap:oid>
        <ldap:name>ds-cfg-database-run-cleaner</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="database-evictor-lru-only"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Indicates whether the database should evict existing data from the cache
      based on an LRU policy (where the least recently used information will be
      evicted first).
    </adm:synopsis>
    <adm:description>
      If the value of this configuration property is set to "false", then
      eviction will prefer to keep internal nodes of the underlying Btree in
      the cache over leaf notes, even if the leaf nodes have been accessed
      more recently, which may be a better configuration for databases in
      which only a very small portion of the data is cached.
    </adm:description>
    <adm:requires-admin-action>
      <adm:component-restart/>
    </adm:requires-admin-action>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>true</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:boolean />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.268</ldap:oid>
        <ldap:name>ds-cfg-database-evictor-lru-only</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="database-evictor-nodes-per-scan"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Specifies the number of Btree nodes that should be evicted from the
      cache in a single pass if it is determined that it is necessary to
      free existing data in order to make room for new information.
    </adm:synopsis>
    <adm:description>
      Changes to this property do not take effect until the backend is
      restarted.  It is recommended that you also change this property when you
      set database-evictor-lru-only to false. This setting controls the number
      of Btree nodes that are considered, or sampled, each time a node is
      evicted. A setting of 100 often produces good results, but this may vary
      from application to application. The larger the nodesPerScan, the more
      accurate the algorithm. However, setting it too high is detrimental;
      the need to consider larger numbers of nodes for each eviction may
      delay the completion of a given database operation, which will impact
      the response time of the application thread.
    </adm:description>
    <adm:requires-admin-action>
      <adm:component-restart/>
    </adm:requires-admin-action>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>10</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:integer  lower-limit="1"  upper-limit="1000" />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.269</ldap:oid>
        <ldap:name>ds-cfg-database-evictor-nodes-per-scan</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="database-log-file-max"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Specifies the maximum size that may be used for a database log file.
    </adm:synopsis>
    <adm:requires-admin-action>
      <adm:component-restart/>
    </adm:requires-admin-action>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>50mb</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:size lower-limit="1mb" upper-limit="4gib"/>
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.270</ldap:oid>
        <ldap:name>ds-cfg-database-log-file-max</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="database-logging-file-handler-on"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Indicates whether the database should maintain a je.info file in the same
      directory as the database log directory. This file will contain
      information about the internal processing performed by the underlying
      database.
    </adm:synopsis>
    <adm:requires-admin-action>
      <adm:component-restart/>
    </adm:requires-admin-action>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>true</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:boolean />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.271</ldap:oid>
        <ldap:name>ds-cfg-database-logging-file-handler-on</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="database-logging-level"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      This specifies the log level that should be used by the database when
      it is writing information into the je.info file.
    </adm:synopsis>
    <adm:description>
      The database trace logging level is (in increasing order of verbosity)
      chosen from: OFF, SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST, ALL.
    </adm:description>
    <adm:requires-admin-action>
      <adm:component-restart/>
    </adm:requires-admin-action>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>CONFIG</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:string />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.272</ldap:oid>
        <ldap:name>ds-cfg-database-logging-level</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="database-checkpointer-bytes-interval"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Specifies the maximum number of bytes that may be written to the database
      before it will be forced to perform a checkpoint.
    </adm:synopsis>
    <adm:description>
      This can be used to bound the recovery time that may be required if the
      database environment is opened without having been properly closed.
      If this propertyis set to a non-zero value, the checkpointer wakeup
      interval is not used.  To use time based checkpointing, set this
      property to zero.
    </adm:description>
    <adm:requires-admin-action>
      <adm:server-restart/>
    </adm:requires-admin-action>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>20mb</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:size lower-limit="0b" upper-limit="9223372036854775807b"/>
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.273</ldap:oid>
        <ldap:name>ds-cfg-database-checkpointer-bytes-interval</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="database-checkpointer-wakeup-interval"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Specifies the maximum length of time that may pass between checkpoints.
    </adm:synopsis>
    <adm:description>
      Note that this will only be used if the value of the checkpointer bytes
      interval is zero.
    </adm:description>
    <adm:requires-admin-action>
      <adm:component-restart/>
    </adm:requires-admin-action>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>30s</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:duration base-unit="s" lower-limit="1" upper-limit="4294"/>
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.274</ldap:oid>
        <ldap:name>ds-cfg-database-checkpointer-wakeup-interval</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="database-lock-num-lock-tables"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      This specifies the number of lock tables that should be used by the
      underlying database.
    </adm:synopsis>
    <adm:description>
      This can be particularly important to help improve scalability by
      avoiding contention on systems with large numbers of CPUs. The value of
      this configuration property should be set to a prime number that is less
      than or equal to the number of worker threads configured for use in the
      server.
    </adm:description>
    <adm:requires-admin-action>
      <adm:component-restart/>
    </adm:requires-admin-action>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>19</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:integer  lower-limit="1"  upper-limit="32767" />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.275</ldap:oid>
        <ldap:name>ds-cfg-database-lock-num-lock-tables</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="database-cleaner-num-threads"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Specifies the number of threads that the backend should maintain to
      keep the database log files at or near the desired utilization.
    </adm:synopsis>
    <adm:description>
      In environments with high write throughput, multiple cleaner threads may
      be required to maintain the desired utilization.
    </adm:description>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>1</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:integer  lower-limit="1" />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.284</ldap:oid>
        <ldap:name>ds-cfg-database-cleaner-num-threads</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="database-txn-no-sync"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Indicates whether database writes should be primarily written to an
      internal buffer but not immediately written to disk.
    </adm:synopsis>
    <adm:description>
      Setting the value of this configuration attribute to "true" may improve
      write performance but could cause some number of the most recent changes
      to be lost if the OpenDS Directory Server or the underlying JVM exits
      abnormally, or if an OS or hardware failure occurs (a behavior similar
      to running with transaction durability disabled in the Sun Java System
      Directory Server).
    </adm:description>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>false</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:boolean />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.29</ldap:oid>
        <ldap:name>ds-cfg-database-txn-no-sync</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="database-txn-write-no-sync"
    mandatory="false"
    multi-valued="false">
    <adm:synopsis>
      Indicates whether the database should synchronously flush data as it is
      written to disk.
    </adm:synopsis>
    <adm:description>
      If this value is set to "false", then all data written to disk will be
      synchronously flushed to persistent storage and thereby providing full
      durability. If it is set to "true", then data may be cached for a period
      of time by the underlying operating system before actually being written
      to disk. This may improve performance, but could cause some number of
      the most recent changes to be lost in the event of an underlying OS or
      hardware failure (but not in the case that the OpenDS Directory Server
      or the JVM exits abnormally).
    </adm:description>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>true</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:boolean />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:oid>1.3.6.1.4.1.26027.1.1.30</ldap:oid>
        <ldap:name>ds-cfg-database-txn-write-no-sync</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
</adm:managed-object>
