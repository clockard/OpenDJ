<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Portions Copyright 2006-2007 Sun Microsystems, Inc.
 ! -->
<stax>
  
  <function name="_dsconfigCommonArgs">
    <function-prolog>
      This function resolves common dsconfig arguments
    </function-prolog>
    <function-no-args/>
  
    <script>
        if dsInstanceHost:
          STAFCmdParamsList.append('-h %s' % dsInstanceHost)
                  
        if dsInstancePort:
          STAFCmdParamsList.append('-p %s' % dsInstancePort)

        if dsInstanceDn:
          STAFCmdParamsList.append('-D "%s"' % dsInstanceDn)
        
        if dsInstancePswd:
          STAFCmdParamsList.append('-w "%s"' % dsInstancePswd)
    </script>
              
  </function>
  
  
  <!-- Set property value using dsconfig -->
  <function name="dsconfigSet">
    <function-prolog>
      This function modifies a property value using dsconfig
    </function-prolog>
    <function-map-args>
      <function-arg-def name="location" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Location of target host
        </function-arg-description>
        <function-arg-property name="type" value="hostname"/>
      </function-arg-def>
		
      <function-arg-def name="dsPath" type="optional" default="'%s/%s' % (DIRECTORY_INSTANCE_DIR,OPENDSNAME)">
        <function-arg-description>
          Pathname to installation root
        </function-arg-description>
        <function-arg-property name="type" value="filepath"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceHost" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Directory server hostname or IP address
        </function-arg-description>
		<function-arg-property name="type" value="hostname"/>
      </function-arg-def>      
		
      <function-arg-def name="dsInstancePort" type="required">
        <function-arg-description>
          Directory server port number
        </function-arg-description>		  
        <function-arg-property name="type" value="Port number"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceDn" type="required">
        <function-arg-description>
          Bind DN
        </function-arg-description>
        <function-arg-property name="type" value="DN"/>
      </function-arg-def> 
		
      <function-arg-def name="dsInstancePswd" type="required">
        <function-arg-description>
          Bind password
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>          
		
      <function-arg-def name="objectName" type="required">
        <function-arg-description>
          Object to modify, e.g. password validator
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="propertyType" type="required">
        <function-arg-description>
          Property type to modify, e.g. validator
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="propertyName" type="required">
        <function-arg-description>
          Property to modify, e.g. enabled
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="attributeName" type="required">
        <function-arg-description>
          Attribute to modify, e.g. minimum-password-length
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="attributeValue" type="optional" default="'none'">
        <function-arg-description>
          New attribute value
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="modifyType" type="optional" default="'set'">
        <function-arg-description>
          The modify type. Default value is set.
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>			
			
      <function-arg-def name="expectedRC" type="optional" default="0">
        <function-arg-description>
          Expected return code value. Default value is 0
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>			
	
    </function-map-args>
    <sequence>
    
      <!-- Local variables -->
      <script>
        mylocation=location
        STAFCmdParams=''	
        STAFCmd=''
      
        if dsPath:
          dsBinPath='%s/%s' % (dsPath,fileFolder)
          STAFCmd='%s/%s%s' % (dsBinPath,DSCONFIG,fileExt)
            
        STAFCmdParamsList=[]
        STAFCmdParamsList.append('set-%s-prop ' % (objectName))
        STAFCmdParamsList.append('--%s-name "%s" ' % (propertyType,propertyName))
            
        if modifyType == 'reset':
            STAFCmdParamsList.append('--%s %s' % (modifyType,attributeName))
            
        else: 
            STAFCmdParamsList.append('--%s "%s:%s"' % (modifyType,attributeName,attributeValue))
      </script>
     
      <call function="'_dsconfigCommonArgs'"/>
      
      <script>
        STAFCmdParams=' '.join(STAFCmdParamsList)
      </script>
      
      <message>
        '%s %s' % (STAFCmd, STAFCmdParams)
      </message>
           
      <process name="'Modify dsconfig object'">
        <location>'%s' % location</location>
        <command>'%s' % STAFCmd</command>
        <parms>'%s' % STAFCmdParams</parms>
        <workdir>'%s' % dsBinPath</workdir>
        <envs>
          ['PATH=/bin:/usr/bin:%s' % dsBinPath]
        </envs>
        <console use="'same'"/>
        <stderr mode="'stdout'"/>
        <returnstdout/>
      </process>

      <script>
        STAXCode=RC
        STAXReason=STAXResult
      </script>

      <return>
        STAXReason
      </return>
      
    </sequence>
    
  </function>

  <!-- Modify password policy using dsconfig -->
  <function name="modifyPwdPolicy">
    <function-prolog>
      This function modifies a password policy using dsconfig
    </function-prolog>
    <function-map-args>
      <function-arg-def name="location" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Location of target host
        </function-arg-description>
        <function-arg-property name="type" value="hostname"/>
      </function-arg-def>
		
      <function-arg-def name="dsPath" type="optional" default="'%s/%s' % (DIRECTORY_INSTANCE_DIR,OPENDSNAME)">
        <function-arg-description>
          Pathname to installation root
        </function-arg-description>
        <function-arg-property name="type" value="filepath"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceHost" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Directory server hostname or IP address
        </function-arg-description>
		<function-arg-property name="type" value="hostname"/>
      </function-arg-def>      
		
      <function-arg-def name="dsInstancePort" type="required">
        <function-arg-description>
          Directory server port number
        </function-arg-description>		  
        <function-arg-property name="type" value="Port number"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceDn" type="required">
        <function-arg-description>
          Bind DN
        </function-arg-description>
        <function-arg-property name="type" value="DN"/>
      </function-arg-def> 
		
      <function-arg-def name="dsInstancePswd" type="required">
        <function-arg-description>
          Bind password
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>          
		
      <function-arg-def name="propertyName" type="required">
        <function-arg-description>
          Property to modify, e.g. enabled
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="attributeName" type="required">
        <function-arg-description>
          Attribute to modify, e.g. minimum-password-length
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="attributeValue" type="optional" default="'none'">
        <function-arg-description>
          New attribute value
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="modifyType" type="optional" default="'set'">
        <function-arg-description>
          The modify type. Default value is set.
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>			
			
      <function-arg-def name="expectedRC" type="optional" default="0">
        <function-arg-description>
          Expected return code value. Default value is 0
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>			
	
    </function-map-args>
    <sequence>
    
    <call function="'dsconfigSet'">
      { 'location'               : '%s' % location ,
        'dsPath'                 : '%s' % dsPath ,
        'dsInstanceHost'         : '%s' % dsInstanceHost ,
        'dsInstancePort'         : '%s' % dsInstancePort ,
        'dsInstanceDn'           : '%s' % dsInstanceDn ,
        'dsInstancePswd'         : '%s' % dsInstancePswd ,
        'objectName'             : 'password-policy' ,
        'propertyType'           : 'policy' ,
        'propertyName'           : '%s' % (propertyName) ,
        'attributeName'          : '%s' % (attributeName) ,
        'attributeValue'         : '%s' % (attributeValue) ,
        'modifyType'             : '%s' % (modifyType) ,
        'expectedRC'             : expectedRC }
    </call>
        
    <call function="'checktestRC'">
      { 'returncode' : STAXCode ,
        'result'     : STAXReason ,
        'expected'   : expectedRC }
    </call>

    <return>
        STAXReason
    </return>
      
   </sequence>
    
  </function>

  <!-- Modify password policy using dsconfig -->
  <function name="modifyGlobal">
    <function-prolog>
      This function modifies a global attribute value using dsconfig
    </function-prolog>
    <function-map-args>
      <function-arg-def name="location" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Location of target host
        </function-arg-description>
        <function-arg-property name="type" value="hostname"/>
      </function-arg-def>
		
      <function-arg-def name="dsPath" type="optional" default="'%s/%s' % (DIRECTORY_INSTANCE_DIR,OPENDSNAME)">
        <function-arg-description>
          Pathname to installation root
        </function-arg-description>
        <function-arg-property name="type" value="filepath"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceHost" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Directory server hostname or IP address
        </function-arg-description>
		<function-arg-property name="type" value="hostname"/>
      </function-arg-def>      
		
      <function-arg-def name="dsInstancePort" type="required">
        <function-arg-description>
          Directory server port number
        </function-arg-description>		  
        <function-arg-property name="type" value="Port number"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceDn" type="required">
        <function-arg-description>
          Bind DN
        </function-arg-description>
        <function-arg-property name="type" value="DN"/>
      </function-arg-def> 
		
      <function-arg-def name="dsInstancePswd" type="required">
        <function-arg-description>
          Bind password
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>          
		
      <function-arg-def name="attributeName" type="required">
        <function-arg-description>
          Attribute to modify, e.g. bind-with-dn-requires-password
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="attributeValue" type="required">
        <function-arg-description>
          New attribute value
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="expectedRC" type="optional" default="0">
      <function-arg-description>
	 Expected return code value. Default value is 0
      </function-arg-description>
      <function-arg-property name="type" value="string"/>
    </function-arg-def>			
	
    </function-map-args>
    <sequence>
    
      <!-- Local variables -->
      <script>
        mylocation=location
        STAFCmdParams=''	
        STAFCmd=''			  	
      
        if dsPath:
          dsBinPath='%s/%s' % (dsPath,fileFolder)
          STAFCmd='%s/%s%s' % (dsBinPath,DSCONFIG,fileExt)

        if attributeValue:
            attributeValue=attributeValue.replace('"','QUOT')
            
        STAFCmdParamsList=[]
        STAFCmdParamsList.append('set-global-configuration-prop ')
        STAFCmdParamsList.append('--set "%s:%s"' % (attributeName,attributeValue))
      </script>
     
      <call function="'_dsconfigCommonArgs'"/>
      
      <script>
        STAFCmdParams=' '.join(STAFCmdParamsList)
      </script>
      
      <message>
        '%s %s' % (STAFCmd, STAFCmdParams)
      </message>
           
      <process name="'Modify dsconfig object'">
        <location>'%s' % location</location>
        <command>'%s' % STAFCmd</command>
        <parms>'%s' % STAFCmdParams</parms>
        <workdir>'%s' % dsBinPath</workdir>
        <envs>
          ['PATH=/bin:/usr/bin:%s' % dsBinPath]
        </envs>
        <console use="'same'"/>
        <stderr mode="'stdout'"/>
        <returnstdout/>
      </process>

      <script>
        STAXCode=RC
        STAXReason=STAXResult
      </script>
      <call function="'checktestRC'">
        { 'returncode' : STAXCode ,
          'result'     : STAXReason ,
          'expected'   : expectedRC }
      </call>
      <return>
        STAXReason
      </return>
      
    </sequence>
    
  </function>

  <!-- Modify identity mapper using dsconfig -->
  <function name="modifyIdentityMapper">
    <function-prolog>
      This function modifies an identity mapper using dsconfig
    </function-prolog>
    <function-map-args>
      <function-arg-def name="location" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Location of target host
        </function-arg-description>
        <function-arg-property name="type" value="hostname"/>
      </function-arg-def>
		
      <function-arg-def name="dsPath" type="optional" default="'%s/%s' % (DIRECTORY_INSTANCE_DIR,OPENDSNAME)">
        <function-arg-description>
          Pathname to installation root
        </function-arg-description>
        <function-arg-property name="type" value="filepath"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceHost" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Directory server hostname or IP address
        </function-arg-description>
		<function-arg-property name="type" value="hostname"/>
      </function-arg-def>      
		
      <function-arg-def name="dsInstancePort" type="required">
        <function-arg-description>
          Directory server port number
        </function-arg-description>		  
        <function-arg-property name="type" value="Port number"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceDn" type="required">
        <function-arg-description>
          Bind DN
        </function-arg-description>
        <function-arg-property name="type" value="DN"/>
      </function-arg-def> 
		
      <function-arg-def name="dsInstancePswd" type="required">
        <function-arg-description>
          Bind password
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>          
		
      <function-arg-def name="mapperName" type="required">
        <function-arg-description>
          Mapper to modify, e.g. Exact Match
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="attributeName" type="required">
        <function-arg-description>
          Attribute to modify, e.g. match-attribute
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="attributeValue" type="required">
        <function-arg-description>
          New attribute value
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="modifyType" type="optional" default="'set'">
        <function-arg-description>
          The modify type. Default value is set.
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>			
			
      <function-arg-def name="expectedRC" type="optional" default="0">
      <function-arg-description>
	 Expected return code value. Default value is 0
      </function-arg-description>
      <function-arg-property name="type" value="string"/>
    </function-arg-def>			
	
    </function-map-args>
    <sequence>
    
    <call function="'dsconfigSet'">
      { 'location'               : '%s' % location ,
        'dsPath'                 : '%s' % dsPath ,
        'dsInstanceHost'         : '%s' % dsInstanceHost ,
        'dsInstancePort'         : '%s' % dsInstancePort ,
        'dsInstanceDn'           : '%s' % dsInstanceDn ,
        'dsInstancePswd'         : '%s' % dsInstancePswd ,
        'objectName'             : 'identity-mapper' ,
        'propertyType'           : 'mapper' ,
        'propertyName'           : '%s' % (mapperName) ,
        'attributeName'          : '%s' % (attributeName) ,
        'attributeValue'         : '%s' % (attributeValue) ,
        'modifyType'             : '%s' % (modifyType) ,
        'expectedRC'             : expectedRC }
    </call>
            
    <call function="'checktestRC'">
      { 'returncode' : STAXCode ,
        'result'     : STAXReason ,
        'expected'   : expectedRC }
    </call>
    <return>
        STAXReason
    </return>
      
   </sequence>
    
  </function>

  <!-- Modify password policy using dsconfig -->
  <function name="modifyGlobalAci">
    <function-prolog>
      This function modifies a global aci using dsconfig
    </function-prolog>
    <function-map-args>
      <function-arg-def name="location" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Location of target host
        </function-arg-description>
        <function-arg-property name="type" value="hostname"/>
      </function-arg-def>
		
      <function-arg-def name="dsPath" type="optional" default="'%s/%s' % (DIRECTORY_INSTANCE_DIR,OPENDSNAME)">
        <function-arg-description>
          Pathname to installation root
        </function-arg-description>
        <function-arg-property name="type" value="filepath"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceHost" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Directory server hostname or IP address
        </function-arg-description>
		<function-arg-property name="type" value="hostname"/>
      </function-arg-def>      
		
      <function-arg-def name="dsInstancePort" type="required">
        <function-arg-description>
          Directory server port number
        </function-arg-description>		  
        <function-arg-property name="type" value="Port number"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceDn" type="required">
        <function-arg-description>
          Bind DN
        </function-arg-description>
        <function-arg-property name="type" value="DN"/>
      </function-arg-def> 
		
      <function-arg-def name="dsInstancePswd" type="required">
        <function-arg-description>
          Bind password
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>          
		
      <function-arg-def name="aciValue" type="required">
        <function-arg-description>
          New property value
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="opType" type="optional" default="set">
        <function-arg-description>
          Operation type, one of set, add, and remove
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="expectedRC" type="optional" default="0">
      <function-arg-description>
	 Expected return code value. Default value is 0
      </function-arg-description>
      <function-arg-property name="type" value="string"/>
    </function-arg-def>			
	
    </function-map-args>
    <sequence>
    
    <script>
        mylocation=location
        STAFCmdParams=''	
        STAFCmd=''			  	
      
        if dsPath:
          dsBinPath='%s/%s' % (dsPath,fileFolder)
          STAFCmd='%s/%s%s' % (dsBinPath,DSCONFIG,fileExt)

        if aciValue:
            aciValue=aciValue.replace('"','\\"')
      
        STAFCmdParamsList=[]
        STAFCmdParamsList.append('set-access-control-handler-prop ')
        STAFCmdParamsList.append('--%s "global-aci:%s"' % (opType,aciValue))
      </script>
     
      <call function="'_dsconfigCommonArgs'"/>
      
      <script>
        STAFCmdParams=' '.join(STAFCmdParamsList)
      </script>
      
      <message>
        '%s %s' % (STAFCmd, STAFCmdParams)
      </message>
           
      <process name="'Modify dsconfig object'">
        <location>'%s' % location</location>
        <command>'%s' % STAFCmd</command>
        <parms>'%s' % STAFCmdParams</parms>
        <workdir>'%s' % dsBinPath</workdir>
        <envs>
          ['PATH=/bin:/usr/bin:%s' % dsBinPath, 'JAVA_HOME=%s' % JAVA_HOME]
        </envs>
        <console use="'same'"/>
        <stderr mode="'stdout'"/>
        <returnstdout/>
      </process>

      <script>
        STAXCode=RC
        STAXReason=STAXResult
      </script>
      
      <call function="'checktestRC'">
          { 'returncode' : STAXCode ,
            'result'     : STAXReason ,
            'expected'   : expectedRC }
      </call>
    <return>
        STAXReason
    </return>
      
    </sequence>
    
  </function>
  <!-- Modify password policy using dsconfig -->
  <function name="modifySaslMech">
    <function-prolog>
      This function modifies a sasl  mechanism using dsconfig
    </function-prolog>
    <function-map-args>
      <function-arg-def name="location" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Location of target host
        </function-arg-description>
        <function-arg-property name="type" value="hostname"/>
      </function-arg-def>
		
      <function-arg-def name="dsPath" type="optional" default="'%s/%s' % (DIRECTORY_INSTANCE_DIR,OPENDSNAME)">
        <function-arg-description>
          Pathname to installation root
        </function-arg-description>
        <function-arg-property name="type" value="filepath"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceHost" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Directory server hostname or IP address
        </function-arg-description>
		<function-arg-property name="type" value="hostname"/>
      </function-arg-def>      
		
      <function-arg-def name="dsInstancePort" type="required">
        <function-arg-description>
          Directory server port number
        </function-arg-description>		  
        <function-arg-property name="type" value="Port number"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceDn" type="required">
        <function-arg-description>
          Bind DN
        </function-arg-description>
        <function-arg-property name="type" value="DN"/>
      </function-arg-def> 
		
      <function-arg-def name="dsInstancePswd" type="required">
        <function-arg-description>
          Bind password
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>          
		
      <function-arg-def name="handlerName" type="required">
        <function-arg-description>
          Handle to modify, e.g. DIGEST-MD5
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="propertyName" type="required">
        <function-arg-description>
          Property to modify, e.g. realm
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="propertyValue" type="required">
        <function-arg-description>
          New property value
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="modifyType" type="optional" default="'set'">
        <function-arg-description>
          The modify type. Default value is set.
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>			
			
      <function-arg-def name="expectedRC" type="optional" default="0">
      <function-arg-description>
	 Expected return code value. Default value is 0
      </function-arg-description>
      <function-arg-property name="type" value="string"/>
    </function-arg-def>			
	
    </function-map-args>
    <sequence>
    
    <call function="'dsconfigSet'">
      { 'location'               : '%s' % location ,
        'dsPath'                 : '%s' % dsPath ,
        'dsInstanceHost'         : '%s' % dsInstanceHost ,
        'dsInstancePort'         : '%s' % dsInstancePort ,
        'dsInstanceDn'           : '%s' % dsInstanceDn ,
        'dsInstancePswd'         : '%s' % dsInstancePswd ,
        'objectName'             : 'sasl-mechanism-handler' ,
        'propertyType'           : 'handler' ,
        'propertyName'           : '%s' % (handlerName) ,
        'attributeName'          : '%s' % (propertyName) ,
        'attributeValue'         : '%s' % (propertyValue) ,
        'modifyType'             : '%s' % (modifyType) ,
        'expectedRC'             : expectedRC }
    </call>
            
    <call function="'checktestRC'">
      { 'returncode' : STAXCode ,
        'result'     : STAXReason ,
        'expected'   : expectedRC }
    </call>
    <return>
        STAXReason
    </return>
      
    </sequence>
    
  </function>

  <function name="addIndex">
    <function-prolog>
      This function eases adding JEB DB indexes
    </function-prolog>
    <function-map-args>
      <function-arg-def name="location" 
                        type="optional" 
                        default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Location of target host
        </function-arg-description>
        <function-arg-property name="type" value="hostname"/>
      </function-arg-def>
		
      <function-arg-def name="dsPath" 
                        type="optional" 
                        default="'%s/%s' % (DIRECTORY_INSTANCE_DIR,OPENDSNAME)">
        <function-arg-description>
          Pathname to installation root
        </function-arg-description>
        <function-arg-property name="type" value="filepath"/>
      </function-arg-def>
		
      <function-arg-def name="host" 
                        type="optional" 
                        default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Directory server hostname or IP address
        </function-arg-description>
        <function-arg-property name="type" value="hostname"/>
      </function-arg-def>      
		
      <function-arg-def name="port" 
                        type="optional" 
                        default="'%s' % DIRECTORY_INSTANCE_PORT">
        <function-arg-description>
          Directory server port number
        </function-arg-description>		  
        <function-arg-property name="type" value="Port number"/>
      </function-arg-def>
		
      <function-arg-def name="rootDN" 
                        type="optional" 
                        default="'%s' % DIRECTORY_INSTANCE_DN">
        <function-arg-description>
          Bind DN
        </function-arg-description>
        <function-arg-property name="type" value="DN"/>
      </function-arg-def> 
		
      <function-arg-def name="rootPwd" 
                        type="optional" 
                        default="'%s' % DIRECTORY_INSTANCE_PSWD">
        <function-arg-description>
          Bind password
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
      
      <function-arg-def name="backendID" 
                        default="'%s' % DIRECTORY_INSTANCE_BE" 
                        type="optional">
        <function-arg-description>
          The Back-end ID on to which to add an index
        </function-arg-description>
      </function-arg-def>
					
      <function-arg-def name="indexAttribute" type="required">
        <function-arg-description>
          ldap attribute on to which to add indexing
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="indexTypes" type="required">
        <function-arg-description>
          type of index to add
          This has to be provided as a python array like 
          [ 'presence', 'substring' ]
        </function-arg-description>
        <function-arg-property name="type" value="enum">
          <function-arg-property-description>
            This argument can only have one of those values
          </function-arg-property-description>
          <function-arg-property-data type="choice" value="'equality'"/>
          <function-arg-property-data type="choice" value="'ordering'"/>
          <function-arg-property-data type="choice" value="'presence'" />
          <function-arg-property-data type="choice" value="'substring'"/>
        </function-arg-property>
      </function-arg-def>
    </function-map-args>
    <sequence>
      <!-- Local variables -->
      <script>
        dsconfigParams=''	
        dsconfigCmd=''
        dsBinPath='%s/%s' % (dsPath,fileFolder)
        dsconfigCmd='%s/%s%s' % (dsBinPath,DSCONFIG,fileExt)
        dsconfigParams = 'create-je-index -h %s -p %s -D "%s" -w %s --backend-name %s --index-name %s --set index-type:%s' % (host,port,rootDN,rootPwd,backendID, indexAttribute, ' --set index-type:'.join(indexTypes))
      </script>
     
      <call function="'_dsconfigCommonArgs'"/>
            
      <message>
        'Running [%s %s]' % (dsconfigCmd, dsconfigParams)
      </message>
           
      <process name="'dsconfig addIndex'">
        <location>'%s' % location</location>
        <command>'%s' % dsconfigCmd</command>
        <parms>'%s' % dsconfigParams</parms>
        <workdir>'%s' % dsBinPath</workdir>
        <envs>
          ['PATH=/bin:/usr/bin:%s' % dsBinPath, 'JAVA_HOME=%s' % JAVA_HOME]
        </envs>
        <console use="'same'"/>
        <stderr mode="'stdout'"/>
        <returnstdout/>
      </process>
      <message>
        '%s returned [%s] with [%s]' % (dsconfigCmd, RC,STAXResult)
      </message>
      <return>
        RC, STAXResult
      </return>
    </sequence>
  </function>
  
  
  <function name="modifyIndex">
    <function-prolog>
      This function eases modifying JEB DB indexes
    </function-prolog>
    <function-map-args>
      <function-arg-def name="location" 
                        type="optional" 
                        default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Location of target host
        </function-arg-description>
        <function-arg-property name="type" value="hostname"/>
      </function-arg-def>
		
      <function-arg-def name="dsPath" 
                        type="optional" 
                        default="'%s/%s' % (DIRECTORY_INSTANCE_DIR,OPENDSNAME)">
        <function-arg-description>
          Pathname to installation root
        </function-arg-description>
        <function-arg-property name="type" value="filepath"/>
      </function-arg-def>
		
      <function-arg-def name="host" 
                        type="optional" 
                        default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Directory server hostname or IP address
        </function-arg-description>
        <function-arg-property name="type" value="hostname"/>
      </function-arg-def>      
		
      <function-arg-def name="port" 
                        type="optional" 
                        default="'%s' % DIRECTORY_INSTANCE_PORT">
        <function-arg-description>
          Directory server port number
        </function-arg-description>		  
        <function-arg-property name="type" value="Port number"/>
      </function-arg-def>
		
      <function-arg-def name="rootDN" 
                        type="optional" 
                        default="'%s' % DIRECTORY_INSTANCE_DN">
        <function-arg-description>
          Bind DN
        </function-arg-description>
        <function-arg-property name="type" value="DN"/>
      </function-arg-def> 
		
      <function-arg-def name="rootPwd" 
                        type="optional" 
                        default="'%s' % DIRECTORY_INSTANCE_PSWD">
        <function-arg-description>
          Bind password
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
      
      <function-arg-def name="backendID" 
                        default="'%s' % DIRECTORY_INSTANCE_BE" 
                        type="optional">
        <function-arg-description>
          The Back-end ID on to which to add an index
        </function-arg-description>
      </function-arg-def>
					
      <function-arg-def name="indexAttribute" type="required">
        <function-arg-description>
          ldap attribute on to which add indexing
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="operation">
        <function-arg-description>
          This parameters defines the operation to be performed.
        </function-arg-description>
        <function-arg-property name="type" value="enum">
          <function-arg-property-description>
            This argument can only have one of the following values
          </function-arg-property-description>
          <function-arg-property-data type="choice" value="'add'" />
          <function-arg-property-data type="choice" value="'remove'"/>
          <function-arg-property-data type="choice" value="'reset'"/>
          <function-arg-property-data type="choice" value="'set'"/>
        </function-arg-property>
      
      </function-arg-def> 
      
      <function-arg-def name="indexProperty" type="required">
        <function-arg-description>
          the property to manipulate if the operation is add or set
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
      <function-arg-def name="indexPropertyValue" type="optional">
        <function-arg-description>
          the value for the provided property
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
    </function-map-args>
    <sequence>
      <!-- Local variables -->
      <script>
        dsconfigParams=''	
        dsconfigCmd=''
        dsBinPath='%s/%s' % (dsPath,fileFolder)
        dsconfigCmd='%s/%s%s' % (dsBinPath,DSCONFIG,fileExt)
        operationArguments = indexProperty
        if indexPropertyValue:
          operationArguments = '%s:%s' % (indexProperty, indexPropertyValue)
        dsconfigParams = 'set-je-index-prop -h %s -p %s -D "%s" -w %s --backend-name %s --index-name %s --%s %s' % ( host, port, rootDN, rootPwd, backendID, indexAttribute, operation, operationArguments )
      </script>
     
      <call function="'_dsconfigCommonArgs'"/>
            
      <message>
        '%s %s' % (dsconfigCmd, dsconfigParams)
      </message>
           
      <process name="'dsconfig modifyIndex'">
        <location>'%s' % location</location>
        <command>'%s' % dsconfigCmd</command>
        <parms>'%s' % dsconfigParams</parms>
        <workdir>'%s' % dsBinPath</workdir>
        <envs>
          ['PATH=/bin:/usr/bin:%s' % dsBinPath, 'JAVA_HOME=%s' % JAVA_HOME]
        </envs>
        <console use="'same'"/>
        <stderr mode="'stdout'"/>
        <returnstdout/>
      </process>
      <return>
        STAXReason
      </return>
    </sequence>
  </function>
  
  
  <function name="removeIndex">
    <function-prolog>
      This function eases removing JEB DB indexes from STAX
    </function-prolog>
    <function-map-args>
      <function-arg-def name="location" 
                        type="optional" 
                        default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Location of target host
        </function-arg-description>
        <function-arg-property name="type" value="hostname"/>
      </function-arg-def>
		
      <function-arg-def name="dsPath" 
                        type="optional" 
                        default="'%s/%s' % (DIRECTORY_INSTANCE_DIR,OPENDSNAME)">
        <function-arg-description>
          Pathname to installation root
        </function-arg-description>
        <function-arg-property name="type" value="filepath"/>
      </function-arg-def>
		
      <function-arg-def name="host" 
                        type="optional" 
                        default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Directory server hostname or IP address
        </function-arg-description>
        <function-arg-property name="type" value="hostname"/>
      </function-arg-def>      
		
      <function-arg-def name="port" 
                        type="optional" 
                        default="'%s' % DIRECTORY_INSTANCE_PORT">
        <function-arg-description>
          Directory server port number
        </function-arg-description>		  
        <function-arg-property name="type" value="Port number"/>
      </function-arg-def>
		
      <function-arg-def name="rootDN" 
                        type="optional" 
                        default="'%s' % DIRECTORY_INSTANCE_DN">
        <function-arg-description>
          Bind DN
        </function-arg-description>
        <function-arg-property name="type" value="DN"/>
      </function-arg-def> 
		
      <function-arg-def name="rootPwd" 
                        type="optional" 
                        default="'%s' % DIRECTORY_INSTANCE_PSWD">
        <function-arg-description>
          Bind password
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
      
      <function-arg-def name="backendID" 
                        default="'%s' % DIRECTORY_INSTANCE_BE" 
                        type="optional">
        <function-arg-description>
          The Back-end ID on to which to remove an index from
        </function-arg-description>
      </function-arg-def>
					
      <function-arg-def name="indexAttribute" type="required">
        <function-arg-description>
          ldap attribute on to which to remove indexing
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
    </function-map-args>
    <sequence>
      <!-- Local variables -->
      <script>
        dsconfigParams=''	
        dsconfigCmd=''
        dsBinPath='%s/%s' % (dsPath,fileFolder)
        dsconfigCmd='%s/%s%s' % (dsBinPath,DSCONFIG,fileExt)
        dsconfigParams = 'delete-je-index -h %s -p %s -D "%s" -w %s --backend-name %s --index-name %s' % (host,port,rootDN,rootPwd,backendID, indexAttribute)
      </script>
     
      <call function="'_dsconfigCommonArgs'"/>
            
      <message>
        'Running [%s %s]' % (dsconfigCmd, dsconfigParams)
      </message>
           
      <process name="'dsconfig removeIndex'">
        <location>'%s' % location</location>
        <command>'%s' % dsconfigCmd</command>
        <parms>'%s' % dsconfigParams</parms>
        <workdir>'%s' % dsBinPath</workdir>
        <envs>
          ['PATH=/bin:/usr/bin:%s' % dsBinPath, 'JAVA_HOME=%s' % JAVA_HOME]
        </envs>
        <console use="'same'"/>
        <stderr mode="'stdout'"/>
        <returnstdout/>
      </process>
      <message>
        '%s returned [%s] with [%s]' % (dsconfigCmd, RC,STAXResult)
      </message>
      <return>
        RC, STAXResult
      </return>
    </sequence>
  </function>

    
  <!-- Create synchronization provider using dsconfig -->
  <function name="createSyncProvider">
    <function-prolog>
      This function creates a synchronization provider using dsconfig
    </function-prolog>
    <function-map-args>
      <function-arg-def name="location" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Location of target host
        </function-arg-description>
        <function-arg-property name="type" value="hostname"/>
      </function-arg-def>
		
      <function-arg-def name="dsPath" type="optional" default="'%s/%s' % (DIRECTORY_INSTANCE_DIR,OPENDSNAME)">
        <function-arg-description>
          Pathname to installation root
        </function-arg-description>
        <function-arg-property name="type" value="filepath"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceHost" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Directory server hostname or IP address
        </function-arg-description>
		<function-arg-property name="type" value="hostname"/>
      </function-arg-def>      
		
      <function-arg-def name="dsInstancePort" type="required">
        <function-arg-description>
          Directory server port number
        </function-arg-description>		  
        <function-arg-property name="type" value="Port number"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceDn" type="required">
        <function-arg-description>
          Bind DN
        </function-arg-description>
        <function-arg-property name="type" value="DN"/>
      </function-arg-def> 
		
      <function-arg-def name="dsInstancePswd" type="required">
        <function-arg-description>
          Bind password
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>          
		
      <function-arg-def name="providerName" type="optional" default="MultimasterSync">
        <function-arg-description>
          Name for the synchronization provider
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="providerType" type="optional" default="MultimasterType">
        <function-arg-description>
          Synchronization provider type
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="expectedRC" type="optional" default="0">
        <function-arg-description>
	      Expected return code value. Default value is 0
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>			
	
    </function-map-args>
    <sequence>
    
      <!-- Local variables -->
      <script>
        mylocation=location
        STAFCmdParams=''	
        STAFCmd=''			  	
      
        if dsPath:
          dsBinPath='%s/%s' % (dsPath,fileFolder)
          STAFCmd='%s/%s%s' % (dsBinPath,DSCONFIG,fileExt)

            
        STAFCmdParamsList=[]
        STAFCmdParamsList.append('create-synchronization-provider')
        STAFCmdParamsList.append('--provider-name "%s"' % providerName)
        STAFCmdParamsList.append('-t %s' % providerType)
        STAFCmdParamsList.append('--set "enabled:true"')
      </script>
     
      <call function="'_dsconfigCommonArgs'"/>
      
      <script>
        STAFCmdParams=' '.join(STAFCmdParamsList)
      </script>
      
      <message>
        '%s %s' % (STAFCmd, STAFCmdParams)
      </message>
           
      <process name="'Modify dsconfig object'">
        <location>'%s' % location</location>
        <command>'%s' % STAFCmd</command>
        <parms>'%s' % STAFCmdParams</parms>
        <workdir>'%s' % dsBinPath</workdir>
        <envs>
          ['PATH=/bin:/usr/bin:%s' % dsBinPath]
        </envs>
        <console use="'same'"/>
        <stderr mode="'stdout'"/>
        <returnstdout/>
      </process>

      <script>
        STAXCode=RC
        STAXReason=STAXResult
      </script>
      <call function="'checktestRC'">
        { 'returncode' : STAXCode ,
          'result'     : STAXReason ,
          'expected'   : expectedRC }
      </call>
      <return>
        STAXReason
      </return>
      
    </sequence>
    
  </function>
    




  <!-- Create a replication server using dsconfig -->
  <function name="createReplicationServer">
    <function-prolog>
      This function creates a replication server under a given synchronization provider using dsconfig
    </function-prolog>
    <function-map-args>
      <function-arg-def name="location" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Location of target host
        </function-arg-description>
        <function-arg-property name="type" value="hostname"/>
      </function-arg-def>
		
      <function-arg-def name="dsPath" type="optional" default="'%s/%s' % (DIRECTORY_INSTANCE_DIR,OPENDSNAME)">
        <function-arg-description>
          Pathname to installation root
        </function-arg-description>
        <function-arg-property name="type" value="filepath"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceHost" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Directory server hostname or IP address
        </function-arg-description>
		<function-arg-property name="type" value="hostname"/>
      </function-arg-def>      
		
      <function-arg-def name="dsInstancePort" type="required">
        <function-arg-description>
          Directory server port number
        </function-arg-description>		  
        <function-arg-property name="type" value="Port number"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceDn" type="required">
        <function-arg-description>
          Bind DN
        </function-arg-description>
        <function-arg-property name="type" value="DN"/>
      </function-arg-def> 
		
      <function-arg-def name="dsInstancePswd" type="required">
        <function-arg-description>
          Bind password
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>          
		
      <function-arg-def name="providerName" type="optional" default="MultimasterSync">
        <function-arg-description>
          Name for the synchronization provider
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
			
      <function-arg-def name="replicationPort" type="required">
        <function-arg-description>
          Replication port number
        </function-arg-description>
        <function-arg-property name="type" value="Port number"/>
      </function-arg-def>
        
      <function-arg-def name="replicationServerId" type="required">
        <function-arg-description>
          Replication server ID
        </function-arg-description>
        <function-arg-property name="type" value="ID number"/>
      </function-arg-def>        
        
      <function-arg-def name="replicationServerList" type="required">
        <function-arg-description>
          List of replication servers (as in host:replicationServerPort)
        </function-arg-description>
        <function-arg-property name="type" value="list"/>
      </function-arg-def>
			
      <function-arg-def name="expectedRC" type="optional" default="0">
        <function-arg-description>
	      Expected return code value. Default value is 0
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>			
	
    </function-map-args>
    <sequence>
    
      <!-- Local variables -->
      <script>
        mylocation=location
        STAFCmdParams=''	
        STAFCmd=''			  	
      
        if dsPath:
          dsBinPath='%s/%s' % (dsPath,fileFolder)
          STAFCmd='%s/%s%s' % (dsBinPath,DSCONFIG,fileExt)

            
        STAFCmdParamsList=[]
        STAFCmdParamsList.append('create-replication-server')
        STAFCmdParamsList.append('--provider-name "%s"' % providerName)
        STAFCmdParamsList.append('--set "replication-port:%s"' % replicationPort)
        STAFCmdParamsList.append('--set "replication-server-id:%s"' % replicationServerId)                    

        for replServer in replicationServerList :  
          STAFCmdParamsList.append('--set "replication-server:%s"' % replServer)
      </script>
     
      <call function="'_dsconfigCommonArgs'"/>
      
      <script>
        STAFCmdParams=' '.join(STAFCmdParamsList)
      </script>
      
      <message>
        '%s %s' % (STAFCmd, STAFCmdParams)
      </message>
           
      <process name="'Modify dsconfig object'">
        <location>'%s' % location</location>
        <command>'%s' % STAFCmd</command>
        <parms>'%s' % STAFCmdParams</parms>
        <workdir>'%s' % dsBinPath</workdir>
        <envs>
          ['PATH=/bin:/usr/bin:%s' % dsBinPath]
        </envs>
        <console use="'same'"/>
        <stderr mode="'stdout'"/>
        <returnstdout/>
      </process>

      <script>
        STAXCode=RC
        STAXReason=STAXResult
      </script>
      <call function="'checktestRC'">
        { 'returncode' : STAXCode ,
          'result'     : STAXReason ,
          'expected'   : expectedRC }
      </call> 
      <return>
        STAXReason
      </return>
      
    </sequence>
    
  </function>     



  <!-- Create a multimaster domain using dsconfig -->
  <function name="createMultimasterDomain">
    <function-prolog>
      This function creates a multimaster domain under a given synchronization provider using dsconfig
    </function-prolog>
    <function-map-args>
      <function-arg-def name="location" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Location of target host
        </function-arg-description>
        <function-arg-property name="type" value="hostname"/>
      </function-arg-def>
		
      <function-arg-def name="dsPath" type="optional" default="'%s/%s' % (DIRECTORY_INSTANCE_DIR,OPENDSNAME)">
        <function-arg-description>
          Pathname to installation root
        </function-arg-description>
        <function-arg-property name="type" value="filepath"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceHost" type="optional" default="'%s' % STAF_REMOTE_HOSTNAME">
        <function-arg-description>
          Directory server hostname or IP address
        </function-arg-description>
		<function-arg-property name="type" value="hostname"/>
      </function-arg-def>      
		
      <function-arg-def name="dsInstancePort" type="required">
        <function-arg-description>
          Directory server port number
        </function-arg-description>		  
        <function-arg-property name="type" value="Port number"/>
      </function-arg-def>
		
      <function-arg-def name="dsInstanceDn" type="required">
        <function-arg-description>
          Bind DN
        </function-arg-description>
        <function-arg-property name="type" value="DN"/>
      </function-arg-def> 
		
      <function-arg-def name="dsInstancePswd" type="required">
        <function-arg-description>
          Bind password
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>          
		
      <function-arg-def name="providerName" type="optional" default="MultimasterSync">
        <function-arg-description>
          Name for the synchronization provider
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>

      <function-arg-def name="domainName" type="required">
        <function-arg-description>
          Name for multimaster domain
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>
        			
      <function-arg-def name="replicationDn" type="required">
        <function-arg-description>
          DN of the replicated suffix
        </function-arg-description>
        <function-arg-property name="type" value="DN"/>
      </function-arg-def>
        
      <function-arg-def name="serverId" type="required">
        <function-arg-description>
          Server ID
        </function-arg-description>
        <function-arg-property name="type" value="ID number"/>
      </function-arg-def>        
        
      <function-arg-def name="replicationServerList" type="required">
        <function-arg-description>
          List of replication servers (as in host:replicationServerPort)
        </function-arg-description>
        <function-arg-property name="type" value="list"/>
      </function-arg-def>
			
      <function-arg-def name="expectedRC" type="optional" default="0">
        <function-arg-description>
	      Expected return code value. Default value is 0
        </function-arg-description>
        <function-arg-property name="type" value="string"/>
      </function-arg-def>			
	
    </function-map-args>
    <sequence>
    
      <!-- Local variables -->
      <script>
        mylocation=location
        STAFCmdParams=''	
        STAFCmd=''			  	
      
        if dsPath:
          dsBinPath='%s/%s' % (dsPath,fileFolder)
          STAFCmd='%s/%s%s' % (dsBinPath,DSCONFIG,fileExt)

            
        STAFCmdParamsList=[]
        STAFCmdParamsList.append('create-multimaster-domain')
        STAFCmdParamsList.append('--provider-name "%s"' % providerName)
        STAFCmdParamsList.append('--domain-name "%s"' % domainName)          
        STAFCmdParamsList.append('--set "replication-dn:%s"' % replicationDn)
        STAFCmdParamsList.append('--set "server-id:%s"' % serverId)                    

        for replServer in replicationServerList :  
          STAFCmdParamsList.append('--set "replication-server:%s"' % replServer)
      </script>
     
      <call function="'_dsconfigCommonArgs'"/>
      
      <script>
        STAFCmdParams=' '.join(STAFCmdParamsList)
      </script>
      
      <message>
        '%s %s' % (STAFCmd, STAFCmdParams)
      </message>
           
      <process name="'Modify dsconfig object'">
        <location>'%s' % location</location>
        <command>'%s' % STAFCmd</command>
        <parms>'%s' % STAFCmdParams</parms>
        <workdir>'%s' % dsBinPath</workdir>
        <envs>
          ['PATH=/bin:/usr/bin:%s' % dsBinPath]
        </envs>
        <console use="'same'"/>
        <stderr mode="'stdout'"/>
        <returnstdout/>
      </process>

      <script>
        STAXCode=RC
        STAXReason=STAXResult
      </script>
      <call function="'checktestRC'">
        { 'returncode' : STAXCode ,
          'result'     : STAXReason ,
          'expected'   : expectedRC }
      </call>
      <return>
        STAXReason
      </return>
      
    </sequence>
    
  </function>     



                                           
</stax>
