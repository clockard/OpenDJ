<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Portions Copyright 2006-2007 Sun Microsystems, Inc.
 ! -->
<stax>

  <defaultcall function="main" />

  <function name="main">

    <sequence>
		
      <!--- Load the environment for the test suite execution -->
      <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
        file="'%s/environment.xml' % (TESTS_FUNCTIONS_DIR)" />
      <call function="'loadEnvironment'" />  

      <!-- The Functional Tests -->
      <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
        file="'%s/testcases/security/security.xml' % (TESTS_DIR)" />
      <!--
      <call function="'main_security'" />
      -->

      <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
        file="'%s/testcases/aci/aci.xml' % (TESTS_DIR)" />
      <!--
      <call function="'main_aci'" />
      -->

      <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
        file="'%s/testcases/privileges/privileges.xml' % (TESTS_DIR)" />
      <!--
      <call function="'main_privileges'" />
      -->

      <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
        file="'%s/testcases/backends/backends.xml' % (TESTS_DIR)" />
      <!--
      <call function="'main_backends'" />
      --> 
      
      <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
        file="'%s/testcases/clu/commands.xml' % (TESTS_DIR)" />
      <!--
      <call function="'main_commands'" />
      -->

      <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
        file="'%s/testcases/core/core.xml' % (TESTS_DIR)" />
      <!--
      <call function="'main_core'" />
      -->

      <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
        file="'%s/testcases/schema/schema.xml' % (TESTS_DIR)" />
      <!--
      <call function="'main_schema'" />
      -->

      <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
        file="'%s/testcases/replication/replication.xml' % (TESTS_DIR)" />
      <!--
      <call function="'main_replication'" />					
      -->

      <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
        file="'%s/testcases/indexes/indexes.xml' % (TESTS_DIR)" />
      <!--
      <call function="'indexes'" />
      -->

      <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
        file="'%s/testcases/groups/groups.xml' % (TESTS_DIR)" />
      <!--
      <call function="'main_groups'" />
      -->

      <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
        file="'%s/testcases/sample/sample.xml' % (TESTS_DIR)" />
      <script>
        class functionToRun:
          def __init__(self, name):
            self.name = name
          
          def getName(self):
            return self.name
          
          
        suitesFileName='%s/testcases/run-custom-suites.dat' % TESTS_DIR
        
        if not os.path.exists(suitesFileName):
          suitesFileName='%s/testcases/run-default-suites.dat' % TESTS_DIR
          
        f = open(suitesFileName, 'r')
        functionsToRun = []
        for line in f.readlines():
          functionsToRun.append(functionToRun(line.rstrip()))
        f.close()
      </script>
      <iterate var="function" in="functionsToRun">
        <sequence>
          <message>'calling function [%s]' % function.getName()</message>
          <call function="'%s' % function.getName()" />
        </sequence>
      </iterate>

    </sequence>
  </function>
</stax>

