<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Portions Copyright 2006-2007 Sun Microsystems, Inc.
 ! -->
<stax>

  <defaultcall function="main_aci"/>

  <function name="main_aci">

      <sequence>

        <script>
          CurrentTestPath['group']='aci'
        </script>
      
        <call function="'testGroup_Preamble'"/>
        
        <parallel>
                
          <block name="'Block DS Process Active'">
      
            <!--- Start DS -->
            <sequence>
              <message>
                 'Start DS to run on port %s' % (DIRECTORY_INSTANCE_PORT)
              </message>
      
              <!--- Start DS -->
              <call function="'StartDsWithScript'">
               { 'location'  : STAF_REMOTE_HOSTNAME }
              </call>
      
              <call function="'checkRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
              </call>
      
            </sequence>
      
           <!--- End Block DS Process Active -->
           </block>
      
           <block name="'Block Clients'">
      
            <sequence>
      
              <!--- Check that DS started -->
              <call function="'isAlive'">
                { 'noOfLoops'        : 5 ,
                  'noOfMilliSeconds' : 2000 }
              </call>
      
              <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
                file="'%s/testcases/aci/aci_setup.xml' % (TESTS_DIR)"/>
              <call function="'aci_setup'" />
      
              <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
                file="'%s/testcases/aci/aci_target.xml' % (TESTS_DIR)"/>
              <call function="'aci_target'" />
      
              <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
                file="'%s/testcases/aci/aci_targetattr.xml' % (TESTS_DIR)"/>
              <call function="'aci_targetattr'" />
      
              <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
                file="'%s/testcases/aci/aci_targetfilter_syntax.xml' % (TESTS_DIR)"/>
              <call function="'aci_targetfilter_syntax'" />
      
              <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
                file="'%s/testcases/aci/aci_teardown.xml' % (TESTS_DIR)"/>
              <call function="'aci_teardown'" />
      
              <!--- Stop DS -->
              <sequence>
                <message>
                   'Stop DS running on port %s' % (DIRECTORY_INSTANCE_PORT)
                </message>
      
                <call function="'StopDsWithScript'">
                    { 'location'  : STAF_REMOTE_HOSTNAME,
                      'dsHost'    : DIRECTORY_INSTANCE_HOST,
                      'dsPort'    : DIRECTORY_INSTANCE_PORT,
                      'dsBindDN'  : DIRECTORY_INSTANCE_DN,
                      'dsBindPwd' : DIRECTORY_INSTANCE_PSWD }
                </call>
      
                <call function="'checkRC'">
                    { 'returncode' : RC ,
                      'result'     : STAXResult }
                </call>
              </sequence>
      
              </sequence>
      
              <!--- End Block Clients -->
              </block>
    
          </parallel>

        <call function="'testGroup_Postamble'"/>
        
     </sequence>

  </function>

</stax>
