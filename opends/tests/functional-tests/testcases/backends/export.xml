<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, exclude this CDDL HEADER in each
 ! file and exclude the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Portions Copyright 2007 Sun Microsystems, Inc.
 ! -->

<stax>

  <defaultcall function="main_export"/>

  <function name="main_export">

    <sequence>

      <script>
        CurrentTestPath['suite']='export'
      </script>
      
      <call function="'testSuite_Preamble'"/>
              
      <!--- Test Suite information
        #@TestSuiteName       Backend Export Tests
        #@TestSuitePurpose    Verify that the basic export functionality is working in the Directory Server.
        #@TestSuiteID         Export Tests
        #@TestSuiteGroup      Export
        #@TestGroup           Backend
        #@TestScript          export.xml
        #@TestHTMLLink        http://opends.dev.java.net/
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Export 1
        #@TestID              Export1
        #@TestPurpose         Export the data in OpenDS.
        #@TestPreamble
        #@TestSteps           Client calls exportLDIF with the parameters
                              default backend, and ldifFile
        #@TestPostamble
        #@TestResult Success if exportLDIF returns 0
      -->
        
             <testcase name="'Backend: Export 1'">
    
              <sequence>
      
                <call function="'testCase_Preamble'"/>
                <message>
                  'Backend Export1: Export the data in OpenDS'
                </message>
                <call function="'exportLdif'">
                  { 
                    'ldifFile'       : '%s/backends/Export1.ldif' % STAGED_DATA_DIR
                  }
                </call>
      
                <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
                </call>
                     
                <call function="'testCase_Postamble'"/>
      
              </sequence>
      
            </testcase>
            
      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Export 2
        #@TestID              Export2
        #@TestPurpose         Export the data in OpenDS by appending to an ldif file.
        #@TestPreamble
        #@TestSteps           Client calls exportLDIF with the parameters
                              default backend, ldifFile, and append
        #@TestPostamble
        #@TestResult Success if exportLDIF returns 0
      -->
        
             <testcase name="'Backend: Export 2'">
    
              <sequence>
      
                <call function="'testCase_Preamble'"/>
                <message>
                  'Backend Export2: Export the data in OpenDS by appending to an ldif file'
                </message>
                <call function="'exportLdif'">
                  { 
                    'ldifFile'       : '%s/backends/Export1.ldif' % STAGED_DATA_DIR,
                    'extraParams' : '-a'
                  }
                </call>
      
                <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
                </call>
                     
                <call function="'testCase_Postamble'"/>
      
              </sequence>
      
            </testcase>
            
      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Export 3
        #@TestID              Export3
        #@TestPurpose         Export the data in OpenDS with one includeAttribute parameter.
        #@TestPreamble
        #@TestSteps           Client calls exportLDIF with the parameters
                              default backend, ldifFile, and includeAttribute
        #@TestPostamble
        #@TestResult Success if exportLDIF returns 0
      -->
        
             <testcase name="'Backend: Export 3'">
    
              <sequence>
      
                <call function="'testCase_Preamble'"/>
                <message>
                  'Backend Export3: Export the data in OpenDSwith one includeAttribute parameter '
                </message>
                <call function="'exportLdif'">
                  { 
                    'ldifFile'       : '%s/backends/Export3.ldif' % STAGED_DATA_DIR,
                    'extraParams' : '-i telephonenumber'
                  }
                </call>
      
                <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
                </call>
                     
                <call function="'testCase_Postamble'"/>
      
              </sequence>
      
            </testcase>
            
      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Export 4
        #@TestID              Export4
        #@TestPurpose         Export the data in OpenDS with three includeAttribute parameters.
        #@TestPreamble
        #@TestSteps           Client calls exportLDIF with the parameters
                              default backend, ldifFile, and includeAttribute
        #@TestPostamble
        #@TestResult Success if exportLDIF returns 0
      -->
        
             <testcase name="'Backend: Export 4'">
    
              <sequence>
      
                <call function="'testCase_Preamble'"/>
                <message>
                  'Backend Export4: Export the data in OpenDS with three includeAttribute parameters'
                </message>
                <call function="'exportLdif'">
                  { 
                    'ldifFile'       : '%s/backends/Export4.ldif' % STAGED_DATA_DIR,
                    'extraParams' : '-i telephonenumber -i mail -i roomnumber'
                  }
                </call>
      
                <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
                </call>
                     
                <call function="'testCase_Postamble'"/>
      
              </sequence>
      
            </testcase>   
   
      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Export 5
        #@TestID              Export5
        #@TestPurpose         Export the data in OpenDS with one excludeAttribute parameter.
        #@TestPreamble
        #@TestSteps           Client calls exportLDIF with the parameters
                              default backend, ldifFile, and excludeAttribute
        #@TestPostamble
        #@TestResult Success if exportLDIF returns 0
      -->
        
             <testcase name="'Backend: Export 5'">
    
              <sequence>
      
                <call function="'testCase_Preamble'"/>
                <message>
                  'Backend Export5: Export the data in OpenDS with one excludeAttribute parameter'
                </message>
                <call function="'exportLdif'">
                  { 
                    'ldifFile'       : '%s/backends/Export5.ldif' % STAGED_DATA_DIR,
                    'extraParams' : '-e telephonenumber'
                  }
                </call>
      
                <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
                </call>
                     
                <call function="'testCase_Postamble'"/>
      
              </sequence>
      
            </testcase>  
 
      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Export 6
        #@TestID              Export6
        #@TestPurpose         Export the data in OpenDS with three excludeAttribute parameters.
        #@TestPreamble
        #@TestSteps           Client calls exportLDIF with the parameters
                              default backend, ldifFile, and excludeAttribute
        #@TestPostamble
        #@TestResult Success if exportLDIF returns 0
      -->
        
             <testcase name="'Backend: Export 6'">
    
              <sequence>
      
                <call function="'testCase_Preamble'"/>
                <message>
                  'Backend Export6: Export the data in OpenDS with three excludeAttribute parameters'
                </message>
                <call function="'exportLdif'">
                  { 
                    'ldifFile'       : '%s/backends/Export6.ldif' % STAGED_DATA_DIR,
                    'extraParams' : '-e telephonenumber -e mail -e roomnumber'
                  }
                </call>
      
                <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
                </call>
                     
                <call function="'testCase_Postamble'"/>
      
              </sequence>
      
            </testcase>
            
      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Export 7
        #@TestID              Export7
        #@TestPurpose         Export the data in OpenDS with one includeFilter parameter.
        #@TestPreamble
        #@TestSteps           Client calls exportLDIF with the parameters
                              default backend, ldifFile, and includeFilter
        #@TestPostamble
        #@TestResult Success if exportLDIF returns 0
      -->
        
             <testcase name="'Backend: Export 7'">
    
              <sequence>
      
                <call function="'testCase_Preamble'"/>
                <message>
                  'Backend Export7: Export the data in OpenDS with one includeFilter parameter'
                </message>
                <call function="'exportLdif'">
                  { 
                    'ldifFile'       : '%s/backends/Export7.ldif' % STAGED_DATA_DIR,
                    'extraParams' : '-I "(&amp;(uid=jwalker)(roomnumber=*))'
                  }
                </call>
      
                <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
                </call>
                     
                <call function="'testCase_Postamble'"/>
      
              </sequence>
      
            </testcase>
            
       <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Export 8
        #@TestID              Export8
        #@TestPurpose         Export the data in OpenDS with three includeFilter parameters.
        #@TestPreamble
        #@TestSteps           Client calls exportLDIF with the parameters
                              default backend, ldifFile, and includeFilter
        #@TestPostamble
        #@TestResult Success if exportLDIF returns 0
      -->
        
             <testcase name="'Backend: Export 8'">
    
              <sequence>
      
                <call function="'testCase_Preamble'"/>
                <message>
                  'Backend Export8: Export the data in OpenDS with three includeFilter parameters'
                </message>
                <call function="'exportLdif'">
                  { 
                    'ldifFile'       : '%s/backends/Export8.ldif' % STAGED_DATA_DIR,
                    'extraParams' : '-I "(&amp;(uid=jwalker)(roomnumber=*))" -I "(&amp;(uid=jwalker)(l=Cupertino))" -I "(&amp;(uid=jwallace)(roomnumber=*))"'
                  }
                </call>
      
                <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
                </call>
                     
                <call function="'testCase_Postamble'"/>
      
              </sequence>
      
            </testcase> 
 
       <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Export 9
        #@TestID              Export9
        #@TestPurpose         Export the data in OpenDS with one excludeFilter parameter.
        #@TestPreamble
        #@TestSteps           Client calls exportLDIF with the parameters
                              default backend, ldifFile, and excludeFilter
        #@TestPostamble
        #@TestResult Success if exportLDIF returns 0
      -->
        
             <testcase name="'Backend: Export 9'">
    
              <sequence>
      
                <call function="'testCase_Preamble'"/>
                <message>
                  'Backend Export9: Export the data in OpenDS with one excludeFilter parameter'
                </message>
                <call function="'exportLdif'">
                  { 
                    'ldifFile'       : '%s/backends/Export9.ldif' % STAGED_DATA_DIR,
                    'extraParams' : '-E "(&amp;(uid=jwalker)(roomnumber=*))"'
                  }
                </call>
      
                <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
                </call>
                     
                <call function="'testCase_Postamble'"/>
      
              </sequence>
      
            </testcase> 
            
        <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Export 10
        #@TestID              Export10
        #@TestPurpose         Export the data in OpenDS with three excludeFilter parameters.
        #@TestPreamble
        #@TestSteps           Client calls exportLDIF with the parameters
                              default backend, ldifFile, and excludeFilter
        #@TestPostamble
        #@TestResult Success if exportLDIF returns 0
      -->
        
             <testcase name="'Backend: Export 10'">
    
              <sequence>
      
                <call function="'testCase_Preamble'"/>
                <message>
                  'Backend Export10: Export the data in OpenDS with three excludeFilter parameters'
                </message>
                <call function="'exportLdif'">
                  { 
                    'ldifFile'       : '%s/backends/Export10.ldif' % STAGED_DATA_DIR,
                    'extraParams' : '-E "(&amp;(uid=jwalker)(roomnumber=*))" -E "(&amp;(uid=jwalker)(l=Cupertino))" -E "(&amp;(uid=jwallace)(roomnumber=*))"'
                  }
                </call>
      
                <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
                </call>
                     
                <call function="'testCase_Postamble'"/>
      
              </sequence>
      
            </testcase>
 
        <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Export 11
        #@TestID              Export11
        #@TestPurpose         Export the data in OpenDS with one includeBranch parameter.
        #@TestPreamble
        #@TestSteps           Client calls exportLDIF with the parameters
                              default backend, ldifFile, and includeBranch
        #@TestPostamble
        #@TestResult Success if exportLDIF returns 0
      -->
        
             <testcase name="'Backend: Export 11'">
    
              <sequence>
      
                <call function="'testCase_Preamble'"/>
                <message>
                  'Backend Export11: Export the data in OpenDS with one includeBranch parameter'
                </message>
                <call function="'exportLdif'">
                  { 
                    'ldifFile'       : '%s/backends/Export11.ldif' % STAGED_DATA_DIR,
                    'extraParams' : '-b "o=backend tests,dc=example,dc=com"'
                  }
                </call>
      
                <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
                </call>
                     
                <call function="'testCase_Postamble'"/>
      
              </sequence>
      
            </testcase>  
            
         <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Export 12
        #@TestID              Export12
        #@TestPurpose         Export the data in OpenDS with one excludeBranch parameter.
        #@TestPreamble
        #@TestSteps           Client calls exportLDIF with the parameters
                              default backend, ldifFile, and excludeBranch
        #@TestPostamble
        #@TestResult Success if exportLDIF returns 0
      -->
        
             <testcase name="'Backend: Export 12'">
    
              <sequence>
      
                <call function="'testCase_Preamble'"/>
                <message>
                  'Backend Export12: Export the data in OpenDS with one excludeBranch parameter'
                </message>
                <call function="'exportLdif'">
                  { 
                    'ldifFile'       : '%s/backends/Export12.ldif' % STAGED_DATA_DIR,
                    'extraParams' : '-B "ou=People,o=backend tests,dc=example,dc=com"'
                  }
                </call>
      
                <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
                </call>
                     
                <call function="'testCase_Postamble'"/>
      
              </sequence>
      
            </testcase>
            
         <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Export 13
        #@TestID              Export13
        #@TestPurpose         Export the data in OpenDS with one includeAttribute, excludeFilter, and includeBranch parameters.
        #@TestPreamble
        #@TestSteps           Client calls exportLDIF with the parameters
                              default backend, ldifFile, includeAttribute, excludeFilter, and includeBranch
        #@TestPostamble
        #@TestResult Success if exportLDIF returns 0
      -->
        
             <testcase name="'Backend: Export 13'">
    
              <sequence>
      
                <call function="'testCase_Preamble'"/>
                <message>
                  'Backend Export13: Export the data in OpenDS with one includeAttribute, excludeFilter, and includeBranch parameters'
                </message>
                <call function="'exportLdif'">
                  { 
                    'ldifFile'       : '%s/backends/Export13.ldif' % STAGED_DATA_DIR,
                    'extraParams' : '-E "(&amp;(uid=jwalker)(roomnumber=*))" -i telephonenumber -b "o=backend tests,dc=example,dc=com"'
                  }
                </call>
      
                <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
                </call>
                     
                <call function="'testCase_Postamble'"/>
      
              </sequence>
      
            </testcase>
            
         <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Export 14
        #@TestID              Export14
        #@TestPurpose         Export the data in OpenDS with one excludeAttribute, includeFilter, and excludeBranch parameters.
        #@TestPreamble
        #@TestSteps           Client calls exportLDIF with the parameters
                              default backend, ldifFile, excludeAttribute, includeFilter, and excludeBranch
        #@TestPostamble
        #@TestResult Success if exportLDIF returns 0
      -->
        
             <testcase name="'Backend: Export 14'">
    
              <sequence>
      
                <call function="'testCase_Preamble'"/>
                <message>
                  'Backend Export14: Export the data in OpenDS with one excludeAttribute, includeFilter, and excludeBranch parameters'
                </message>
                <call function="'exportLdif'">
                  { 
                    'ldifFile'       : '%s/backends/Export14.ldif' % STAGED_DATA_DIR,
                    'extraParams' : '-I "(&amp;(uid=jwalker)(roomnumber=*))" -e telephonenumber -B "ou=groups,o=backend tests,dc=example,dc=com"'
                  }
                </call>
      
                <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
                </call>
                     
                <call function="'testCase_Postamble'"/>
      
              </sequence>
      
            </testcase>
            
          <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Export 15
        #@TestID              Export15
        #@TestPurpose         Export the data in OpenDS in compressed format.
        #@TestPreamble
        #@TestSteps           Client calls exportLDIF with the parameters
                              default backend, ldifFile, and compressLDIF
        #@TestPostamble
        #@TestResult Success if exportLDIF returns 0
      -->
        
             <testcase name="'Backend: Export 15'">
    
              <sequence>
      
                <call function="'testCase_Preamble'"/>
                <message>
                  'Backend Export15: Export the data in OpenDS in compressed format'
                </message>
                <call function="'exportLdif'">
                  { 
                    'ldifFile'       : '%s/backends/Export15.ldif' % STAGED_DATA_DIR,
                    'extraParams' : '-c'
                  }
                </call>
      
                <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
                </call>
                     
                <call function="'testCase_Postamble'"/>
      
              </sequence>
      
            </testcase>
  
      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Export 1
        #@TestID              Export1
        #@TestPurpose         
        #@TestPreamble
        #@TestSteps           
        #@TestPostamble
        #@TestResult
      -->
      
      
      
      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: LDIF Default
        #@TestID              LDIF Default
        #@TestPurpose         Verify an export of a LDIF file on the default backend.
        #@TestPreamble
        #@TestSteps           
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: LDIF Non Default
        #@TestID              LDIF Non Default
        #@TestPurpose         Verify an export of a LDIF file on a differrent backend to the default.
        #@TestPreamble
        #@TestSteps           
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Fractional Include Branch
        #@TestID              Fractional Include Branch
        #@TestPurpose         Verify an export of a LDIF file specifying a branch that should be included in the export.
        #@TestPreamble
        #@TestSteps
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Fractional Include Branches
        #@TestID              Fractional Include Branches
        #@TestPurpose         Verify an export of a LDIF file specifying multiple branches that should be included in the export.
        #@TestPreamble
        #@TestSteps
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Fractional Exclude Branch
        #@TestID              Fractional Exclude Branch
        #@TestPurpose         Verify an export of a LDIF file specifying a branch that should be excluded in the export.
        #@TestPreamble
        #@TestSteps
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Fractional Exclude Branches
        #@TestID              Fractional Exclude Branches
        #@TestPurpose         Verify an export of a LDIF file specifying multiple branches that should be excluded in the export.
        #@TestPreamble
        #@TestSteps
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Fractional Branches Mix
        #@TestID              Fractional Branches Mix
        #@TestPurpose         Verify an export of a LDIF file specifying a mix of include and exclude branches.
        #@TestPreamble
        #@TestSteps
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Fractional Include Attribute
        #@TestID              Fractional Include Attribute
        #@TestPurpose         Verify an export of a LDIF file specifying an attribute that should be included in the export.
        #@TestPreamble
        #@TestSteps           
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Fractional Include Attributes
        #@TestID              Fractional Include Attributes
        #@TestPurpose         Verify an export of a LDIF file specifying multiple attributes that should be included in the export.
        #@TestPreamble
        #@TestSteps           
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Fractional Exclude Attribute
        #@TestID              Fractional Exclude Attribute
        #@TestPurpose         Verify an export of a LDIF file specifying an attribute that should be excluded in the export.
        #@TestPreamble
        #@TestSteps           
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Fractional Exclude Attributes
        #@TestID              Fractional Exclude Attributes
        #@TestPurpose         Verify an export of a LDIF file specifying multiple attribute that should be excluded in the export.
        #@TestPreamble
        #@TestSteps           
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Fractional Mix
        #@TestID              Fractional Mix
        #@TestPurpose         Verify an export of a LDIF file specifying a mix of fractional attributes and branches.
        #@TestPreamble
        #@TestSteps
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Filtered Include
        #@TestID              Filtered Include
        #@TestPurpose         Verify an export of a LDIF file specifying a search filter control which entries are included in the export.
        #@TestPreamble
        #@TestSteps           
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Filtered Includes
        #@TestID              Filtered Includes
        #@TestPurpose         Verify an export of a LDIF file specifying a search filter control which entries are included in the export.
        #@TestPreamble
        #@TestSteps           
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Filtered Excludes
        #@TestID              Filtered Excludes
        #@TestPurpose         Verify an export of a LDIF file specifying multiple search filters control which entries are excluded in the export.
        #@TestPreamble
        #@TestSteps
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Filtered Includes
        #@TestID              Filtered Includes
        #@TestPurpose         Verify an export of a LDIF file specifying multiple search filters control which entries are included in the export.
        #@TestPreamble
        #@TestSteps           
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Filtered Excludes Complex
        #@TestID              Filtered Excludes Complex
        #@TestPurpose         Verify an export of a LDIF file specifying complex search filters control which entries are excluded in the export.
        #@TestPreamble
        #@TestSteps
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Filtered Excludes Complex
        #@TestID              Filtered Excludes Complex
        #@TestPurpose         Verify an export of a LDIF file specifying complex search filters control which entries are excluded in the export.
        #@TestPreamble
        #@TestSteps           
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Fractional Filtered Mix
        #@TestID              Fractional Filtered Mix
        #@TestPurpose         Verify an export of a LDIF file specifying a mix of fractional and filtered.
        #@TestPreamble
        #@TestSteps
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Append To LDIF
        #@TestID              Append To LDIF
        #@TestPurpose         Verify an export of a LDIF file specifying that the export process should append to the existing LDIF file.
        #@TestPreamble
        #@TestSteps           
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Compress LDIF
        #@TestID              Compress LDIF
        #@TestPurpose         Verify an export where the LDIF file is compressed.
        #@TestPreamble
        #@TestSteps           
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Encrypt LDIF
        #@TestID              Encrypt LDIF
        #@TestPurpose         Verify an export where the LDIF file is encrypted.
        #@TestPreamble
        #@TestSteps           
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Hash Signed LDIF
        #@TestID              Hash Signed LDIF
        #@TestPurpose         Verify an export where the LDIF file is hashed/signed.
        #@TestPreamble
        #@TestSteps           
        #@TestPostamble
        #@TestResult
      -->

      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Wrap Column
        #@TestID              Wrap Column
        #@TestPurpose         Verify an export of a LDIF file containing wrapped columns
        #@TestPreamble
        #@TestSteps           
        #@TestPostamble
        #@TestResult
      -->
      
      <!--- Test Case information
        #@TestMarker          Backend Export Tests
        #@TestName            Export: Error Codes
        #@TestID              Error Codes
        #@TestPurpose         Verify an export fails with an error code.
        #@TestPreamble
        #@TestSteps           
        #@TestPostamble
        #@TestResult
      -->

      <call function="'testSuite_Postamble'"/>
    
    </sequence>

  </function>

</stax>
