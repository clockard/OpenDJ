<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, exclude this CDDL HEADER in each
 ! file and exclude the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Portions Copyright 2007 Sun Microsystems, Inc.
 ! -->

<stax>
  <defaultcall function="main_export"/>
  <function name="main_export">
    <sequence>
      <block name="'export'">
        <sequence>
          <script>
            if not CurrentTestPath.has_key('group'):
              CurrentTestPath['group']='backends'
            CurrentTestPath['suite']=STAXCurrentBlock
          </script>
          <call function="'testSuite_Preamble'"/>
          <!--- Test Suite information
                #@TestSuiteName       Backend: Export: Export Tests
                #@TestSuitePurpose    Verify that the export functionality is working in the Directory Server.
                #@TestSuiteID         Backend Export Tests
                #@TestSuiteGroup      Export
                #@TestGroup           Backend
                #@TestScript          export.xml
                #@TestHTMLLink        http://opends.dev.java.net/
          -->
          <import machine="STAF_LOCAL_HOSTNAME"
                  file="'%s/testcases/backends/backend_setup.xml' % (TESTS_DIR)"/>
          <call function="'backend_setup'"> 
            { 'startDS' : False,
              'loadBackend' : True
            }
          </call>
          
          <!-- Create a second instance to import data that was exported from the first instance -->
          <message>
            'Creating another instance for verifing the exports'
          </message>
          
          <script>
            DsInstancePort = int(DIRECTORY_INSTANCE_PORT)+1
            DsInstanceSSLPort = int(DIRECTORY_INSTANCE_SSL_PORT)+1
            DsInstanceDir = '%s/server2' % DIRECTORY_INSTANCE_DIR
          </script>
          
          <call function="'createInstance'">
            { 'dsHost'    : '%s' % DIRECTORY_INSTANCE_HOST,
              'dsDir'     : DsInstanceDir,
              'dsPort'    : DsInstancePort,
              'dsSslPort' : DsInstanceSSLPort,
              'dsBindDN'  : '%s' % DIRECTORY_INSTANCE_DN,
              'dsBindPwd' : '%s' % DIRECTORY_INSTANCE_PSWD,
              'dsBaseDN'  : '%s' % DIRECTORY_INSTANCE_SFX
            }
          </call>
          
          <!-- Set the server backup the way it was before the backend tests -->
          <import machine="STAF_LOCAL_HOSTNAME"
                  file="'%s/testcases/quickstart/quickstart.xml' % (TESTS_DIR)"/>
          <call function="'main_quickstart'" />
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: LDIF Default 
                #@TestID              LDIF Default
                #@TestPurpose         Verify an export of a LDIF file on the default backend.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, and ldifFile. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export default backend')">
            <sequence>
              <call function="'testCase_Preamble'" />
              <message>
                'Backend: Export: Export default backend'
              </message>
              <call function="'exportLdif'">
                { 
                  'ldifFile' : '%s/backends/Export_default.ldif' % logsRemoteDataDir,
                  'backEnd'  : '%s' % DIRECTORY_INSTANCE_BE
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile' : '%s/backends/Export_default.ldif' % logsRemoteDataDir,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC,
                  'result'     : STAXResult
                }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME)}
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries' : ['uid=tmorris,ou=People,dc=example,dc=com',
                                       'uid=kvaughan,ou=People,dc=example,dc=com',
                                       'uid=kwinters,ou=People,dc=example,dc=com'],
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'   : DsInstancePort,
                  'startDS'  : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: LDIF Non Default
                #@TestID              LDIF Non Default
                #@TestPurpose         Verify an export of a LDIF file on a differrent backend to the default.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      non-default backend, and ldifFile           
                #@TestPostamble
                #@TestResult          Success if Success if exportLDIF, importLDIF returns 0
          -->
          <testcase name="getTestCaseName('Export non-default backend')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export non-default backend'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile' : '%s/backends/Export_schema.ldif' % logsRemoteDataDir,
                  'backEnd'  : 'schema'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile'    : '%s/backends/Export_schema.ldif' % logsRemoteDataDir,
                  'backEnd'     : 'schema',
                  'dsPath'      : '%s/server2/%s' % (DIRECTORY_INSTANCE_DIR, OPENDSNAME)
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Fractional Include Branch
                #@TestID              Fractional Include Branch
                #@TestPurpose         Verify an export of a LDIF file specifying a branch that should be included in the export.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, an ldifFile, and -b option. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Fractional Include Branch')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Fractional Include Branch'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/Export_IncludeBranch.ldif' % logsRemoteDataDir,
                  'extraParams' : '-b "dc=com"'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile' : '%s/backends/Export_IncludeBranch.ldif' % logsRemoteDataDir,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>

              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>

              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location' : mylocation,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries' : ['uid=tmorris,ou=People,dc=example,dc=com',
                                       'uid=kvaughan,ou=People,dc=example,dc=com',
                                       'uid=kwinters,ou=People,dc=example,dc=com'],
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'   : DsInstancePort,
                  'startDS'  : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Fractional Include Branches
                #@TestID              Fractional Include Branches
                #@TestPurpose         Verify an export of a LDIF file specifying multiple branches that should be included in the export.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, an ldifFile, and two -b options. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Fractional Include Branches')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Fractional Include Branches'
              </message>
              <call function="'exportLdif'">
                { 
                  'ldifFile'       : '%s/backends/Export_IncludeBranches.ldif' % logsRemoteDataDir,
                  'extraParams'    : '-b "dc=com" -b "dc=example,dc=com"'
                }
              </call>
    
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile'    : '%s/backends/Export_IncludeBranches.ldif' % logsRemoteDataDir,
                  'dsPath'      : '%s/%s' % (DsInstanceDir, OPENDSNAME)}
              </call>

              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult }
              </call>

              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location' : mylocation,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
    
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries' : ['uid=tmorris,ou=People,dc=example,dc=com',
                                       'uid=kvaughan,ou=People,dc=example,dc=com',
                                       'uid=kwinters,ou=People,dc=example,dc=com'],
                  'dsPath'          : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'          : DsInstancePort,
                  'startDS'         : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Fractional Exclude Branch
                #@TestID              Fractional Exclude Branch
                #@TestPurpose         Verify an export of a LDIF file specifying a branch that should be excluded in the export.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, an ldifFile, and -B option. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Fractional Exclude Branch')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Fractional Exclude Branch'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/Export_ExcludeBranch.ldif' % logsRemoteDataDir,
                  'extraParams' : '-B "dc=example,dc=com"'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult 
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile' : '%s/backends/Export_ExcludeBranch.ldif' % logsRemoteDataDir,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location' : mylocation,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'missingEntries'  :  ['uid=tmorris,ou=People,dc=example,dc=com',
                                        'uid=kvaughan,ou=People,dc=example,dc=com'],
                  'expectedEntries' : ['dc=com'],
                  'dsPath'          : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'          : DsInstancePort,
                  'startDS'         : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Fractional Exclude Branches
                #@TestID              Fractional Exclude Branches
                #@TestPurpose         Verify an export of a LDIF file specifying multiple branches that should be excluded in the export.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, an ldifFile, and two -B options. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Fractional Exclude Branches')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Fractional Exclude Branches'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/Export_ExcludeBranches.ldif' % logsRemoteDataDir,
                  'extraParams' : '-B "ou=People,dc=example,dc=com" -B "dc=example,dc=com"'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
                                    
              <call function="'importLdif'">
                { 'ldifFile'    : '%s/backends/Export_ExcludeBranches.ldif' % logsRemoteDataDir,
                  'dsPath'      : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>

              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'missingEntries'  :  ['uid=tmorris,ou=People,dc=example,dc=com',
                                       'uid=kvaughan,ou=People,dc=example,dc=com'],
                  'expectedEntries' : ['dc=com'],
                  'dsPath'          : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'          : DsInstancePort,
                  'startDS'         : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Fractional Branches Mix
                #@TestID              Fractional Branches Mix
                #@TestPurpose         Verify an export of a LDIF file specifying a mix of include and exclude branches.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, an ldifFile, both -b and -B options. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Fractional Branches Mix')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Fractional Branches Mix'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/Export_MixBranches.ldif' % logsRemoteDataDir,
                  'extraParams' : '-b "dc=com" -B "ou=People,dc=example,dc=com"'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile' : '%s/backends/Export_MixBranches.ldif' % logsRemoteDataDir,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME)}
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort}
              </call>
              
              <call function="'checkImport'">
                { 'missingEntries'  : ['uid=tmorris,ou=People,dc=example,dc=com',
                                       'uid=kvaughan,ou=People,dc=example,dc=com'],
                  'expectedEntries' : ['dc=com','dc=example,dc=com'],
                  'dsPath'          : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'          : DsInstancePort,
                  'startDS'         : 'no'}
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Fractional Include Attribute
                #@TestID              Fractional Include Attribute
                #@TestPurpose         Verify an export of a LDIF file specifying an attribute that should be included in the export.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, an ldifFile, and -i option. Import the ldifFile to
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Fractional Include Attribute')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Fractional Include Attribute'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'       : '%s/backends/Export_IncludeAttr.ldif' % logsRemoteDataDir,
                  'extraParams'    : '-i dc'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile' : '%s/backends/Export_IncludeAttr.ldif' % logsRemoteDataDir,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>

              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location' : mylocation,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries' : ['dc=com','dc=example,dc=com'],
                  'missingEntries'  : ['ou=People,dc=example,dc=com'],
                  'dsPath'          : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'          : DsInstancePort,
                  'startDS'         : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Fractional Include Attributes
                #@TestID              Fractional Include Attributes
                #@TestPurpose         Verify an export of a LDIF file specifying multiple attributes that should be included in the export.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, an ldifFile, and five -i options. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Fractional Include Attributes')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Fractional Include Attributes'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/Export_IncludeAttrs.ldif' % logsRemoteDataDir,
                  'extraParams' : '-i dc -i cn -i ou -i sn -i uid'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile' : '%s/backends/Export_IncludeAttrs.ldif' % logsRemoteDataDir,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)}
              </call>

              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location' : mylocation,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries'   : ['uid=tmorris,ou=People,dc=example,dc=com',
                                         'uid=kvaughan,ou=People,dc=example,dc=com',
                                         'uid=kwinters,ou=People,dc=example,dc=com'],
                  'missingAttributes' : ['userpassword'],
                  'dsPath'            : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'            : DsInstancePort,
                  'startDS'           : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Fractional Exclude Attribute
                #@TestID              Fractional Exclude Attribute
                #@TestPurpose         Verify an export of a LDIF file specifying an attribute that should be excluded in the export.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, an ldifFile, and -e option. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Fractional Exclude Attribute')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Fractional Exclude Attribute'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/Export_ExcludeAttr.ldif' % logsRemoteDataDir,
                  'extraParams' : '-e userpassword'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile'    : '%s/backends/Export_ExcludeAttr.ldif' % logsRemoteDataDir,
                  'dsPath'      : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>

              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries'   : ['uid=tmorris,ou=People,dc=example,dc=com'],
                  'missingAttributes' : ['userpassword'],
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'   : DsInstancePort,
                  'startDS'  : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Fractional Exclude Attributes
                #@TestID              Fractional Exclude Attributes
                #@TestPurpose         Verify an export of a LDIF file specifying multiple attribute that should be excluded in the export.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, an ldifFile, and three -e options. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Fractional Exclude Attributes')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Fractional Exclude Attributes'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/Export_ExcludeAttrs.ldif' % logsRemoteDataDir,
                  'extraParams' : '-e userpassword -e mail -e roomnumber'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile'    : '%s/backends/Export_ExcludeAttrs.ldif' % logsRemoteDataDir,
                  'dsPath'      : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>

              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>

              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries'   : ['uid=tmorris,ou=People,dc=example,dc=com',
                                         'uid=kvaughan,ou=People,dc=example,dc=com',
                                         'uid=kwinters,ou=People,dc=example,dc=com'],
                  'missingAttributes' : ['userpassword','mail','roomnumber'],
                  'dsPath'            : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'            : DsInstancePort,
                  'startDS'           : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Fractional Mix
                #@TestID              Fractional Mix
                #@TestPurpose         Verify an export of a LDIF file specifying a mix of fractional attributes and branches.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, an ldifFile, and mixed -i, -b, and -B options. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Fractional Mix')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Fractional Mix'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/Export_FractionalMix.ldif' % logsRemoteDataDir,
                  'extraParams' : '-i dc -i cn -i ou -i sn -i uid -b "dc=com" -b "dc=example,dc=com" -b "ou=People,dc=example,dc=com" -B "ou=Departed,ou=People,dc=example,dc=com"'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile' : '%s/backends/Export_FractionalMix.ldif' % logsRemoteDataDir,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>

              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location' : mylocation,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries'   : ['uid=tmorris,ou=People,dc=example,dc=com',
                                         'uid=kvaughan,ou=People,dc=example,dc=com',
                                         'uid=kwinters,ou=People,dc=example,dc=com'],
                  'missingAttributes' : ['userpassword'],                     
                  'dsPath'            : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'            : DsInstancePort,
                  'startDS'           : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Filtered Include
                #@TestID              Filtered Include
                #@TestPurpose         Verify an export of a LDIF file specifying a search filter control which entries are included in the export.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, an ldifFile, and -I option. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Filtered Include')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Filtered Include'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/Export_FilteredInclude.ldif' % logsRemoteDataDir,
                  'extraParams' : '-I "objectclass=*"'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile' : '%s/backends/Export_FilteredInclude.ldif' % logsRemoteDataDir,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location' : mylocation,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries' : ['uid=tmorris,ou=People,dc=example,dc=com',
                                       'uid=kvaughan,ou=People,dc=example,dc=com',
                                       'uid=kwinters,ou=People,dc=example,dc=com'],
                  'dsPath'          : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'          : DsInstancePort,
                  'startDS'         : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Filtered Includes
                #@TestID              Filtered Includes
                #@TestPurpose         Verify an export of a LDIF file specifying a search filter control which entries are included in the export.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, an ldifFile, and two -I options. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Filtered Includes')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Filtered Includes'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/Export_FilteredIncludes.ldif' % logsRemoteDataDir,
                  'extraParams' : '-I "objectclass=domain" -I "objectclass=organizationalunit"'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile' : '%s/backends/Export_FilteredIncludes.ldif' % logsRemoteDataDir,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location' : mylocation,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries' : ['dc=example,dc=com', 'dc=com'],
                  'missingEntries'  : ['uid=scarter,ou=People,dc=example,dc=com',
                                       'uid=dmiller,ou=People,dc=example,dc=com',
                                       'uid=rhunt,ou=People,dc=example,dc=com'],
                  'dsPath'          : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'          : DsInstancePort,
                  'startDS'         : 'no'}
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
                
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Filtered Exclude
                #@TestID              Filtered Exclude
                #@TestPurpose         Verify an export of a LDIF file specifying search filter control which entries are excluded in the export.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, an ldifFile, and -E option. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Filtered Exclude')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Filtered Exclude'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/Export_FilteredExclude.ldif' % logsRemoteDataDir,
                  'extraParams' : '-E "objectclass=person"'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile' : '%s/backends/Export_FilteredExclude.ldif' % logsRemoteDataDir,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>

              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries' : ['dc=example,dc=com',
                                       'ou=People,dc=example,dc=com'],
                  'missingEntries'  : ['uid=scarter,ou=People,dc=example,dc=com',
                                       'uid=dmiller,ou=People,dc=example,dc=com',
                                       'uid=rhunt,ou=People,dc=example,dc=com'],
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'   : DsInstancePort,
                  'startDS'  : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Filtered Excludes
                #@TestID              Filtered Excludes
                #@TestPurpose         Verify an export of a LDIF file specifying multiple search filters control which entries are excluded in the export.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, and ldifFile. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Filtered Excludes')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Filtered Excludes'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/Export_FilteredExcludes.ldif' % logsRemoteDataDir,
                  'extraParams' : '-E "objectclass=person" -E "objectclass=organizationalunit"'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile' : '%s/backends/Export_FilteredExcludes.ldif' % logsRemoteDataDir,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)}
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location' : mylocation,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries' : ['dc=example,dc=com',
                                       'dc=com'],
                  'missingEntries'  : ['uid=scarter,ou=People,dc=example,dc=com',
                                       'uid=dmiller,ou=People,dc=example,dc=com',
                                       'uid=rhunt,ou=People,dc=example,dc=com'],
                  'dsPath'          : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'          : DsInstancePort,
                  'startDS'         : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Filtered Includes
                #@TestID              Filtered Includes
                #@TestPurpose         Verify an export of a LDIF file specifying multiple search filters control which entries are included in the export.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, and ldifFile. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Filtered Includes')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Filtered Includes'
              </message>
              <call function="'exportLdif'">
                { 
                  'ldifFile'       : '%s/backends/Export_FilteredIncludes.ldif' % logsRemoteDataDir,
                  'extraParams'    : '-I "objectclass=domain" -I "objectclass=organizationalunit"'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile'    : '%s/backends/Export_FilteredIncludes.ldif' % logsRemoteDataDir,
                  'dsPath'      : '%s/%s' % (DsInstanceDir, OPENDSNAME)}
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME)}
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort}
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries' : ['dc=example,dc=com',
                                       'ou=People,dc=example,dc=com'],
                  'missingEntries'  : ['uid=scarter,ou=People,dc=example,dc=com',
                                       'uid=dmiller,ou=People,dc=example,dc=com',
                                       'uid=rhunt,ou=People,dc=example,dc=com'],
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'   : DsInstancePort,
                  'startDS'  : 'no'}
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd}
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Filtered Includes Complex
                #@TestID              Filtered Includes Complex
                #@TestPurpose         Verify an export of a LDIF file specifying complex search filters control which entries are included in the export.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, and ldifFile. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Filtered Includes Complex')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Filtered Includes Complex'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/Export_FilteredComplexIncludes.ldif' % logsRemoteDataDir,
                  'extraParams' : '-I "|(objectclass=person)(objectclass=domain)(objectclass=organizationalunit)"'
                }
              </call>
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile' : '%s/backends/Export_FilteredComplexIncludes.ldif' % logsRemoteDataDir,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)}
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries' : ['uid=tmorris,ou=People,dc=example,dc=com',
                                       'uid=kvaughan,ou=People,dc=example,dc=com',
                                       'uid=kwinters,ou=People,dc=example,dc=com'],
                  'dsPath'          : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'          : DsInstancePort,
                  'startDS'         : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd}
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Filtered Excludes Complex
                #@TestID              Filtered Excludes Complex
                #@TestPurpose         Verify an export of a LDIF file specifying complex search filters control which entries are excluded in the export.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, and ldifFile. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Filtered Excludes Complex')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Filtered Excludes Complex'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/Export_FilteredComplexExcludes.ldif' % logsRemoteDataDir,
                  'extraParams' : '-E "&amp;(objectclass=person)(ou=Departed)"'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile' : '%s/backends/Export_FilteredComplexExcludes.ldif' % logsRemoteDataDir,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location' : mylocation,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries' : ['uid=tmorris,ou=People,dc=example,dc=com',
                                       'uid=kvaughan,ou=People,dc=example,dc=com',
                                       'uid=kwinters,ou=People,dc=example,dc=com'],
                  'dsPath'          : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'          : DsInstancePort,
                  'startDS'         : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Fractional Filtered Mix
                #@TestID              Fractional Filtered Mix
                #@TestPurpose         Verify an export of a LDIF file specifying a mix of fractional and filtered.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, and ldifFile. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Fractional Filtered Mix')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Fractional Filtered Mix'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/Export_FilteredMix.ldif' % logsRemoteDataDir,
                  'extraParams' : '-E "&amp;(objectclass=person)(ou=Departed)" -b "dc=com" -e userpassword'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile' : '%s/backends/Export_FilteredMix.ldif' % logsRemoteDataDir,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries' : ['uid=tmorris,ou=People,dc=example,dc=com',
                                       'uid=kvaughan,ou=People,dc=example,dc=com',
                                       'uid=kwinters,ou=People,dc=example,dc=com'],
                  'dsPath'          : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'          : DsInstancePort,
                  'startDS'         : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Append To LDIF
                #@TestID              Append To LDIF
                #@TestPurpose         Verify an export of a LDIF file specifying that the export process should append to the existing LDIF file.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, and ldifFile. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Append To LDIF')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Append To LDIF'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/Export_FilteredMix.ldif' % logsRemoteDataDir,
                  'extraParams' : '-a'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile' : '%s/backends/Export_FilteredMix.ldif' % logsRemoteDataDir,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location' : mylocation,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries' : ['uid=tmorris,ou=People,dc=example,dc=com',
                                       'uid=kvaughan,ou=People,dc=example,dc=com',
                                       'uid=kwinters,ou=People,dc=example,dc=com'],
                  'dsPath'          : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'          : DsInstancePort,
                  'startDS'         : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Compress LDIF
                #@TestID              Compress LDIF
                #@TestPurpose         Verify an export where the LDIF file is compressed.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, and ldifFile. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Compress LDIF')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Compress LDIF'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/ExportCompressed.ldif' % logsRemoteDataDir,
                  'extraParams' : '-c'
                }
              </call>
              
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <call function="'importLdif'">
                { 'ldifFile'    : '%s/backends/ExportCompressed.ldif' % logsRemoteDataDir,
                  'dsPath'      : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'extraParams' : '-c'}
              </call>

              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location' : mylocation,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)}
              </call>
              
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              
              <call function="'checkImport'">
                { 'expectedEntries' : ['uid=tmorris,ou=People,dc=example,dc=com',
                                       'uid=kvaughan,ou=People,dc=example,dc=com',
                                       'uid=kwinters,ou=People,dc=example,dc=com'],
                  'dsPath'          : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'          : DsInstancePort,
                  'startDS'         : 'no'
                }
              </call>
              
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Encrypt LDIF
                #@TestID              Encrypt LDIF
                #@TestPurpose         Verify an export where the LDIF file is encrypted.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, and ldifFile. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Encrypt LDIF')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Encrypt LDIF'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/ExportEncrypted.ldif' % logsRemoteDataDir,
                  'extraParams' : '-y'
                }
              </call>
              <call function="'checktestRC'">
                { 'returncode' : RC,
                  'result'     : STAXResult
                }
              </call>
              <call function="'importLdif'">
                { 'ldifFile'    : '%s/backends/ExportEncrypted.ldif' % logsRemoteDataDir,
                  'extraParams' : '-y',
                  'dsPath'      : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location' : mylocation,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              <call function="'checkImport'">
                { 'expectedEntries' : ['uid=tmorris,ou=People,dc=example,dc=com',
                                       'uid=kvaughan,ou=People,dc=example,dc=com',
                                       'uid=kwinters,ou=People,dc=example,dc=com'],
                  'dsPath'          : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'          : DsInstancePort,
                  'startDS'         : 'no'
                }
              </call>
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Export: Hash Signed LDIF
                #@TestID              Hash Signed LDIF
                #@TestPurpose         Verify an export where the LDIF file is hashed/signed.
                #@TestPreamble
                #@TestSteps
                #@TestPostamble
                #@TestResult
          -->
          
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Wrap Column
                #@TestID              Wrap Column
                #@TestPurpose         Verify an export of a LDIF file containing wrapped columns
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, and ldifFile. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
          <testcase name="getTestCaseName('Export Wrap Column')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                'Backend: Export: Export Wrap Column'
              </message>
              <call function="'exportLdif'">
                { 'ldifFile'    : '%s/backends/ExportWrapCol.ldif' % logsRemoteDataDir,
                  'extraParams' : '--wrapColumn 25'
                }
              </call>
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              <call function="'importLdif'">
                { 'ldifFile' : '%s/backends/ExportWrapCol.ldif' % logsRemoteDataDir,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
              <!-- StartDS -->
              <call function="'StartDsWithScript'">
                { 'location' : mylocation,
                  'dsPath'   : '%s/%s' % (DsInstanceDir, OPENDSNAME)
                }
              </call>
              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : mylocation,
                  'noOfLoops'        : 1 ,
                  'noOfMilliSeconds' : 2000,
                  'dsPath'           : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsInstancePort'   : DsInstancePort
                }
              </call>
              <call function="'checkImport'">
                { 'expectedEntries' : ['uid=tmorris,ou=People,dc=example,dc=com',
                                       'uid=kvaughan,ou=People,dc=example,dc=com',
                                       'uid=kwinters,ou=People,dc=example,dc=com'],
                  'dsPath'          : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'          : DsInstancePort,
                  'startDS'         : 'no'
                }
              </call>
              <!-- StopDS -->
              <call function="'StopDsWithScript'">
                { 'location'  : mylocation,
                  'dsPath'    : '%s/%s' % (DsInstanceDir, OPENDSNAME),
                  'dsPort'    : DsInstancePort,
                  'dsBindDN'  : mydn,
                  'dsBindPwd' : mypswd
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
            
          <!--- Test Case information
                #@TestMarker          Backend Export Tests
                #@TestName            Backend: Export: Error Codes
                #@TestID              Error Codes
                #@TestPurpose         Verify an export fails with an error code.
                #@TestPreamble
                #@TestSteps           Client calls exportLDIF with the parameters
                                      default backend, and ldifFile. Import the ldifFile to 
                                      a second instance, then do a search to verify the import.
                #@TestPostamble
                #@TestResult          Success if exportLDIF, importLDIF, and checkImport returns 0
          -->
           <!-- Need to know what the error codes are -->
          <import machine="STAF_LOCAL_HOSTNAME"
                  file="'%s/testcases/backends/backend_cleanup.xml' % (TESTS_DIR)"/>
          <call function="'backend_cleanup'"> { 'stopDS' : False } </call>
        </sequence>
      </block>
    </sequence>
  </function>
</stax>
