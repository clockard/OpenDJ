<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../shared/stax.dtd">
<!--
  ! CDDL HEADER START
  !
  ! The contents of this file are subject to the terms of the
  ! Common Development and Distribution License, Version 1.0 only
  ! (the "License").  You may not use this file except in compliance
  ! with the License.
  !
  ! You can obtain a copy of the license at
  ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
  ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! When distributing Covered Code, include this CDDL HEADER in each
  ! file and include the License file at
  ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
  ! add the following below this CDDL HEADER, with the fields enclosed
  ! by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CDDL HEADER END
  !
  !      Portions Copyright 2007 Sun Microsystems, Inc.
  ! -->
<stax>

  <defaultcall function="clu_setup" />

  <function name="clu_setup">
    <function-description>
      Setup the command line test suite
    </function-description>
    <function-map-args>
      <function-arg-def name="startDS" type="optional" default="True">
        <function-arg-description>
          Start the Directory Server
        </function-arg-description>
      </function-arg-def>
      <function-arg-def name="loadBackend" type="optional" default="True">
        <function-arg-description>
          Load the backend with user data
        </function-arg-description>
      </function-arg-def>
    </function-map-args>
  
    <sequence>

      <block name="'setup'">

        <sequence>

          <!-- Create the topology necessary to the test group/suite -->
          <sequence>

            <message>
              'Create DS topology as described in config.py'
            </message>

            <call function="'createTopology'">
              { 'initialiseInstance' : False }
            </call>

            <call function="'checkRC'">
              { 'returncode' : RC , 'result' : STAXResult }
            </call>

          </sequence>

          <if expr="startDS == True">
          
            <!--- Start DS -->
            <sequence>

              <message>
                'Start DS to run on port %s' % (DIRECTORY_INSTANCE_PORT)
              </message>

              <!--- Start DS -->
              <call function="'StartDsWithScript'">
                { 'location' : STAF_REMOTE_HOSTNAME }
              </call>

              <call function="'checkRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult }
              </call>

              <!--- Check that DS started -->
              <call function="'isAlive'">
                { 'noOfLoops'        : 5 ,
                  'noOfMilliSeconds' : 2000 }
              </call>

            </sequence>
          
          </if>

          <if expr="loadBackend == True">
          
            <!-- Load the data needed by the test suite -->
            <sequence>

              <message>
                'Add many entries needed for Testcase 18 in cluSearch tests'
              </message>

              <call function="'addEntry'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort' : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'   : DIRECTORY_INSTANCE_DN ,
                  'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD ,
                  'entryToBeAdded' : '%s/clu/data/clu_start.ldif' % logsRemoteDataDir }
              </call>

              <message>'Add entries for cluSearch Tests'</message>

              <call function="'addEntry'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeAdded'   : '%s/clu/data/ldif_mod.ldif' % logsRemoteDataDir }
              </call>

              <call function="'checkRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult }
              </call>

            </sequence>

          </if>
          
        </sequence>
      </block>

    </sequence>

  </function>

</stax>
