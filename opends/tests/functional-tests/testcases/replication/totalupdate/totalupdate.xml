<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Portions Copyright 2006-2007 Sun Microsystems, Inc.
 ! -->
<stax>

  <defaultcall function="main_totalupdate"/>

  <function name="main_totalupdate">

    <sequence>

      <block name="'total-update'">

        <sequence>
            
          <script>
            if not CurrentTestPath.has_key('group'):
              CurrentTestPath['group']='replication'                 
            CurrentTestPath['suite']=STAXCurrentBlock
          </script>

          <call function="'testSuite_Preamble'"/>
                    						                
          <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
            file="'%s/testcases/replication/replication_setup.xml' % (TESTS_DIR)"/>
          <call function="'replication_setup'" />

          <script>
            server1DataDir = '%s/functional-tests/shared/data' % server1.getDir()
          </script>
          
          <!--- Test Case : Total Update -->          
          <testcase name="'Replication: Total Update: Simple LDIF'">
            <sequence>
            
              <call function="'testCase_Preamble'"/>

              <!-- Stop the Directory Server -->              
              <call function="'StopDsWithScript'">
                { 'location'  : server1.getHostname(),
                  'dsPath'    : '%s/%s' % (server1.getDir(),OPENDSNAME),                
                  'dsHost'    : server1.getHostname(),
                  'dsPort'    : server1.getPort(),
                  'dsBindDN'  : server1.getRootDn(),
                  'dsBindPwd' : server1.getRootPwd() }
              </call>

              <!-- Check that the Directory Server is stopped -->
              
              <!-- Import data into Directory Server -->              
              <call function="'ImportLdifWithScript'">
                { 'location'     : server1.getHostname() ,
                  'dsPath'       : '%s/%s' % (server1.getDir(),OPENDSNAME),             
                  'dsLdifFile'   : '%s/replication/Example.ldif' % server1DataDir }
              </call>

              <!-- Check some data was imported into Directory Server -->    
              <call function="'checkImport'">
                { 'location'  : server1.getHostname(),
                  'dsPath'    : '%s/%s' % (server1.getDir(),OPENDSNAME),                
                  'dsHost'    : server1.getHostname(),
                  'dsPort'    : server1.getPort(),
                  'dsDn'      : server1.getRootDn(),
                  'dsPswd'    : server1.getRootPwd(),
                  'expectedEntries' : ['uid=scarter,ou=People,o=example',
                                       'uid=dmiller, ou=People, o=example',
                                       'uid=rhunt, ou=People, o=example'] }
              </call>

              <!-- Start the Directory Server -->
              <call function="'StartDsWithScript'">
                { 'location'  : server1.getHostname(),
                  'dsPath'    : '%s/%s' % (server1.getDir(),OPENDSNAME) }
              </call>

              <!-- Wait for DS to start -->
              <call function="'isAlive'">
                { 'location'         : server1.getHostname(),
                  'dsPath'           : '%s/%s' % (server1.getDir(),OPENDSNAME),              
                  'dsInstanceHost'   : server1.getHostname() ,
                  'dsInstancePort'   : server1.getPort() ,
                  'dsInstanceDn'     : server1.getRootDn() ,
                  'dsInstancePswd'   : server1.getRootPwd() ,
                  'noOfLoops'        : 10 ,
                  'noOfMilliSeconds' : 2000 }
              </call>
          
              <!-- Perform the total update -->
              <call function="'TotalUpdateTask'">
                { 'location'        : server1.getHostname(),
                  'dsPath'          : '%s/%s' % (server2.getDir(),OPENDSNAME),                
                  'dsInstanceHost'  : server2.getHostname(),
                  'dsInstancePort'  : server2.getPort(),
                  'dsInstanceDn'    : server2.getRootDn(),
                  'dsInstancePswd'  : server2.getRootPwd(),
                  'taskID'          : 'task',
                  'domainDN'        : 'o=example',
                  'replicaServerID' : '1' }
              </call>
       
              <script>
                STAXCode, STAXReason=STAXResult
              </script>
               
              <if expr="STAXCode != 0">
                <sequence>
                  <message>
                    'Totalupdate failed (Code=%s,Reason=%s)' % (STAXCode,STAXReason)
                  </message>
                  <tcstatus result="'fail'" />
                </sequence>
              </if>
              
              <!-- Verify the total update -->  
              <call function="'checkImport'">
                { 'location'  : server1.getHostname(),
                  'dsPath'    : '%s/%s' % (server1.getDir(),OPENDSNAME),                
                  'dsHost'    : server1.getHostname(),
                  'dsPort'    : server1.getPort(),
                  'dsDn'      : server1.getRootDn(),
                  'dsPswd'    : server1.getRootPwd(),
                  'expectedEntries' : ['uid=scarter,ou=People,o=example',
                                       'uid=dmiller, ou=People, o=example',
                                       'uid=rhunt, ou=People, o=example'],
                  'startDS'  : 'no' }
              </call>
                                                       
              <call function="'testCase_Postamble'"/>
              
            </sequence>
            
          </testcase>          
          
          <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
            file="'%s/testcases/replication/replication_cleanup.xml' % (TESTS_DIR)"/>
          <call function="'replication_cleanup'" />
								          
          <call function="'testSuite_Postamble'"/>
			 		   		
        </sequence>

      </block>
    
    </sequence>

  </function>

</stax>
