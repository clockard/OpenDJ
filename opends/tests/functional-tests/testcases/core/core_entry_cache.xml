<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Portions Copyright 2006-2007 Sun Microsystems, Inc.
 ! -->
<stax>

  <defaultcall function="core_entry_cache"/>

  <function name="core_entry_cache">

    <sequence>

      <block name="'entry-cache'">
      
        <sequence>
  
          <script>
            CurrentTestPath['suite']=STAXCurrentBlock
          </script>
            
          <call function="'testSuite_Preamble'"/>
    
          <!--- Check that DS started -->
          <call function="'isAlive'">
            { 'noOfLoops'        : 5 ,
              'noOfMilliSeconds' : 2000 }
          </call>
    
          <!--- Test Case : Entry Cache: Default Search -->
          <testcase name="'Core: Entry Cache: Default Search'">
            <sequence>
            
              <call function="'testCase_Preamble'"/>
              
              <message>
                 'Check the response of OpenDS when an ldap search request is conducted with a single pipe character ("|") for an existing entry'
              </message>
    
              <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                  'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                  'dsBaseDN'         : 'cn=version,cn=monitor' ,
                  'dsFilter'         : '|' ,
                  'extraParams'	   : '' }
                  
              </call>
    
              <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
              </call>
              
              <call function="'testCase_Postamble'"/>
              
            </sequence>
          </testcase>
          
          <!--- Test Case : Entry Cache: Enable Default -->
          <testcase name="'Core: Entry Cache: Enable Default'">
            <sequence>
            
              <call function="'testCase_Preamble'"/>
              
              <message>
                 'Enable the default entry cache'
              </message>
              
              <call function="'modifyEntry'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                  'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                  'entryToBeModified'   : '%s/core/ldifs/mod_entrycache2.ldif' % STAGED_DATA_DIR }
              </call>
    
              <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
              </call>
              
              <call function="'testCase_Postamble'"/>
              
            </sequence>
          </testcase>
          
          <!--- Test Case : Entry Cache: Add Attributes -->
          <testcase name="'Core: Entry Cache: Add Attributes'">
            <sequence>
            
              <call function="'testCase_Preamble'"/>
              
              <message>
                 'Add three attributes to cn=Entry Cache,cn=config'
              </message>
              
              <call function="'modifyEntry'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                  'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                  'entryToBeModified'   : '%s/core/ldifs/mod_entrycache3.ldif' % STAGED_DATA_DIR }
              </call>
    
              <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
              </call>
              
              <call function="'testCase_Postamble'"/>
              
            </sequence>
          </testcase>
          
          <!--- Test Case : Entry Cache: Attribute Already Exists -->
          <testcase name="'Core: Entry Cache: Attribute Already Exists'">
            <sequence>
            
              <call function="'testCase_Preamble'"/>
              
              <message>
                 'Add one attribute that is not allowed under cn=Entry Cache,cn=config'
              </message>
              
              <call function="'modifyEntry'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                  'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                  'entryToBeModified'   : '%s/core/ldifs/mod_entrycache4.ldif' % STAGED_DATA_DIR }
              </call>
    
              <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult ,
                    'expected'   : 65 }
              </call>
              
              <call function="'testCase_Postamble'"/>
              
            </sequence>
          </testcase>
           
          <!--- Test Case : Entry Cache: FIFO Cache-->
          <testcase name="'Core: Entry Cache: FIFO Cache'">
            <sequence>
            
              <call function="'testCase_Preamble'"/>
              
              <message>
                 'Add second entry cache which is an object of the ds-cfg-fifo-entry-cache class'
              </message>
              
              <call function="'addEntry'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                  'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                  'entryToBeAdded'   : '%s/core/ldifs/mod_entrycache5.ldif' % STAGED_DATA_DIR }
              </call>
              
              <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
              </call>
              
              <call function="'testCase_Postamble'"/>
              
            </sequence>
          </testcase>
          
          <!--- Test Case : Entry Cache: Search -->
          <testcase name="'Core: Entry Cache: Cache Search'">
            <sequence>
            
              <call function="'testCase_Preamble'"/>
              
              <message>
                 'Check the response of OpenDS when an ldap search request is conducted'
              </message>
              
              <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                  'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                  'dsBaseDN'         : 'ou=People,o=core tests,dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*' ,
                  'extraParams'	   : '' }
              </call>
    
              <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
              </call>
              
              <call function="'testCase_Postamble'"/>
              
            </sequence>
            
          </testcase>
          
          <call function="'testSuite_Postamble'"/>

        </sequence>
    
      </block>
    
    </sequence>

  </function>

</stax>
