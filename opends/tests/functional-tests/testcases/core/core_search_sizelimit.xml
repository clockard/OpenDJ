<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying * information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Portions Copyright 2006 Sun Microsystems, Inc.
 ! -->
<stax>

  <defaultcall function="core_search_sizelimit"/>

  <function name="core_search_sizelimit">

      <sequence>

        <!--- Check that DS started -->
        <call function="'isAlive'">
          { 'noOfLoops'        : 5 ,
            'noOfMilliSeconds' : 2000 }
        </call>

        <!--- Test Case : Search Size Limit 1 -->
        <testcase name="'Core: Search Size Limit 1'">
          <sequence>
            <message>
               'Core SSzL1: Check the response of OpenDS when an ldap search request is conducted with a search size limit defined in the command line and the search size is exceeed '
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsBaseDN'         : 'ou=People,o=core tests,dc=example,dc=com' ,
		'dsFilter'         : 'objectclass=*' ,
                'extraParams'	   : '-z 150' }
                
            </call>

            <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult ,
                  'expected'   : 4 }
            </call>
          </sequence>
        </testcase>
        
        <!--- Test Case : Search Size Limit 2 -->
        <testcase name="'Core: Search Size Limit 2'">
          <sequence>
            <message>
               'Core SSzL2: Check the response of OpenDS when an ldap search request is conducted with a search size limit defined in the command line and the search size is not exceeed'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsBaseDN'         : 'ou=People,o=core tests,dc=example,dc=com' ,
		'dsFilter'         : 'objectclass=*' ,
                'extraParams'	   : '-z 151' }
                
            </call>

            <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult }
            </call>
          </sequence>
        </testcase>
        
         <!--- Test Case : Search Size Limit 3 -->
        <testcase name="'Core: Search Size Limit 3'">
          <sequence>
            <message>
               'Core SSzL3: Change the server-wide search size limit to 5'
            </message>

            <call function="'addEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeAdded'   : '%s/core/ldifs/mod_searchsizelimit.ldif' % STAGED_DATA_DIR }
            </call>

            <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult }
            </call>
          </sequence>
        </testcase> 
      
                <!--- Test Case : Search Size Limit 4 -->
        <testcase name="'Core: Search Size Limit 4'">
          <sequence>
            <message>
               'Core SSzL4: Check the response of OpenDS when an ldap search request is conducted with a search size limit defined by the server-wide parameter, ds-cfg-size-limit, and the search size limit is exceeded'
            </message>

            <call function="'AnonSearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsBaseDN'         : 'ou=People,o=core tests,dc=example,dc=com' ,
		'dsFilter'         : 'objectclass=*' ,
                'extraParams'	   : '' }
                
            </call>

            <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult ,
                  'expected'   : 4 }
            </call>
          </sequence>
        </testcase>
        
                 <!--- Test Case : Search Size Limit 5 -->
        <testcase name="'Core: Search Size Limit 5'">
          <sequence>
            <message>
               'Core SSzL5: Change the server-wide search size limit to 1000'
            </message>

            <call function="'addEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeAdded'   : '%s/core/ldifs/mod_searchsizelimit2.ldif' % STAGED_DATA_DIR }
            </call>

            <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult }
            </call>
          </sequence>
        </testcase>
        
                <!--- Test Case : Search Size Limit 6 -->
        <testcase name="'Core: Search Size Limit 6'">
          <sequence>
            <message>
               'Core SSzL6: Check the response of OpenDS when an ldap search request is conducted with a search size limit defined by the server-wide parameter, ds-cfg-size-limit, and the search size limit is not exceeded'
            </message>

            <call function="'AnonSearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsBaseDN'         : 'ou=People,o=core tests,dc=example,dc=com' ,
		'dsFilter'         : 'objectclass=*' ,
                'extraParams'	   : '' }
                
            </call>

            <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult }
            </call>
          </sequence>
        </testcase>
        
                         <!--- Test Case : Search Size Limit 7 -->
        <testcase name="'Core: Search Size Limit 7'">
          <sequence>
            <message>
               'Core SSzL7: Change the search size limit for cn=Directory Manager to 5'
            </message>

            <call function="'addEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeAdded'   : '%s/core/ldifs/mod_searchsizelimit3.ldif' % STAGED_DATA_DIR }
            </call>

            <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult }
            </call>
          </sequence>
        </testcase>
        
                        <!--- Test Case : Search Size Limit 8 -->
        <testcase name="'Core: Search Size Limit 8'">
          <sequence>
            <message>
               'Core SSzL8: Check the response of OpenDS when an ldap search request is conducted with a user search size limit defined by the user-specific parameter, ds-rlim-size-limit, and the search size limit is exceeded'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsBaseDN'         : 'ou=People,o=core tests,dc=example,dc=com' ,
		'dsFilter'         : 'objectclass=*' ,
                'extraParams'	   : '' }
                
            </call>

            <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult ,
                  'expected'   : 4 }
            </call>
          </sequence>
        </testcase>
        
                                <!--- Test Case : Search Size Limit 9 -->
        <testcase name="'Core: Search Size Limit 9'">
          <sequence>
            <message>
               'Core SSzL9: Check the response of OpenDS when an ldap search request is conducted with a user search size limit defined by the user-specific parameter, ds-rlim-size-limit, and the search is conducted as a bind to a different user'
            </message>

            <call function="'AnonSearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsBaseDN'         : 'ou=People,o=core tests,dc=example,dc=com' ,
		'dsFilter'         : 'objectclass=*' ,
                'extraParams'	   : '' }
                
            </call>

            <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult }
            </call>
          </sequence>
        </testcase>
        
                                 <!--- Test Case : Search Size Limit 10 -->
        <testcase name="'Core: Search Size Limit 10'">
          <sequence>
            <message>
               'Core SSzL10: Change the search size limit for cn=Directory Manager to -1'
            </message>

            <call function="'addEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeAdded'   : '%s/core/ldifs/mod_searchsizelimit4.ldif' % STAGED_DATA_DIR }
            </call>

            <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult }
            </call>
          </sequence>
        </testcase>
        
                                        <!--- Test Case : Search Size Limit 11 -->
        <testcase name="'Core: Search Size Limit 11'">
          <sequence>
            <message>
               'Core SSzL11: Check the response of OpenDS when an ldap search request is conducted with a user search size limit defined as "unlimited" by the user-specific parameter, ds-rlim-size-limit, equal to -1 and the search is against 1150 entries'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsBaseDN'         : 'ou=People,o=core tests,dc=example,dc=com' ,
		'dsFilter'         : 'objectclass=*' ,
                'extraParams'	   : '' }
                
            </call>

            <call function="'checktestRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult }
            </call>
          </sequence>
        </testcase>
        
        <return>RC</return>

     </sequence>

  </function>

</stax>
