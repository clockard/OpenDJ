<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Portions Copyright 2006-2007 Sun Microsystems, Inc.
 ! -->
<stax>

  <defaultcall function="core_tf_filters"/>

  <function name="core_tf_filters">

    <sequence>

      <block name="'filters'">
      
        <sequence>
  
          <script>
            if not CurrentTestPath.has_key('group'):
              CurrentTestPath['group']='core'								  
            CurrentTestPath['suite']=STAXCurrentBlock
          </script>
            
          <call function="'testSuite_Preamble'"/>


          <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
            file="'%s/testcases/core/core_setup.xml' % (TESTS_DIR)"/>
          <call function="'core_setup'"/>

												    
          <!--- Test Case : True False Filters: And Filter -->
          <testcase name="'Core: True False Filters: And Filter'">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                 'Core TFF1: Check the response of OpenDS when an ldap search request is conducted with a single ampersand character '
              </message>
    
              <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                  'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                  'dsBaseDN'         : 'cn=version,cn=monitor' ,
                  'dsFilter'         : '&amp;' }                
              </call>
    
              <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case : True False Filters: Or Filter -->
          <testcase name="'Core: True False Filters: Or Filter'">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                 'Core TFF2: Check the response of OpenDS when an ldap search request is conducted with a single pipe character'
              </message>
    
              <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                  'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                  'dsBaseDN'         : 'cn=version,cn=monitor' ,
                  'dsFilter'         : '|' }
              </call>
    
              <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case : True False Filters: And Filter Entry Not Exists -->
          <testcase name="'Core: True False Filters: And Filter Entry Not Exists'">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                 'Core TFF3: Check the response of OpenDS when an ldap search request is conducted with a single ampersand character for a non-existent entry'
              </message>
    
              <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                  'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                  'dsBaseDN'         : 'cn=bad,cn=monitor' ,
                  'dsFilter'         : '&amp;' }
              </call>
    
              <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult ,
                    'expected'   : 32 }
              </call>
              <call function="'testCase_Postamble'"/>
             </sequence>
          </testcase>
    
          <!--- Test Case : True False Filters: Or Filter Entry Not Exists -->
          <testcase name="'Core: True False Filters: Or Filter Entry Not Exists'">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                 'Core TFF4: Check the response of OpenDS when an ldap search request is conducted with a single pipe character for a non-existent entry'
              </message>
    
              <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                  'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                  'dsBaseDN'         : 'cn=bad,cn=monitor' ,
                  'dsFilter'         : '|' }
              </call>
    
              <call function="'checktestRC'">
                  { 'returncode' : RC ,
                    'result'     : STAXResult ,
                    'expected'   : 32 }
              </call>
              <call function="'testCase_Postamble'"/>
             </sequence>
    
          </testcase>


          <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
            file="'%s/testcases/core/core_cleanup.xml' % (TESTS_DIR)"/>
          <call function="'core_cleanup'"/>

												          
          <call function="'testSuite_Postamble'"/>

        </sequence>
    
      </block>
    
    </sequence>

  </function>

</stax>
