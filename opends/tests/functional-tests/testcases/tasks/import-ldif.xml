<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Portions Copyright 2007-2008 Sun Microsystems, Inc.
! -->
<stax>
  <defaultcall function="import-ldif"/>
  <function name="import-ldif" scope="local">
    <block name="STAXCurrentFunction">    
      <sequence>
        <script>
          CurrentTestPath['suite']=STAXCurrentFunction
        </script>
        <call function="'testSuite_Preamble'" />
        
        
        <!--- Test Suite information
          #@TestSuiteName      Tasks
          #@TestSuitePurpose    Verify that the basic import functionality is working in mode task
          #@TestSuiteID            Import Tests
          #@TestSuiteGroup       Import
          #@TestGroup             tasks
          #@TestScript             import.xml
          #@TestHTMLLink        http://opends.dev.java.net/
          -->

                   
        <!--- Test Case information
          #@TestMarker          Backend Import Tests
          #@TestName            Backend: Import: LDIF Default
          #@TestID                 LDIF Default
          #@TestPurpose        schedule a Basic import in task mode to be executed immedialy in synchronous mode
          #@TestPreamble
          #@TestSteps            execute a import-ldif in a task
          #@TestSteps            don't specify the -t option  to schedule for immediate execution and wait the end of the task to return    
          #@TestPostamble
          #@TestResult
          -->
            
        <testcase name="getTestCaseName('schedule import-ldif task for immediate execution in synchronous mode')">
          <sequence>
            <call function="'testCase_Preamble'"/>              
            
            <call function="'ImportLdifWithScript'">
              { 'location'    : STAF_REMOTE_HOSTNAME ,
              'dsInstanceHost' :  DIRECTORY_INSTANCE_HOST,
              'dsInstancePort' : DIRECTORY_INSTANCE_PORT,
              'dsInstanceDn'  : DIRECTORY_INSTANCE_DN,
              'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
              'dsLdifFile'  : '%s/tasks/import.ldif' % logsRemoteDataDir,
              'dsAppend' : ' ',
              'dsBackEnd'   : 'userRoot'}
            </call>
            
            <!-- Check data are imported -->
            <call function="'checkImport'">
              { 'expectedEntries' : ['uid=scarter,dc=example,dc=com',
              'uid=tmorris, dc=example,dc=com'],
              'startDS'     : 'False'              
              }
            </call>
            
            <!-- Delete entries -->
            <call function="'DeleteEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
              'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
              'dsInstanceDn'	: DIRECTORY_INSTANCE_DN ,
              'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
              'dsBaseDN'		: 'uid=scarter,dc=example,dc=com' }
            </call>
            <call function="'DeleteEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
              'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
              'dsInstanceDn'	: DIRECTORY_INSTANCE_DN ,
              'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
              'dsBaseDN'		: 'uid=tmorris,dc=example,dc=com' }
            </call>          
            
            <call function="'testCase_Postamble'"/>
          </sequence>
        </testcase>
        
        
        <!--- Test Case information
          #@TestMarker          Backend Import Tests
          #@TestName            Backend: Import: LDIF Default
          #@TestID                 LDIF Default
          #@TestPurpose        schedule a Basic import in task mode to be executed immedialy in asynchronous mode
          #@TestPreamble
          #@TestSteps            execute a import-ldif in a task
          #@TestSteps            specify the -t option with the value 0 to schedule for immediate execution      
          #@TestPostamble
          #@TestResult
          -->
            
        <testcase name="getTestCaseName('schedule import-ldif task for immediate execution in asynchronous mode')">
          <sequence>
            <call function="'testCase_Preamble'"/>              
            
            <call function="'ImportLdifWithScript'">
              { 'location'    : STAF_REMOTE_HOSTNAME ,
              'dsInstanceHost' :  DIRECTORY_INSTANCE_HOST,
              'dsInstancePort' : DIRECTORY_INSTANCE_PORT,
              'dsInstanceDn'  : DIRECTORY_INSTANCE_DN,
              'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
              'dsLdifFile'  : '%s/tasks/import.ldif' % logsRemoteDataDir,
              'dsAppend' : ' ',
              'startTask'  : '0',
              'dsBackEnd'   : 'userRoot'}
            </call>
            <call function="'Sleep'">
              { 'location'  :	 STAF_REMOTE_HOSTNAME,
              'sleepForMilliSeconds'  :  90000 }
            </call>
            
            <!--  Check data are imported -->
            <call function="'checkImport'">
              { 'expectedEntries' : ['uid=scarter,dc=example,dc=com',
              'uid=tmorris, dc=example,dc=com'],
              'startDS'     : 'False'              
              }
            </call>
            
            <!-- Delete entries -->
            <call function="'DeleteEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
              'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
              'dsInstanceDn'	: DIRECTORY_INSTANCE_DN ,
              'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
              'dsBaseDN'		: 'uid=scarter,dc=example,dc=com' }
            </call>
            <call function="'DeleteEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
              'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
              'dsInstanceDn'	: DIRECTORY_INSTANCE_DN ,
              'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
              'dsBaseDN'		: 'uid=tmorris,dc=example,dc=com' }
            </call>          
            
            <call function="'testCase_Postamble'"/>
          </sequence>
        </testcase>
        
        
        
        <!--- Test Case information
          #@TestMarker          Backend Import Tests
          #@TestName            Backend: Import: LDIF Default
          #@TestID                 LDIF Default
          #@TestPurpose        schedule a import-ldif in task mode to be executed in asynchronous mode
          #@TestPreamble
          #@TestSteps            execute a import-ldif in a task
          #@TestSteps            specify the -t option with the value non null  to schedule an  execution      
          #@TestPostamble
          #@TestResult
          -->
            
        <testcase name="getTestCaseName('schedule import-ldif task for scheduled execution in asynchronous mode')">
          <sequence>
            <call function="'testCase_Preamble'"/>              
            
            <call function="'ImportLdifWithScript'">
              { 'location'    : STAF_REMOTE_HOSTNAME ,
              'dsInstanceHost' :  DIRECTORY_INSTANCE_HOST,
              'dsInstancePort' : DIRECTORY_INSTANCE_PORT,
              'dsInstanceDn'  : DIRECTORY_INSTANCE_DN,
              'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
              'dsLdifFile'  : '%s/tasks/import.ldif' % logsRemoteDataDir,
              'dsAppend' : ' ',
              'startTask'  : '20061212000000',
              'dsBackEnd'   : 'userRoot'}
            </call>
            <call function="'Sleep'">
              { 'location'  :	 STAF_REMOTE_HOSTNAME,
              'sleepForMilliSeconds'  :  90000 }
            </call>
            
            <!--  Check data are imported -->
            <call function="'checkImport'">
              { 'expectedEntries' : ['uid=scarter,dc=example,dc=com',
              'uid=tmorris, dc=example,dc=com'],
              'startDS'     : 'False'              
              }
            </call>
            
            <!-- Delete entries -->
            <call function="'DeleteEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
              'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
              'dsInstanceDn'	: DIRECTORY_INSTANCE_DN ,
              'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
              'dsBaseDN'		: 'uid=scarter,dc=example,dc=com' }
            </call>
            <call function="'DeleteEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
              'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
              'dsInstanceDn'	: DIRECTORY_INSTANCE_DN ,
              'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
              'dsBaseDN'		: 'uid=tmorris,dc=example,dc=com' }
            </call>          
            
            <call function="'testCase_Postamble'"/>
          </sequence>
        </testcase>                                         
        
        <call function="'testSuite_Postamble'" />
      </sequence>
    </block>      
  </function>
</stax>
