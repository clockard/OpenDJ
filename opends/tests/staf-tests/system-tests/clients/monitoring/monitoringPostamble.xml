<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2008 Sun Microsystems, Inc.
 ! -->
<stax>

  <defaultcall function="monitoringPostamble"/>

  <!-- ************************************************************ -->
  <!-- Client postamble is automatically called by the scheduler    -->
  <!-- and must always define all the parameters below              -->
  <function name="monitoringPostamble" scope="local">
    <function-map-args>
      <function-arg-def name="client"     type="required"/>
      <function-arg-def name="instances"  type="required"/>
      <function-arg-def name="duration"   type="required"/>
      <function-arg-def name="suffix"     type="required"/>
      <function-arg-def name="outFile"    type="required"/>
      <function-arg-def name="fileFd"     type="required"/>
    </function-map-args>
    
    <sequence>
      <!-- ===================   Comments   =================== -->
      <!-- client is run under paralleliterate tag              -->
      <!-- each variables defined are internal                  -->
      <!-- client should have its own err_num variable in order -->
      <!-- to inform scheduler if it has pass/fail status       -->
      <script>
        errNum = 0
        msg = ''
      </script>
      <!-- ==================    Parser     =================== -->
      <!-- parse the client parameters :                        -->
      <!-- params is [[param1,val1],[param2,val2],...]          -->
      <!-- get the ldap instance parameters                     -->
      <import machine="'%s' % (STAF_LOCAL_HOSTNAME)"
              file="'%s/%sLib.xml' % (client.getPath(),client.getName())"/>
      <call function="'%sParser' % client.getName()">
      {
        'client'     : client,
        'instances'  : instances,
        'duration'   : duration,
        'suffix'     : suffix
      }
      </call>
      <if expr="msg.find('ERROR') != -1">
        <sequence>
          <message>'%s' % msg</message>
          <call function="'writeOperationResult'">
            {
              'returncode' : '1',
              'expected'   : '0',
              'result'     : msg,
              'status'     : 'ERROR',
              'fileFd'     : fileFd
            }
          </call>
          <script>
            errNum += 1
          </script>
        </sequence>
      <else>
        <sequence>
          <!-- ==== Display results links ==== -->
          <call function="'writeStartTagOperation'">
          { 'tagName' : 'links',
            'fileFd'  : fileFd }
          </call>
          <call function="'writeMessage'">
          { 
            'content' : 'datas',
            'xlink'   : '%s/datas' % client.getLogDir(),
            'fileFd'  : fileFd
          }
          </call>
          <call function="'writeMessage'">
          { 
            'content' : 'erros',
            'xlink'   : '%s/erros' % client.getLogDir(),
            'fileFd'  : fileFd
          }
          </call>
          <call function="'writeEndTagOperation'">{'fileFd'  : fileFd}</call>
          
          <!-- ==== Generate charts ==== -->
          <call function="'writeStartTagOperation'">
          { 'tagName' : 'generateCharts',
            'fileFd'  : fileFd }
          </call>
          
          <call function="'writeMessage'">
          { 'fileFd'  : fileFd,
            'content' : 'Generate charts for %s:%s' % \
                        (serverInstance.getHost(),serverInstance.getLDAPPort())
          }
          </call>
          
          <script>
            cParam = []
            cParam.append('-cp %s:%s:./ChartGenerator.jar'%(jcommon,jfreechart))
            cParam.append('org.opends.testqa.monitoringclient.ChartGenerator')
            cParam.append('-r %s' % client.getLogDir())
            cParam.append('-f %s' % client.getLogDir())
            cParam = ' '.join(cParam)
            
            titleName = '%s: run %s:chartGenerator on %s' % \
                        (client.getHost(),client.getName(),
                         serverInstance.getName())
          </script>
          <call function="'writeMessage'">
          { 'fileFd'  : fileFd,
            'content' : 'cmd : cd %s/ChartGenerator ; %s/bin/java %s' % \
                        (client.getPath(),JAVA_HOME,cParam)
          }
          </call>
          <process name="'%s' % titleName">
            <location>client.getHost()</location>
            <command>'%s/bin/java' % JAVA_HOME</command>
            <parms>cParam </parms>
            <workdir>'%s/ChartGenerator' % client.getPath()</workdir>
            <envs>['PATH=%s/bin:/bin:/usr/bin' % JAVA_HOME]</envs>
            <stderr mode="'stdout'"/>
            <stdout mode="'append'">outFile</stdout>
            <returnstdout/>
          </process>
          <!-- TBD : result should be STAXResult[0][1] : problem when
                     javaexception, with carac " and < >-->
          <call function="'checkRC'">
            { 'returncode' : RC ,
              'result'     : '',
              'fileFd'     : fileFd }
          </call>
          <script>
            errNum += STAXResult
          </script>
          
          <call function="'writeMessage'">
          { 
            'content' : 'Charts available here',
            'xlink'   : '%s' % client.getLogDir(),
            'fileFd'  : fileFd
          }
          </call>
          <call function="'writeEndTagOperation'">{'fileFd'  : fileFd}</call>
          
        </sequence>
      </else>
      </if>
      
      <return> errNum </return>
      
    </sequence>
  </function>

</stax>
