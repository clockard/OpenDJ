<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2010 Sun Microsystems, Inc.
 ! -->
<stax>

  <!-- Definition of Test Cases -->             

  <!--- Test Case : Core : Collective Attributes : core_collectiveattr_001 -->
  <!--- Test Case information
  #@TestMarker          Schema
  #@TestName            Core : Collective Attributes
  #@TestID              core_collectiveattr_001
  #@TestPurpose         Create and add a collective attribute
  #@TestPreamble
  #@TestSteps           add collective attribute with attributename;collective
  #@TestSteps           (with secretary) verify in 2 entries that
  #@TestSteps           attribute has been added
  #@TestPostamble
  #@TestResult          Test is successful if the result code is 0
  -->
  <function name="core_collectiveattr_001" scope="local">
    <testcase name="getTestCaseName('Create and add a Collective Attribute')">
      <sequence> 
        <try>
          <sequence>                
            <call function="'testCase_Preamble'"/>
            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <script>
            coreattrLdif1='%s/core/ldifs/collectiveattr-1.ldif' % remote.data
            baseDN='ou=People,o=collectiveattr tests,dc=example,dc=com'
            targetDN1='uid=kwinters,ou=North,ou=America,%s' % baseDN
            targetDN2='uid=abergin,ou=Europe,%s' % baseDN
            </script>

            <message>'++ Add collective attribute secretary, should pass'</message>
            <call function="'ldapModifyWithScript'">
              {
                'dsAdd'            : 'True' ,
                'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsFilename'       : coreattrLdif1
              }
            </call>

            <message>'++ Search attribute secretary in user kwinters'</message>
            <call function="'ldapSearchWithScript'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsBaseDN'         : targetDN1 ,
                'dsFilter'         : 'objectclass=*' ,
                'dsAttributes'     : 'secretary'
              }
            </call>
            <script>
                  returnString = STAXResult[0][1]
            </script>
            <call function="'searchString'">
              { 'expectedString' : 'secretary: uid=tmorris,ou=Asia,',
                'returnString'   : returnString ,
                'expectedRC'     : expectedRC ,
              }
            </call>

            <message>'++ Search attribute collectiveAttributeSubentries in user kwinters'</message>
            <call function="'ldapSearchWithScript'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsBaseDN'         : targetDN1 ,
                'dsFilter'         : 'objectclass=*' ,
                'dsAttributes'     : 'collectiveAttributeSubentries'
              }
            </call>
            <script>
                returnString = STAXResult[0][1]
            </script>
            <call function="'searchString'">
              { 'expectedString' : 'collectiveAttributeSubentries: cn=Collective Secretary,',
                'returnString'   : returnString ,
                'expectedRC'     : expectedRC ,
              }
            </call>


            <message>'++ Search attribute secretary in user abergin'</message>
            <call function="'ldapSearchWithScript'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsBaseDN'         : targetDN2 ,
                'dsFilter'         : 'objectclass=*' ,
                'dsAttributes'     : 'secretary'
              }
            </call>
            <script>
                returnString = STAXResult[0][1]
            </script>
            <call function="'searchString'">
              { 'expectedString' : 'secretary: uid=tmorris,ou=Asia,',
                'returnString'   : returnString ,
                'expectedRC'     : expectedRC ,
              }
            </call>


        </sequence>

        <catch exception="'STAXException.*'" typevar="eType" var="eInfo">
          <message log="1" level="'fatal'">
            '%s: Test failed. eInfo(%s)' % (eType,eInfo)
          </message>
        </catch>
          
          <finally>
            <call function="'testCase_Postamble'"/>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>            

  <!--- Test Case : Core : Collective Attributes :  -->
  <!--- Test Case information
  #@TestMarker          Schema
  #@TestName            Core : Collective Attributes
  #@TestID              core_collectiveattr_002
  #@TestPurpose         Modify the value of the collective attribute
  #@TestPreamble
  #@TestSteps           Modify the value of the collective attribute secretary
  #@TestSteps           Verify in one entry the attribute value has changed.
  #@TestPostamble
  #@TestResult          Test is successful if the result code is 0
  -->
  <function name="core_collectiveattr_002" scope="local">
    <testcase name="getTestCaseName('Modify the value of the Collective Attribute ')">
      <sequence>
        <try>
          <sequence>
            <call function="'testCase_Preamble'"/>
            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

          <script>
            coreattrLdif2='%s/core/ldifs/collectiveattr-2.ldif' % remote.data
            baseDN='ou=People,o=collectiveattr tests,dc=example,dc=com'
            targetDN1='uid=kwinters,ou=North,ou=America,%s' % baseDN
            targetDN2='uid=abergin,ou=Europe,%s' % baseDN
          </script>

            <message>'++ Add collective attribute secretary, should pass'</message>
            <call function="'ldapModifyWithScript'">
              {
                'dsAdd'            : 'True' ,
                'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsFilename'       : coreattrLdif2
              }
            </call>

            <message>'++ Search attribute secretary in user kwinters'</message>
            <call function="'ldapSearchWithScript'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsBaseDN'         : targetDN1 ,
                'dsFilter'         : 'objectclass=*' ,
                'dsAttributes'     : 'secretary'
              }
            </call>
            <script>
                returnString = STAXResult[0][1]
            </script>
            <call function="'searchString'">
              { 'expectedString' : 'secretary: uid=dmiller,ou=America,',
                'returnString'   : returnString ,
                'expectedRC'     : 0 ,
              }
            </call>

            <message>'++ Search attribute collectiveAttributeSubentries in user kwinters'</message>
            <call function="'ldapSearchWithScript'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsBaseDN'         : targetDN1 ,
                'dsFilter'         : 'objectclass=*' ,
                'dsAttributes'     : 'collectiveAttributeSubentries'
              }
            </call>
            <script>
                returnString = STAXResult[0][1]
            </script>
            <call function="'searchString'">
              { 'expectedString' : 'collectiveAttributeSubentries: cn=Collective Secretary,',
                'returnString'   : returnString ,
                'expectedRC'     : 0 ,
              }
            </call>

            <message>'++ Search attribute secretary in user abergin'</message>
            <call function="'ldapSearchWithScript'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsBaseDN'         : targetDN2 ,
                'dsFilter'         : 'objectclass=*' ,
                'dsAttributes'     : 'secretary'
              }
            </call>
            <script>
                returnString = STAXResult[0][1]
            </script>
            <call function="'searchString'">
              { 'expectedString' : 'secretary: uid=dmiller,ou=America,',
                'returnString'   : returnString ,
                'expectedRC'     : 0 ,
              }
            </call>
          
        </sequence>

        <catch exception="'STAXException.*'" typevar="eType" var="eInfo">
          <message log="1" level="'fatal'">
            '%s: Test failed. eInfo(%s)' % (eType,eInfo)
          </message>
        </catch>
          
          <finally>
            <call function="'testCase_Postamble'"/>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>


</stax>
