<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, exclude this CDDL HEADER in each
 ! file and exclude the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2008 Sun Microsystems, Inc.
 ! -->
<stax>
  
  <defaultcall function="clu_ldif-diff_checkbehavior"/>
  
  <function name="clu_ldif-diff_checkbehavior">
    
    <sequence>
      
      <block name="'clu_ldif-diff_checkbehavior'">
        
        <sequence>
          
          <!--- Test Suite information
            #@TestSuiteName     ldif-diff check behavior tests
            #@TestSuitePurpose  Test the results of the ldif-diff command.
            #@TestSuiteGroup    ldif-diff check behavior tests
            #@TestScript        clu_ldif-diff_checkbehavior.xml
          -->
          
          <script>
            if not CurrentTestPath.has_key('group'):
              CurrentTestPath['group'] = 'clu'              
            CurrentTestPath['suite'] = STAXCurrentBlock
          </script>
          
          <call function="'testSuite_Preamble'"/>
          
          <!--- Define default value for sourceldif -->
          <script>
            sourceldif = '%s/clu/clu_start.ldif' % remote.data
            targetldif = '%s/clu/ldif-diff_checkbehavior.ldif' \
                         % remote.data
          </script>
          
          <!--- Test Case information
            #@TestMarker          ldif-diff check behavior tests
            #@TestName            ldif-diff: compare ldif files with no diffs
            #@TestIssue           3111
            #@TestPurpose         Test ldif-diff to compare ldif files with 
                                  no diffs
            #@TestPreamble        none
            #@TestStep            Do an ldif-diff to compare ldif files with
                                  no diffs
            #@TestPostamble       none
            #@TestResult          Success if ldif-diff returns 0.
          -->
          <testcase name="getTestCaseName
          ('ldif-diff: compare ldif files with no diffs')">
            
            <sequence>
              
              <call function="'testCase_Preamble'"/>
              
              <message>
                'ldif-diff: compare ldif files with no diffs'
              </message>
              
              <call function="'LdifDiffWithScript-new'">
                {
                'sourceLdif' : sourceldif ,
                'targetLdif' : sourceldif ,
                'outputLdif' : '%s/ldif-diff_nodiffs.out' \
                               % DIRECTORY_INSTANCE_DIR
                }
              </call>
              
              <call function="'testCase_Postamble'"/>
              
            </sequence>
            
          </testcase> 
          
          <!--- Test Case information
            #@TestMarker          ldif-diff check behavior tests
            #@TestName            ldif-diff: compare ldif files with diffs
            #@TestIssue           2641
            #@TestPurpose         Test ldif-diff to compare ldif files with 
                                  diffs
            #@TestPreamble        none
            #@TestStep            Do an ldif-diff to compare ldif files with
                                  diffs
            #@TestPostamble       none
            #@TestResult          Success if ldif-diff returns 1.
          -->
          <testcase name="getTestCaseName
          ('ldif-diff: compare ldif files with diffs')">
            
            <sequence>
              
              <call function="'testCase_Preamble'"/>
              
              <message>
                'ldif-diff: compare ldif files with diffs'
              </message>
              
              <call function="'LdifDiffWithScript-new'">
                {
                'sourceLdif' : sourceldif ,
                'targetLdif' : targetldif ,
                'outputLdif' : '%s/ldif-diff_withdiffs.out' \
                               % DIRECTORY_INSTANCE_DIR ,
                'expectedRC' : 1 ,
                'knownIssue' : '2641'
                }
              </call>
              
              <call function="'testCase_Postamble'"/>
              
            </sequence>
            
          </testcase> 
          
          <!--- Test Case information
            #@TestMarker          ldif-diff check behavior tests
            #@TestName            ldif-diff: check diff file
            #@TestIssue           3111
            #@TestPurpose         Check ldif file generated by ldif-diff
            #@TestPreamble        none
            #@TestStep            Do an ldif-diff to compare ldif files with
                                  diffs
            #@TestStep            Check this ldif file using compareFile
            #@TestPostamble       none
            #@TestResult          Success if compareFile returns 0.
          -->
          <testcase name="getTestCaseName('ldif-diff: check diff file')">
            
            <sequence>
              
              <call function="'testCase_Preamble'"/>
              
              <message>
                'ldif-diff: check diff file'
              </message>
              
              <call function="'LdifDiffWithScript-new'">
                {
                'sourceLdif' : sourceldif ,
                'targetLdif' : targetldif ,
                'outputLdif' : '%s/ldif-diff.out' \
                               % DIRECTORY_INSTANCE_DIR ,
                'expectedRC' : 'noCheck'
                }
              </call>
              
              <call function="'compareFile'">
                { 
                'outputFile' : 'ldif-diff.out' ,
                'refFile'    : 'ldif-diff.ref',
                'knownIssue' : '3111'
                }
              </call>

              <call function="'testCase_Postamble'"/>
              
            </sequence>
            
          </testcase> 
          
          <!--- Test Case information
            #@TestMarker          ldif-diff check behavior tests
            #@TestName            ldif-diff: check diff file
            #@TestIssue           3111
            #@TestPurpose         Check ldif file generated by ldif-diff
            #@TestPreamble        none
            #@TestStep            Do an ldif-diff to compare ldif files with
                                  diffs
            #@TestStep            Check this ldif file using compareFile
            #@TestPostamble       none
            #@TestResult          Success if compareFile returns 0.
          -->
          <testcase name="getTestCaseName
          ('ldif-diff: check diff files with single value changes')">
            
            <sequence>
              
              <call function="'testCase_Preamble'"/>
              
              <message>
                'ldif-diff: check diff file with single value changes'
              </message>
              
              <call function="'LdifDiffWithScript-new'">
                {
                'sourceLdif'         : sourceldif ,
                'targetLdif'         : targetldif ,
                'outputLdif'         : '%s/ldif-diff_singlevalue.out' \
                                       % DIRECTORY_INSTANCE_DIR ,
                'singleValueChanges' : 'True' ,           
                'expectedRC'         : 'noCheck'
                }
              </call>
              
              <call function="'compareFile'">
                { 
                'outputFile' : 'ldif-diff_singlevalue.out' ,
                'refFile'    : 'ldif-diff_singlevalue.ref' ,
                'knownIssue' : '3111'
                }
              </call>

              <call function="'testCase_Postamble'"/>
              
            </sequence>
            
          </testcase>
          
          <call function="'testSuite_Postamble'"/>
          
        </sequence>
        
      </block>
      
    </sequence>
    
  </function>
  
</stax>
