<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2007-2008 Sun Microsystems, Inc.
! -->
<stax>
  <defaultcall function="import-ldif"/>
  <function name="import-ldif" scope="local">
    <block name="STAXCurrentFunction">    
      <sequence>
        <script>
          CurrentTestPath['suite']=STAXCurrentFunction
        </script>
        <call function="'testSuite_Preamble'" />
        
        
        <!--- Test Suite information
          #@TestSuiteName       Import Tasks
          #@TestSuitePurpose    Validate the Import functionality in mode task
          #@TestSuiteID         Import Tests
          #@TestSuiteGroup      Import
          #@TestGroup           tasks
          #@TestScript          import_ldif.xml
          #@TestHTMLLink        http://opends.dev.java.net/
          -->

                   
        <!--- Test Case information
          #@TestMarker           Import Tasks
          #@TestName             Import task in synchronous mode 
          #@TestPurpose          Schedule a import in task mode to be executed immedialy in synchronous mode
          #@TestPreamble
          #@TestStep             Execute a import-ldif in a task
          #@TestStep             Execute manage-tasks output and check the Import task is returned
          #@TestStep             Don't specify the -t option
          #@TestStep             The task is scheduled for immediate execution and the script must wait the end of the import
          #@TestPostamble
          #@TestResult
          -->
            
        <testcase name="getTestCaseName('schedule import-ldif task for immediate execution in synchronous mode')">
          <sequence>
            <call function="'testCase_Preamble'"/>              
            
            <call function="'ImportLdifWithScript'">
              { 'location'     : STAF_REMOTE_HOSTNAME ,
              'dsInstanceHost' :  DIRECTORY_INSTANCE_HOST,
              'dsInstancePort' : DIRECTORY_INSTANCE_PORT,
              'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
              'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
              'dsLdifFile'     : '%s/tasks/import.ldif' % remote.data,
              'dsAppend'       : ' ',
              'dsBackEnd'      : DIRECTORY_INSTANCE_BE}
            </call>

            <!-- manage-tasks -->
            <call function="'manage-tasks'">
              { 'location'     : STAF_REMOTE_HOSTNAME ,
              'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
              'dsInstancePort' : DIRECTORY_INSTANCE_PORT,
              'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
              'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
              'dsQuiet'        : ' '
              }
            </call>
  
            <script>
              returnString = STAXResult[0][1]
            </script>
        
            <call function="'searchStringForSubstring'">
              { 'returnString'	   : returnString,
              'testString'	   : 'Import',
              'expectedResult'	   : '1' }
            </call>            
     
            
            <!-- Check data are imported -->
            <call function="'checkImport'">
              { 'expectedEntries' : ['uid=scarter,dc=example,dc=com',
              'uid=tmorris, dc=example,dc=com'],
              'startDS'     : 'False'              
              }
            </call>
            
            <!-- Delete entries -->
            <call function="'DeleteEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
              'dsInstancePort'     : DIRECTORY_INSTANCE_PORT ,
              'dsInstanceDn'       : DIRECTORY_INSTANCE_DN ,
              'dsInstancePswd'     : DIRECTORY_INSTANCE_PSWD ,
              'dsBaseDN'           : 'uid=scarter,dc=example,dc=com' }
            </call>
            <call function="'DeleteEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
              'dsInstancePort'          : DIRECTORY_INSTANCE_PORT ,
              'dsInstanceDn'            : DIRECTORY_INSTANCE_DN ,
              'dsInstancePswd'          : DIRECTORY_INSTANCE_PSWD ,
              'dsBaseDN'		: 'uid=tmorris,dc=example,dc=com' }
            </call>          
            
            <call function="'testCase_Postamble'"/>
          </sequence>
        </testcase>
        
        
        <!--- Test Case information

          #@TestMarker           Import Tasks
          #@TestName             Import task in asynchronous mode 
          #@TestPurpose          Schedule a import in task mode to be executed immedialy in asynchronous mode
          #@TestPreamble
          #@TestStep             Execute a import-ldif in a task
          #@TestStep             specify the -t option with the value 0
          #@TestStep             The task is scheduled for immediate execution
          @TestStep              The script returns immedialy after scheduling the task                
          #@TestPostamble        
       --> 
            
        <testcase name="getTestCaseName('schedule import-ldif task for immediate execution in asynchronous mode')">
          <sequence>
            <call function="'testCase_Preamble'"/>              
            
            <call function="'ImportLdifWithScript'">
              { 'location'    : STAF_REMOTE_HOSTNAME ,
              'dsInstanceHost' :  DIRECTORY_INSTANCE_HOST,
              'dsInstancePort' : DIRECTORY_INSTANCE_PORT,
              'dsInstanceDn'  : DIRECTORY_INSTANCE_DN,
              'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
              'dsLdifFile'  : '%s/tasks/import.ldif' % remote.data,
              'dsAppend' : ' ',
              'startTask'  : '0',
              'dsBackEnd'   : DIRECTORY_INSTANCE_BE}
            </call>
            <call function="'Sleep'">
              { 'location'  :	 STAF_REMOTE_HOSTNAME,
              'sleepForMilliSeconds'  :  40000 }
            </call>
            
            <!--  Check data are imported -->
            <call function="'checkImport'">
              { 'expectedEntries' : ['uid=scarter,dc=example,dc=com',
              'uid=tmorris, dc=example,dc=com'],
              'startDS'     : 'False'              
              }
            </call>
            
            <!-- Delete entries -->
            <call function="'DeleteEntry'">
              { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST ,
              'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
              'dsInstanceDn'	 : DIRECTORY_INSTANCE_DN ,
              'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
              'dsBaseDN'         : 'uid=scarter,dc=example,dc=com' }
            </call>
            <call function="'DeleteEntry'">
              { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST ,
              'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
              'dsInstanceDn'	 : DIRECTORY_INSTANCE_DN ,
              'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
              'dsBaseDN'         : 'uid=tmorris,dc=example,dc=com' }
            </call>          
            
            <call function="'testCase_Postamble'"/>
          </sequence>
        </testcase>
        
        
     <!--- Test Case information

          #@TestMarker           Import Tasks
          #@TestName             Schedule a Import task
          #@TestPurpose          Schedule a import in task mode
          #@TestPreamble
          #@TestStep             Execute a import-ldif in a task
          @TestStep              specify the -t option with the value non null  to schedule an  execution  
          #@TestPostamble        
       --> 
    
            
        <testcase name="getTestCaseName('schedule import-ldif task for scheduled execution in asynchronous mode')">
          <sequence>
            <call function="'testCase_Preamble'"/>              
            
            <call function="'ImportLdifWithScript'">
              { 'location'     : STAF_REMOTE_HOSTNAME ,
              'dsInstanceHost' :  DIRECTORY_INSTANCE_HOST,
              'dsInstancePort' : DIRECTORY_INSTANCE_PORT,
              'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
              'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
              'dsLdifFile'     : '%s/tasks/import.ldif' % remote.data,
              'dsAppend'       : ' ',
              'startTask'      : '20061212000000',
              'dsBackEnd'      : DIRECTORY_INSTANCE_BE}
            </call>
            <call function="'Sleep'">
              { 'location'  :	 STAF_REMOTE_HOSTNAME,
              'sleepForMilliSeconds'  :  40000 }
            </call>
            
            <!--  Check data are imported -->
            <call function="'checkImport'">
              { 'expectedEntries' : ['uid=scarter,dc=example,dc=com',
              'uid=tmorris, dc=example,dc=com'],
              'startDS'     : 'False'              
              }
            </call>
            
            <!-- Delete entries -->
            <call function="'DeleteEntry'">
              { 'dsInstanceHost'  : DIRECTORY_INSTANCE_HOST ,
              'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
              'dsInstanceDn'	 : DIRECTORY_INSTANCE_DN ,
              'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
              'dsBaseDN'         : 'uid=scarter,dc=example,dc=com' }
            </call>
            <call function="'DeleteEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
              'dsInstancePort'  : DIRECTORY_INSTANCE_PORT ,
              'dsInstanceDn'	: DIRECTORY_INSTANCE_DN ,
              'dsInstancePswd'  : DIRECTORY_INSTANCE_PSWD ,
              'dsBaseDN'        : 'uid=tmorris,dc=example,dc=com' }
            </call>          
            
            <call function="'testCase_Postamble'"/>
          </sequence>
        </testcase>                                         
        
        <call function="'testSuite_Postamble'" />
      </sequence>
    </block>      
  </function>
</stax>
