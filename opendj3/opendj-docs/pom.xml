<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! src/main/resources/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011 ForgeRock AS
  !    
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
 <modelVersion>4.0.0</modelVersion>
 <artifactId>opendj-docs</artifactId>
 <name>OpenDJ Core User Documentation</name>
 <inceptionYear>2011</inceptionYear>
 <licenses>
  <license>
   <name>CC BY-NC-ND 3.0</name>
   <url>http://creativecommons.org/licenses/by-nc-nd/3.0/</url>
   <comments>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported</comments>
   <distribution>repo</distribution>
  </license>
 </licenses>
 <packaging>pom</packaging>
 <description>DocBook XML source for OpenDJ core user documentation. Java API and configuration reference documentation is generated from OpenDJ source code.</description>
 <properties>
  <docbkx-src>${basedir}/src/docbkx</docbkx-src>
  <dbstyle-dir>${basedir}/src/docbkx-stylesheets</dbstyle-dir>
  <docbkx-out>${basedir}/target/docbkx</docbkx-out>
  <site-out>${project.parent.basedir}/target/site</site-out>
 </properties>
 <build>
  <plugins>
   <plugin>
    <groupId>com.agilejava.docbkx</groupId>
    <artifactId>docbkx-maven-plugin</artifactId>
    <version>2.0.13</version>
    <executions>
     <execution>
      <id>build-doc</id>
      <phase>pre-site</phase>
      <goals>
       <goal>generate-epub</goal>
       <goal>generate-html</goal>
       <goal>generate-pdf</goal>
       <goal>generate-rtf</goal>
       <goal>generate-manpages</goal>       
      </goals>
      <configuration>
       <!-- Comment the draft elements out for final build -->
       <draftMode>yes</draftMode>
       <draftWatermarkImage>http://docbook.sourceforge.net/release/images/draft.png</draftWatermarkImage>

       <includes>*/OpenDJ-*.xml</includes>
       <xincludeSupported>true</xincludeSupported>

       <!-- EPUB -->
       <epubCustomization>${dbstyle-dir}/epub/coredoc.xsl</epubCustomization>
       
       <!-- HTML -->
       <chunkedOutput>false</chunkedOutput>
       <htmlCustomization>${dbstyle-dir}/html/coredoc.xsl</htmlCustomization>
       <htmlStylesheet>css/coredoc.css</htmlStylesheet>
       
       <!-- PDF, RTF -->
       <foCustomization>${dbstyle-dir}/fo/coredoc.xsl</foCustomization>

       <!-- Resources required but not copied by DocBook.xsl.
            TODO: Figure out how to say foreach in ant. -->
       <preProcess>
        <copy todir='${docbkx-out}/epub/admin-guide/OpenDJ-Admin-Guide/images'>
         <fileset dir='${docbkx-src}/admin-guide/images' />
        </copy>
        <copy todir='${docbkx-out}/html/admin-guide/images'>
         <fileset dir='${docbkx-src}/admin-guide/images' />
        </copy>
        <copy todir='${docbkx-out}/html/admin-guide'>
         <fileset dir='${basedir}/src/main/resources' />
        </copy>
        <copy todir='${docbkx-out}/epub/dev-guide/OpenDJ-Dev-Guide/images'>
         <fileset dir='${docbkx-src}/dev-guide/images' />
        </copy>
        <copy todir='${docbkx-out}/html/dev-guide/images'>
         <fileset dir='${docbkx-src}/dev-guide/images' />
        </copy>
        <copy todir='${docbkx-out}/html/dev-guide'>
         <fileset dir='${basedir}/src/main/resources' />
        </copy>
        <copy todir='${docbkx-out}/epub/install-guide/OpenDJ-Install-Guide/images'>
         <fileset dir='${docbkx-src}/install-guide/images' />
        </copy>
        <copy todir='${docbkx-out}/html/install-guide/images'>
         <fileset dir='${docbkx-src}/install-guide/images' />
        </copy>
        <copy todir='${docbkx-out}/html/install-guide'>
         <fileset dir='${basedir}/src/main/resources' />
        </copy>
        <copy todir='${docbkx-out}/epub/release-notes/OpenDJ-Release-Notes/images'>
         <fileset dir='${docbkx-src}/release-notes/images' />
        </copy>
        <copy todir='${docbkx-out}/html/release-notes/images'>
         <fileset dir='${docbkx-src}/release-notes/images' />
        </copy>
        <copy todir='${docbkx-out}/html/release-notes'>
         <fileset dir='${basedir}/src/main/resources' />
        </copy>
       </preProcess>
      </configuration>
     </execution>
    </executions>
    <dependencies>
     <dependency>
      <groupId>net.sf.docbook</groupId>
      <artifactId>docbook-xml</artifactId>
      <version>5.0-all</version>
      <classifier>resources</classifier>
      <type>zip</type>
      <scope>runtime</scope>
     </dependency>
     <dependency>
      <groupId>net.sf.offo</groupId>
      <artifactId>fop-hyph</artifactId>
       <version>1.2</version> <!-- Should use 2.0, but it doesn't exist? -->
      <scope>runtime</scope>
     </dependency>
    </dependencies>
   </plugin>
   <plugin>
    <artifactId>maven-antrun-plugin</artifactId>
    <executions>
     <execution>
      <id>fix-legalnotice</id>
      <phase>site</phase>
      <goals>
       <goal>run</goal>
      </goals>
      <configuration>
       <detail>true</detail>
       <target>
        <!-- TODO: Figure out how to say foreach in ant. -->
        <copy file='${env.PWD}/legalnotice.html' todir='${basedir}/target/docbkx/html/admin-guide' />
        <copy file='${env.PWD}/legalnotice.html' todir='${basedir}/target/docbkx/html/dev-guide' />
        <copy file='${env.PWD}/legalnotice.html' todir='${basedir}/target/docbkx/html/install-guide' />
        <move file='${env.PWD}/legalnotice.html' todir='${basedir}/target/docbkx/html/release-notes' />       
       </target>
      </configuration>
     </execution>
    </executions>
   </plugin>
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-resources-plugin</artifactId>
    <executions>
     <execution>
      <phase>site</phase>
      <goals>
       <goal>copy-resources</goal>
      </goals>
      <configuration>
       <outputDirectory>${site-out}/doc</outputDirectory>
       <resources>
        <resource>
         <directory>${docbkx-out}/epub/admin-guide</directory>
         <directory>${docbkx-out}/epub/dev-guide</directory>
         <directory>${docbkx-out}/epub/install-guide</directory>
         <directory>${docbkx-out}/epub/release-notes</directory>
         <includes>
          <include>**/*.epub</include>
         </includes>
        </resource>
        <resource>
         <directory>${docbkx-out}/html/</directory>
        </resource>
        <resource>
         <directory>${docbkx-out}/pdf</directory>
         <includes>
          <include>**/*.pdf</include>
         </includes>
        </resource>
        <resource>
         <directory>${docbkx-out}/rtf</directory>
         <includes>
          <include>**/*.rtf</include>
         </includes>
        </resource>
       </resources>
      </configuration>      
     </execution>
    </executions>
   </plugin>
  </plugins>
 </build>
 <parent>
  <groupId>org.opendj</groupId>
  <artifactId>opendj-project</artifactId>
  <version>3.0.0-SNAPSHOT</version>
 </parent>
</project>
