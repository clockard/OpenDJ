<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! trunk/opendj3/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011 ForgeRock AS
  !    
-->
<chapter xml:id='chap-install-cli'
 xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'
 xmlns:xinclude='http://www.w3.org/2001/XInclude'>
 <title>Installing OpenDJ From the Command Line</title>
 
 <para>This chapter covers command-line installation with additional
 information on setup options.</para>

 <procedure>
  <title>To Prepare For Installation</title>
   
  <step>
   <para>Make sure you have the correct Java environment installed.</para>
   
   <screen>$ java -version
java version "1.6.0_24"
Java(TM) SE Runtime Environment (build 1.6.0_24-b07-334-9M3326)
Java HotSpot(TM) 64-Bit Server VM (build 19.1-b02-334, mixed mode)</screen>
      
   <para>If your default Java environment is not appropriate, set
   <literal>OPENDS_JAVA_HOME</literal> to the path to the correct Java
   environment, or set <literal>OPENDS_JAVA_BIN</literal> to the absolute path
   of the <command>java</command> command. The latter environment variable is
   useful for example if you have both 32-bit and 64-bit versions of the Java
   environment installed, and want to make sure you use the 64-bit
   version.</para>
  </step>
    
  <step>
   <para>Get the appropriate installation packages from the <link
     xlink:href='http://www.forgerock.com/downloads-opendj.html'
     >OpenDJ download page</link>.</para>
   <variablelist>
    <varlistentry>
     <term>OpenDJ-<?eval ${project.version}?>.zip</term>
     <listitem>
      <para>Cross-platform OpenDJ directory server installation files</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>opendj.zip</term>
     <listitem>
      <para>Solaris native packages</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>OpenDJ-<?eval ${project.version}?>-DSML.war</term>
     <listitem>
      <para>Cross-platform OpenDJ DSML gateway web archive</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </step>
    
  <step>
   <para>Allow OpenDJ software to use at least 64K (65536) file descriptors
   to operate properly.</para>

   <para>How you set the maximum number of file descriptors per process
   depends on your system. Read your system documentation for
   instructions.</para>

   <para>Typically you use the <command>ulimit -a</command> command to list
   current settings.</para>
  </step>
  
  <step>
   <para>If you plan to install OpenDJ DSML gateway, make sure you have an
   appropriate application server installed.</para>
  </step>

  <step>
   <para>If you plan to configure SSL or TLS to secure network
   communications between the server and client applications, get a
   properly signed digital certificate that your client applications
   recognize, such as one that fits with your organization's PKI or one
   provided by a recognized certificate authority.</para>
   
   <para>To use the certificate during installation, the certificate
   must be located in a key store provided with Java (JKS, JCEKS, PKCS#12),
   or on a PKCS#11 token. To import a signed certificate into a key store,
   you can use the Java <command>keytool</command> command.</para>
   
   <!-- TODO: Show how this is done for at least one key store type. -->
  </step>
 </procedure>
  
 <procedure>
  <title>To Install OpenDJ Directory Server</title>
  
  <step>
   <para>Unzip <filename>OpenDJ-<?eval ${project.version}?>.zip</filename>
   in the file system directory where you want to install the server.</para>
  </step>
  
  <step>
   <para>Run the <command>setup --cli</command> command found in the
   <filename>OpenDJ-<?eval ${project.version}?></filename> directory.</para>
   
   <para>This command starts the setup program in interactive mode on the
   command line, prompting you for each option. Alternatively, use
   additional <command>setup</command> options to specify
   values for the options you choose during interactive mode, thus
   scripting the installation process. See <command>setup --help</command>
   and the notes below.</para>

   <para>The <command>setup</command> command without the
   <literal>--cli</literal> option runs the Quick Start
   GUI installer with your local version of software, as does
   Java WebStart with a remote version of the software.</para>
   
   <screen>$ /path/to/OpenDJ-<?eval ${project.version}?>/setup --cli

OpenDJ <?eval ${project.version}?>
Please wait while the setup program initializes...

What would you like to use as the initial root user DN for the Directory
Server? [cn=Directory Manager]: 
Please provide the password to use for the initial root user: 
Please re-enter the password for confirmation: 

On which port would you like the Directory Server to accept connections from
LDAP clients? [1389]: 

On which port would you like the Administration Connector to accept
connections? [4444]: 
Do you want to create base DNs in the server? (yes / no) [yes]: 

Provide the base DN for the directory data: [dc=example,dc=com]: 
Options for populating the database:

    1)  Only create the base entry
    2)  Leave the database empty
    3)  Import data from an LDIF file
    4)  Load automatically-generated sample data

Enter choice [1]: 3

Please specify the path to the LDIF file containing the data to import: \
/path/to/Example.ldif

Do you want to enable SSL? (yes / no) [no]: 

Do you want to enable Start TLS? (yes / no) [no]: 

Do you want to start the server when the configuration is completed? (yes /
no) [yes]: 


Setup Summary
=============
LDAP Listener Port:            1389
Administration Connector Port: 4444
LDAP Secure Access:            disabled
Root User DN:                  cn=Directory Manager
Directory Data:                Create New Base DN dc=example,dc=com.
Base DN Data: Import Data from LDIF File (/path/to/Example.ldif)

Start Server when the configuration is completed


What would you like to do?

    1)  Set up the server with the parameters above
    2)  Provide the setup parameters again
    3)  Print equivalent non-interactive command-line
    4)  Cancel and exit

Enter choice [1]: 

See /var/....log for a detailed log of this operation.

Configuring Directory Server ..... Done.
Importing LDIF file /path/to/Example.ldif ........... Done.
Starting Directory Server ........... Done.

To see basic server configuration status and configuration you can launch \
/path/to/OpenDJ-<?eval ${project.version}?>/bin/status</screen>
      
   <variablelist>
    <para>Some notes on the options follow.</para>
    <varlistentry>
      <term>Initial root user DN</term>
      <listitem>
        <para>The root user Distinguished Name identifies a
        user who can perform all administrative and other operations
        allowed for the server, called root user due to the similarity
        to the UNIX root. The default, <literal>cn=Directory Manager</literal>,
        is a well-known name. If you have reason to be paranoid, you might
        opt for a different name.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Initial root user password</term>
      <listitem>
        <para>The root user will use simple, password-based authentication.
        Later you can limit cleartext access to avoid snooping, but for
        now use a strong password here unless this is a throwaway server.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>LDAP port</term>
      <listitem>
        <para>The default for LDAP is 389. If you are working as a user
        who cannot open port 389, setup suggests 1389 as a default.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Administration port</term>
      <listitem>
        <para>This is the service entrance used to configure the server,
        run tasks, and so forth. The default is 4444.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Create base DNs</term>
      <listitem>
        <para>You need a base Distinguished Name, such as the default
        <literal>dc=example,dc=com</literal>, to add directory data. If you
        already have LDIF, the base DN you want is the distinguished name
        suffix common to all entries in your LDIF. You can provide more than
        one base DN if your data belongs in more than one suffix.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Import LDIF</term>
      <listitem>
       <para>LDAP data interchange format is the standard text format for
       expressing LDAP data. If you have LDIF already, one reason you might
       not want to import the data at the same time you install is because
       your data uses attributes not defined in the default schema, and so
       you will wait to add schema definitions before you import.</para>
       
       <para>If you have a huge data set to import, you no doubt should
       also increase the import cache size, which you can do by passing
       a Java properties file. You might also prefer to perform data
       import offline.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
     <term>Enable SSL and TLS</term>
     <listitem>
      <para>Enabling Secure Sockets Layer or Transport Layer Security lets
      you protect the network traffic between directory clients and your
      server.</para>
      <variablelist>
       <varlistentry>
        <term>SSL</term>
        <listitem>
         <para>SSL requires its own, separate port for LDAPS traffic. The
         default port for LDAPS is 636. If you are working as a user
         who cannot open port 636, setup suggests 1636 by default.</para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>TLS</term>
        <listitem>
         <para>TLS lets you use StartTLS to negotiate a secure connection
         between a client and server, starting from the same server port
         you configured for LDAP.</para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>X.509 certificates</term>
         <listitem>
          <para>The digital certificate you need for SSL and TLS can be
          self-signed and created on the fly. Trouble is, client
          applications view self-signed certificates like fake IDs, and
          so do not trust them. Self-signed certificates facilitate testing,
          but are not intended for production use.</para>
         </listitem>
       </varlistentry>
      </variablelist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Start the server</term>
     <listitem>
      <para>If you do not start the server during installation, you can use
      the <command>bin/start-ds</command> command later.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </step>
    
  <step>
   <para>Run the <command>status</command> command to make sure your OpenDJ
   server is working as expected.</para>
   
   <screen>$ /path/to/OpenDJ-<?eval ${project.version}?>/bin/status

>>>> Specify OpenDJ LDAP connection parameters

Administrator user bind DN [cn=Directory Manager]: 

Password for user 'cn=Directory Manager': 

          --- Server Status ---
Server Run Status:        Started
Open Connections:         1

          --- Server Details ---
Host Name:                opendj.example.com
Administrative Users:     cn=Directory Manager
Installation Path:        /path/to/OpenDJ-<?eval ${project.version}?>
Version:                  OpenDJ <?eval ${project.version}?>
Java Version:             1.6.0_24
Administration Connector: Port 4444 (LDAPS)

          --- Connection Handlers ---
Address:Port : Protocol : State
-------------:----------:---------
--           : LDIF     : Disabled
0.0.0.0:161  : SNMP     : Disabled
0.0.0.0:636  : LDAPS    : Disabled
0.0.0.0:1389 : LDAP     : Enabled
0.0.0.0:1689 : JMX      : Disabled

          --- Data Sources ---
Base DN:     dc=example,dc=com
Backend ID:  userRoot
Entries:     160
Replication: Disabled</screen>
  </step>
 </procedure>
 
 <note>
  <para>You can install OpenDJ in unattended and silent fashion by using the
  <command>setup</command> command with the <option>--no-prompt</option>
  option, specifying values for all the other options you require.</para>
 </note>

 <procedure>
  <title>To Install OpenDJ DSML gateway</title>
  
  <para>The OpenDJ DSML gateway functions as a web application located in a
  web application container. The DSML gateway runs independently of OpenDJ
  directory server. You configure the gateway to access your directory service
  by editing the <literal>ldap.host</literal> and <literal>ldap.port</literal>
  parameters in the <filename>WEB-INF/web.xml</filename> configuration
  file.</para>
  
  <step>
   <para>Deploy <filename>OpenDJ-<?eval ${project.version}?>-DSML.war</filename>
   according to the instructions for your application server.</para>
  </step>
  
  <step>
   <para>Edit <filename>WEB-INF/web.xml</filename> to ensure the values for
   <literal>ldap.host</literal> and <literal>ldap.port</literal> are
   correct.</para>
  </step>
  
  <step>
   <para>Restart the web application container according to the instructions
   for your application server.</para>
  </step>
 </procedure>

</chapter>

