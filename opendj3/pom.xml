<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CDDL HEADER START
  !
  ! The contents of this file are subject to the terms of the
  ! Common Development and Distribution License, Version 1.0 only
  ! (the "License").  You may not use this file except in compliance
  ! with the License.
  !
  ! You can obtain a copy of the license at
  ! trunk/opendj3/legal-notices/CDDLv1_0.txt
  ! or http://forgerock.org/license/CDDLv1.0.html.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! When distributing Covered Code, include this CDDL HEADER in each
  ! file and include the License file at
  ! trunk/opendj3/legal-notices/CDDLv1_0.txt.  If applicable,
  ! add the following below this CDDL HEADER, with the fields enclosed
  ! by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CDDL HEADER END
  !
  !      Copyright 2011 ForgeRock AS
  !    
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.forgerock</groupId>
    <artifactId>forgerock-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>
  <groupId>org.forgerock.opendj</groupId>
  <artifactId>opendj-project</artifactId>
  <version>3.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>OpenDJ Directory Services Project</name>
  <description>
    OpenDJ is a new LDAPv3 compliant directory service, developed for the Java
    platform, providing a high performance, highly available and secure store
    for the identities managed by enterprises.
  </description>
  <url>http://www.opendj.org/</url>
  <issueManagement>
    <system>Jira</system>
    <url>https://bugster.forgerock.org/jira/browse/OPENDJ</url>
  </issueManagement>
  <mailingLists>
    <mailingList>
      <name>OpenDJ Users Mailing List</name>
      <archive>http://lists.forgerock.org/pipermail/opendj/</archive>
      <post>opendj@forgerock.org</post>
    </mailingList>
    <mailingList>
      <name>OpenDJ Developers Mailing List</name>
      <archive>http://lists.forgerock.org/pipermail/opendj-dev/</archive>
      <post>opendj-dev@forgerock.org</post>
    </mailingList>
  </mailingLists>
  <scm>
    <url>https://svn.forgerock.org/opendj/trunk/opendj3/</url>
    <connection>scm:svn:https://svn.forgerock.org/opendj/trunk/opendj3/</connection>
    <developerConnection>scm:svn:https://svn.forgerock.org/opendj/trunk/opendj3/</developerConnection>
    <tag>HEAD</tag>
  </scm>
  <ciManagement>
    <system>jenkins</system>
    <url>http://builds.forgerock.org/job/OpenDJ3%20-%20trunk%20-%20postcommit/</url>
    <notifiers>
      <notifier>
        <type>mail</type>
        <sendOnError>true</sendOnError>
        <sendOnFailure>true</sendOnFailure>
        <sendOnSuccess>false</sendOnSuccess>
        <sendOnWarning>false</sendOnWarning>
        <address>opendj-dev@forgerock.org</address>
      </notifier>
    </notifiers>
  </ciManagement>
  <distributionManagement>
    <site>
      <id>opendj.forgerock.org</id>
      <name>OpenDJ Community</name>
      <url>scp://opendj.forgerock.org/var/www/vhosts/opendj.forgerock.org/httpdocs</url>
    </site>
  </distributionManagement>
  <modules>
    <module>opendj-build-tools</module>
    <module>opendj-ldap-sdk</module>
    <module>opendj-ldap-toolkit</module>
    <module>opendj-ldap-sdk-examples</module>
  </modules>
  <properties>
    <docbkx-src>${basedir}/src/main/docbkx</docbkx-src>
    <dbstyle-dir>${basedir}/src/main/docbkx-stylesheets</dbstyle-dir>
    <docbkx-out>${basedir}/target/docbkx</docbkx-out>
    <site-out>${basedir}/target/site</site-out>
  </properties>
  <build>
    <plugins>
      <plugin>
        <groupId>com.agilejava.docbkx</groupId>
        <artifactId>docbkx-maven-plugin</artifactId>
        <version>2.0.13</version>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>build-doc</id>
            <phase>pre-site</phase>
            <goals>
              <goal>generate-epub</goal>
              <goal>generate-html</goal>
              <goal>generate-pdf</goal>
              <goal>generate-rtf</goal>
              <goal>generate-manpages</goal>
            </goals>
            <configuration>
            <sourceDirectory>${basedir}/src/main/docbkx</sourceDirectory>
       <!-- Comment the draft elements out for final build -->
              <draftMode>yes</draftMode>
              <draftWatermarkImage>http://docbook.sourceforge.net/release/images/draft.png</draftWatermarkImage>

              <includes>*/OpenDJ-*.xml</includes>
              <xincludeSupported>true</xincludeSupported>

       <!-- EPUB -->
              <epubCustomization>${dbstyle-dir}/epub/coredoc.xsl</epubCustomization>
       
       <!-- HTML -->
              <chunkedOutput>false</chunkedOutput>
              <htmlCustomization>${dbstyle-dir}/html/coredoc.xsl</htmlCustomization>
              <htmlStylesheet>css/coredoc.css</htmlStylesheet>
       
       <!-- PDF, RTF -->
              <foCustomization>${dbstyle-dir}/fo/coredoc.xsl</foCustomization>

       <!-- Resources required but not copied by DocBook.xsl.
            TODO: Figure out how to say foreach in ant. -->
              <preProcess>
                <copy todir='${docbkx-out}/epub/admin-guide/OpenDJ-Admin-Guide/images'>
                  <fileset dir='${docbkx-src}/admin-guide/images' />
                </copy>
                <copy todir='${docbkx-out}/html/admin-guide/images'>
                  <fileset dir='${docbkx-src}/admin-guide/images' />
                </copy>
                <copy todir='${docbkx-out}/html/admin-guide'>
                  <fileset dir='${basedir}/src/main/resources' />
                </copy>
                <copy todir='${docbkx-out}/epub/dev-guide/OpenDJ-Dev-Guide/images'>
                  <fileset dir='${docbkx-src}/dev-guide/images' />
                </copy>
                <copy todir='${docbkx-out}/html/dev-guide/images'>
                  <fileset dir='${docbkx-src}/dev-guide/images' />
                </copy>
                <copy todir='${docbkx-out}/html/dev-guide'>
                  <fileset dir='${basedir}/src/main/resources' />
                </copy>
                <copy
                  todir='${docbkx-out}/epub/install-guide/OpenDJ-Install-Guide/images'>
                  <fileset dir='${docbkx-src}/install-guide/images' />
                </copy>
                <copy todir='${docbkx-out}/html/install-guide/images'>
                  <fileset dir='${docbkx-src}/install-guide/images' />
                </copy>
                <copy todir='${docbkx-out}/html/install-guide'>
                  <fileset dir='${basedir}/src/main/resources' />
                </copy>
                <copy
                  todir='${docbkx-out}/epub/release-notes/OpenDJ-Release-Notes/images'>
                  <fileset dir='${docbkx-src}/release-notes/images' />
                </copy>
                <copy todir='${docbkx-out}/html/release-notes/images'>
                  <fileset dir='${docbkx-src}/release-notes/images' />
                </copy>
                <copy todir='${docbkx-out}/html/release-notes'>
                  <fileset dir='${basedir}/src/main/resources' />
                </copy>
              </preProcess>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>net.sf.docbook</groupId>
            <artifactId>docbook-xml</artifactId>
            <version>5.0-all</version>
            <classifier>resources</classifier>
            <type>zip</type>
            <scope>runtime</scope>
          </dependency>
          <dependency>
            <groupId>net.sf.offo</groupId>
            <artifactId>fop-hyph</artifactId>
            <version>1.2</version> <!-- Should use 2.0, but it doesn't exist? -->
            <scope>runtime</scope>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>fix-legalnotice</id>
            <phase>site</phase>
            <inherited>false</inherited>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <detail>true</detail>
              <target>
        <!-- TODO: Figure out how to say foreach in ant. -->
                <copy file='${env.PWD}/legalnotice.html' todir='${basedir}/target/docbkx/html/admin-guide' />
                <copy file='${env.PWD}/legalnotice.html' todir='${basedir}/target/docbkx/html/dev-guide' />
                <copy file='${env.PWD}/legalnotice.html' todir='${basedir}/target/docbkx/html/install-guide' />
                <move file='${env.PWD}/legalnotice.html' todir='${basedir}/target/docbkx/html/release-notes' />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <phase>site</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${site-out}/doc</outputDirectory>
              <resources>
                <resource>
                  <directory>${docbkx-out}/epub/admin-guide</directory>
                  <directory>${docbkx-out}/epub/dev-guide</directory>
                  <directory>${docbkx-out}/epub/install-guide</directory>
                  <directory>${docbkx-out}/epub/release-notes</directory>
                  <includes>
                    <include>**/*.epub</include>
                  </includes>
                </resource>
                <resource>
                  <directory>${docbkx-out}/html/</directory>
                </resource>
                <resource>
                  <directory>${docbkx-out}/pdf</directory>
                  <includes>
                    <include>**/*.pdf</include>
                  </includes>
                </resource>
                <resource>
                  <directory>${docbkx-out}/rtf</directory>
                  <includes>
                    <include>**/*.rtf</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <inherited>true</inherited>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <source>1.6</source>
            <target>1.6</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <properties>
              <property>
                <name>useDefaultListeners</name>
                <value>false</value>
              </property>
              <property>
                <name>listener</name>
                <value>org.forgerock.opendj.maven.testng.OpenDJTestListener</value>
              </property>
            </properties>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <configuration>
            <show>protected</show>
            <quiet>true</quiet>
            <excludePackageNames>com.*</excludePackageNames>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <executions>
            <execution>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <dependencies>
            <dependency>
              <groupId>org.forgerock.opendj</groupId>
              <artifactId>opendj-build-tools</artifactId>
              <version>${project.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>process-classes</id>
              <configuration>
                <configLocation>org/forgerock/opendj/maven/checkstyle/check-src.xml</configLocation>
                <headerLocation>org/forgerock/opendj/maven/checkstyle/opendj.sourceheader</headerLocation>
                <consoleOutput>true</consoleOutput>
                <failsOnError>true</failsOnError>
                <linkXRef>false</linkXRef>
              </configuration>
              <phase>process-classes</phase>
              <goals>
                <goal>checkstyle</goal>
              </goals>
            </execution>
            <execution>
              <id>process-test-classes</id>
              <configuration>
                <sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>
                <configLocation>org/forgerock/opendj/maven/checkstyle/check-unit-tests.xml</configLocation>
                <headerLocation>org/forgerock/opendj/maven/checkstyle/opendj.sourceheader</headerLocation>
                <consoleOutput>true</consoleOutput>
                <failsOnError>true</failsOnError>
                <linkXRef>false</linkXRef>
              </configuration>
              <phase>process-test-classes</phase>
              <goals>
                <goal>checkstyle</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <configuration>
            <locales>en,fr</locales>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.4</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>index</report>
              <report>mailing-list</report>
              <report>issue-tracking</report>
              <report>license</report>
              <report>scm</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
  <repositories>
    <repository>
      <id>forgerock-staging-repository</id>
      <name>ForgeRock Release Repository</name>
      <url>http://maven.forgerock.org/repo/releases</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>forgerock-snapshots-repository</id>
      <name>ForgeRock Snapshot Repository</name>
      <url>http://maven.forgerock.org/repo/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
    <repository>
      <id>glassfish-repository</id>
      <name>GlassFish Repository</name>
      <url>http://download.java.net/maven/glassfish</url>
    </repository>
  </repositories>
  <dependencies>
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-assert</artifactId>
      <version>1.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.8.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>6.0.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
